{"entries":[{"timestamp":1728751282519,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"NotLegos"],[-1,"2"],[1,"Master"],[0,"\",\n    \""]],"start1":15,"start2":15,"length1":17,"length2":22}]}]}],"snapshots":[{"timestamp":1728751282518,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</variable><variable id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</variable><variable id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</variable><variable id=\"SRvF%Vl7CRHE66Kr9~Q[\">lastLaserR</variable><variable id=\"%FT#@+cF!r3!,1uelm~,\">lastLaserC</variable><variable id=\"hs_o5`X:I}y9{R2!_miN\">lastLaserL</variable><variable id=\"}%7r;bz7Byg#SEH9P{dG\">lastSonarRead</variable><variable id=\"u#;Y3,}t+?Ue.~vd$_;0\">lastHue</variable><variable id=\"5rh0sr-gnWZKflz~gbRk\">lastGesture</variable><variable id=\"at2[c#F7*{?za?uyOm!i\">lastHunt</variable><variable id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</variable><variable id=\"Wdm0N8:YM*4Q+_(l9!-/\">fogToggle</variable><variable id=\"vlNJo2)`QokXI:|N|`c|\">theName</variable><variable id=\"uj8c~)bC/;JXc[2;l@N!\">iTook</variable><variable id=\"m`bxu=!~_Nj|:o?}Kk!^\">iBegan</variable><variable id=\"E3,(6Z)tM(C:#!xxP.d,\">isReady</variable><variable id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</variable><variable id=\"y@Q6YNBYQMe6tF/068bo\">lastVolumeRead</variable><variable id=\"W@//5%rK$%/F|oN!f$h$\">digits</variable><variable id=\"-O:q;^~u%Gff-w{^C`Ou\">lastWater</variable></variables><block type=\"function_definition\" id=\":/0t=Iemr2TXN?p3(U7j\" x=\"4616\" y=\"-1251\"><mutation name=\"buttonPress\" functionid=\"hQwd-E[c|~F-X8]@NzHG\"><arg name=\"button\" id=\"ba9wfs6wbjdlsow065y8\" type=\"string\"></arg></mutation><field name=\"function_name\">buttonPress</field><value name=\"ba9wfs6wbjdlsow065y8\"><block type=\"argument_reporter_string\" id=\"e@1XmI,mG=KBo`P|*RhF\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">button</field></block></value><statement name=\"STACK\"><block type=\"NL_OLED_PrintLine\" id=\"Hf:WX+J^-@ZT2EW@o4k/\"><value name=\"text\"><block type=\"text_join\" id=\"I(ZT/IV+ip!#aS4P:iMf\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"8;JmP$Qq-*fP6}FDGr/_\"><field name=\"TEXT\">button: </field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"mKQty16K~{~*qO=@LAeD\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_string\" id=\"%502L,p?Z7SrGjHEI9(/\"><field name=\"VALUE\">button</field></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"toreWGiW#x],,#[^glgG\"><field name=\"NUM\">3</field></shadow></value></block></statement></block><block type=\"function_definition\" id=\"C`^rB_E9:u2Ynn`*E(vG\" x=\"5329\" y=\"-1234\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><field name=\"function_name\">radioSay</field><value name=\"fxkpgrx3u5x98l61f5dik\"><block type=\"argument_reporter_string\" id=\"GqX]wy3vS{!9sX;D[aP?\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">text5</field></block></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><block type=\"argument_reporter_number\" id=\"v`Zn_OG?2Ar?l@QwFt9(\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">val</field></block></value><statement name=\"STACK\"><block type=\"radio_datagram_send_value\" id=\"]P]s1:s}c{A65TiIGS}k\"><value name=\"name\"><block type=\"text_join\" id=\"%v|_PfZG/4ZqD.f`rLmi\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"/GT0d;QY*^_M{T2Dn-A/\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"9ixmmk6jIJW:b=[428Vm\"><field name=\"VAR\" id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</field></block></value><value name=\"ADD1\"><shadow type=\"text\" id=\"TZ;CT:kLoM/UhA=Pm_0P\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_string\" id=\"4@aq]wf3W(}~ZFTG+r-[\"><field name=\"VALUE\">text5</field></block></value></block></value><value name=\"value\"><block type=\"argument_reporter_number\" id=\"LJ$4v|IhyjhHl=)(J[rA\"><field name=\"VALUE\">val</field></block></value><next><block type=\"NL_OLED_PrintLine\" id=\"o^vjZw]K2c`FLa9C;dj^\"><value name=\"text\"><block type=\"text_join\" id=\"0Qs=^VTt^y-g(/u!48m4\"><mutation items=\"4\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"2i76EhsWbjY6=yR5Y9r5\"><field name=\"TEXT\">said: </field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"g^e=!2pIjlRaas^jdK$V\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_string\" id=\"URT8F;H^0bF`gRISn(^`\"><field name=\"VALUE\">text5</field></block></value><value name=\"ADD2\"><shadow type=\"text\" id=\"s9+9[@VO_?W(A!qUq(P@\"><field name=\"TEXT\">=</field></shadow></value><value name=\"ADD3\"><shadow type=\"text\" id=\"F:q3dSS|7k9/A+![U:(!\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_number\" id=\"%Fx9yw5W28]D?)s_HmI)\"><field name=\"VALUE\">val</field></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\".zvhQ_(p{FKaiCZy=So:\"><field name=\"NUM\">7</field></shadow></value></block></next></block></statement></block><block type=\"every_interval\" id=\"~|K=Uh-X#s!zs@T/vXZ^\" x=\"30\" y=\"-458\"><value name=\"interval\"><shadow type=\"longTimePicker\" id=\"ey:*03(OC}cnsj[T1^.(\"><field name=\"ms\">2000</field></shadow></value><statement name=\"HANDLER\"><block type=\"NL_OLED_PrintLine\" id=\"*8.hr,rwNZDPcp2Xf9/(\"><value name=\"text\"><block type=\"text_join\" id=\"9Fu~5]]tr`++N9Zw=3hf\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"djS*a!8%!i#gU(N1HwOo\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"zaJd8y0=BVd8w{@[H8{Z\"><field name=\"VAR\" id=\"uj8c~)bC/;JXc[2;l@N!\">iTook</field></block></value><value name=\"ADD1\"><shadow type=\"text\" id=\"r`~;+:bR-w`HUjNp)hF=\"><field name=\"TEXT\"></field></shadow></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\".U?.IGQBeI^6m_X8=3L|\"><field name=\"NUM\">5</field></shadow></value></block></statement></block><block type=\"every_interval\" id=\"IZjJbZ[Z5*!33bq$@:SC\" x=\"703\" y=\"-454\"><value name=\"interval\"><shadow type=\"longTimePicker\" id=\"^GGXRxvdBT4#t5#_owT]\"><field name=\"ms\">500</field></shadow></value><statement name=\"HANDLER\"><block type=\"controls_if\" id=\"F2@TSpso0^lC(`_n;{P(\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"**txIh-yZ2!/{Aph:pcf\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"o4H8p@WA*lnm%9Uj,dIQ\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field></block></value><statement name=\"DO0\"><block type=\"NL_MP3_UpdateVolume\" id=\"]zva^II4WMT6uU6M*l?7\"></block></statement><statement name=\"ELSE\"><block type=\"controls_if\" id=\"btNApy6UggJvXl2xpAB6\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"Lh{Q!NP]kYWL{|]=stcU\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_operation\" id=\"2*r9a[g@[`@i;_AR2r}*\"><field name=\"OP\">OR</field><value name=\"A\"><shadow type=\"logic_boolean\" id=\"O7.m4aj;*,8f,/^*G8|6\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\" id=\"am,4cw$Lx0X/4YAQaD=g\"><value name=\"BOOL\"><shadow type=\"logic_boolean\" id=\"WKy,jD:lwQ2@U?;~k/.f\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"=Am7K`!?:p@X/j/.T;}@\"><field name=\"VAR\" id=\"Wdm0N8:YM*4Q+_(l9!-/\">fogToggle</field></block></value></block></value><value name=\"B\"><shadow type=\"logic_boolean\" id=\"x}%iNTwPr2SNzcUlzm*s\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"ggd[YA^lB-yezwq}VGbg\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"RV!g_W;#sLdY?krGcxnQ\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"CXGvM[E)M!M[ido@N$2U\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"Di/3M6E0Q[6o.IX-lLx/\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value><statement name=\"DO0\"><block type=\"NL_RELAY_FogSet\" id=\"irHX`$?QHILt,PH.Lf9K\"><field name=\"level\">notLegos.fogLevels.none</field></block></statement><statement name=\"ELSE\"><block type=\"controls_if\" id=\"9e)ia~HAnHxa[G(Yx~73\"><mutation elseif=\"2\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"8.B-Y#E*;4-VTnG|n$@/\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"m212)KM)a-|$WDAbKh#Z\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"KW2WM0O,~Fauy2tj~SzO\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"^CS,aFiPf^gy@851X7qf\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"K.t0EY,pky~3`H[x7t$O\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"NL_RELAY_FogSet\" id=\"lxMIQc4OJx(v~kXv?QHB\"><field name=\"level\">notLegos.fogLevels.light</field></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"N.V~qcyZA4f*Q?rD#+}3\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"ssH|1bqp-|F?rphL4f%[\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"WEDRC?N~}5_-B4-K0=}0\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"uD.,=_t;=`B?;Lgd_Ba3\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"uuvoIx#^Pj3=z_)^dR(+\"><field name=\"NUM\">2</field></shadow></value></block></value><statement name=\"DO1\"><block type=\"NL_RELAY_FogSet\" id=\"`.=/yu!eAQ+Zri$gh14z\"><field name=\"level\">notLegos.fogLevels.medium</field></block></statement><value name=\"IF2\"><shadow type=\"logic_boolean\" id=\"l%r0c,:XX(oT+Fgq}%24\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"z|Uq?b6[7#wB*PfZP8U5\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"(#4Wkk}gm{$(qj6n)uIg\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"1j@FledxZZhX6sH:Z8bD\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"yxx8oS(YpP-T~OOY,c-}\"><field name=\"NUM\">3</field></shadow></value></block></value><statement name=\"DO2\"><block type=\"NL_RELAY_FogSet\" id=\"PV+$A8;cUfB{1T?eA4/x\"><field name=\"level\">notLegos.fogLevels.heavy</field></block></statement></block></statement></block></statement></block></statement></block><block type=\"input_logo_event\" id=\"8EXDL#J%w8x:YFt%CJjf\" x=\"2320\" y=\"-435\"><field name=\"action\">TouchButtonEvent.Touched</field><statement name=\"HANDLER\"><block type=\"controls_if\" id=\"iNk7oFcNCS-e=o`L5SHM\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"[[kmx+16bW*qS%|^VJM.\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"0Jt@X(-W_.s11Im{Osz4\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field></block></value><statement name=\"DO0\"><block type=\"NL_MP3_PlayerSay\" id=\"1q~R({/CGE4yMEnUvJ{B\"><field name=\"saying\">notLegos.playerSaying.ready</field><next><block type=\"NL_MP3_SfxPlay\" id=\"}_bom4RV?)|){{]55%yT\"><field name=\"sfx\">notLegos.sfxType.fire</field><next><block type=\"NL_MP3_MusicPlay\" id=\"l%BP`Dv-pVqoWzZyK+;G\"><field name=\"genre\">notLegos.musicGenre.intro</field></block></next></block></next></block></statement></block></statement></block><block type=\"pxt-on-start\" id=\";uLbA8NM?|jfzzI}(S{:\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\" id=\":z6VHl3#yi8$z7%8v)Eh\"><field name=\"VAR\" id=\"y@Q6YNBYQMe6tF/068bo\">lastVolumeRead</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"V!5K[Jp:0g2wp8B[4[kH\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"jH|B/q9?^{6@2a_n]r[@\"><field name=\"VAR\" id=\"}%7r;bz7Byg#SEH9P{dG\">lastSonarRead</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"-(rKqmdFRy#oPR9}k4U4\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"Mw~H5VIs01Yhg.F0N-dE\"><field name=\"VAR\" id=\"5rh0sr-gnWZKflz~gbRk\">lastGesture</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"CtHuv#FrqwlE:]Q#);C8\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"X-n]|aYwdrI7hE7$d3*g\"><field name=\"VAR\" id=\"u#;Y3,}t+?Ue.~vd$_;0\">lastHue</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"T!U!Ncd@Ozmdl@#GhF^9\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"c[d]t:r`9!$Y;0]~}=l-\"><field name=\"VAR\" id=\"SRvF%Vl7CRHE66Kr9~Q[\">lastLaserR</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"h-yl8dt;IN3l7?MU_X^W\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"W:Hbfy={4%X7Jo/IzySs\"><field name=\"VAR\" id=\"hs_o5`X:I}y9{R2!_miN\">lastLaserL</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"a^,rcO}U/v)DN%7e0Zdk\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"$TLq4Hkr0{{oAC;TAyPT\"><field name=\"VAR\" id=\"%FT#@+cF!r3!,1uelm~,\">lastLaserC</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"Gl+ckDn!p|/x66q]CzkH\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"Cir|#1MwPB.nL#erfQA$\"><field name=\"VAR\" id=\"at2[c#F7*{?za?uyOm!i\">lastHunt</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"lo/*`6LXG5~*:aDqzp`k\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"B5+xG~x_n!DjQ_vN52QW\"><field name=\"VAR\" id=\"Wdm0N8:YM*4Q+_(l9!-/\">fogToggle</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"|gxtI|upD{:WCH(ZX~dY\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"f!$,s]i*lbz_nTVA}a@}\"><field name=\"BOOL\">FALSE</field></block></value><next><block type=\"variables_set\" id=\";urVV`%}c=g}u9GA_agk\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"zPyQ;4UF=@03E?ID]b+P\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"variables_set\" id=\"y/@2rNAb]BSxjyW,ORLD\"><field name=\"VAR\" id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"(NdU9u~rvLJIXl,~_~yJ\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"aL5EN_ks*K?aFgHmi^(W\"><field name=\"TEXT\">KC$</field></block></value><next><block type=\"pin_set_audio_pin_enabled\" id=\"n6vJ$n.iGaI2HkbM!|$q\"><value name=\"enabled\"><shadow type=\"logic_boolean\" id=\"g0Vsxz-6P/#jd{i_cZs_\"><field name=\"BOOL\">FALSE</field></shadow></value><next><block type=\"device_led_enable\" id=\"UZNLAHP6aNW@nrxYRIPB\"><value name=\"on\"><shadow type=\"logic_boolean\" id=\";`Qe/qqY?GI6+qK^,Ap5\"><field name=\"BOOL\">FALSE</field></shadow></value><next><block type=\"variables_set\" id=\"^K8:6R/nm^f|:aI#LBH%\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"SPSD+THPj;z.a,`,HGr;\"><field name=\"NUM\">0</field></shadow><block type=\"logic_compare\" id=\"phhxSZ6]MiE#B%,8$lZd\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\" id=\"vh5X2-vN9jId@V.hHX+A\"><field name=\"NUM\">0</field></shadow><block type=\"NL_SENSOR_SonarFirstRead\" id=\"MJ(7S6AJ41KPP-dd/aP]\"><field name=\"pin1\">DigitalPin.P8</field><field name=\"pin2\">DigitalPin.P9</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"P[CsEGGvW5*+#BM#63JB\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"radio_set_group\" id=\"nD;PhA1)|yTjq4YRGFow\"><value name=\"ID\"><shadow type=\"math_number_minmax\" id=\"aK{7w~dM3yJMYa4{b_p[\"><mutation min=\"0\" max=\"255\" precision=\"0\"></mutation><field name=\"SLIDER\">171</field></shadow></value><next><block type=\"NL_OLED_Init\" id=\"g^vKCXZ[G81Z3tvGUBOF\"><next><block type=\"controls_if\" id=\"!jt[_`0DkY!2_t`X47nx\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"f4$.sX%4W{#jhJ%,QW7l\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"zO062+saH2~^~;rwc(Si\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field></block></value><statement name=\"DO0\"><block type=\"NL_SENSOR_TrimpotSet\" id=\",l(ST[Z0N6|3:V1_[,cP\"><field name=\"aPin\">AnalogPin.P10</field><next><block type=\"variables_set\" id=\"eok^]u%{giW=)B.;,G(]\"><field name=\"VAR\" id=\"W@//5%rK$%/F|oN!f$h$\">digits</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"+hcGHbl!,UO[er-BIR7G\"><field name=\"NUM\">0</field></shadow><block type=\"nl_digits_create\" id=\"rjuDkab3_rRFQZOY)UZ7\"><field name=\"cPin\">DigitalPin.P7</field><field name=\"dPin\">DigitalPin.P6</field></block></value><next><block type=\"nl_digits_number\" id=\"05;J^6w5b:zUQu#%|(=u\"><value name=\"display\"><block type=\"variables_get\" id=\"qrEok((P0l4y`oe?csZM\"><field name=\"VAR\" id=\"W@//5%rK$%/F|oN!f$h$\">digits</field></block></value><value name=\"num\"><shadow type=\"math_number\" id=\"0iB0XhtZX*JG4d4gJ?{U\"><field name=\"NUM\">-1000</field></shadow></value><next><block type=\"device_set_digital_pin\" id=\"uLot=6_~9J(z^JGP,}8A\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"AXHZ:/p*KAq?A++g+B!C\"><field name=\"pin\">DigitalPin.P13</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\" id=\":G9yBu6ELgG(zt+kQ{QP\"><mutation min=\"0\" max=\"1\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"NL_MP3_InitiateAs\" id=\"mqYJTBTN5PH:88f^4Fg8\"><field name=\"type\">notLegos.mp3type.music</field><field name=\"sPin\">SerialPin.P14</field><next><block type=\"NL_MP3_InitiateAs\" id=\"ATgoOYOfKx,(m$V0YJ}9\"><field name=\"type\">notLegos.mp3type.sfxvoice</field><field name=\"sPin\">SerialPin.P15</field><next><block type=\"NL_MP3_InitiateAs\" id=\"Yx[q`m!i3!8`p;v`kZZB\"><field name=\"type\">notLegos.mp3type.player</field><field name=\"sPin\">SerialPin.P16</field><next><block type=\"NL_PIXEL_CastleSay\" id=\"trruh$)tr0?izKDVZZG|\"><field name=\"sockPin\">DigitalPin.P11</field><field name=\"wheelPin\">DigitalPin.P5</field><field name=\"scorePin\">DigitalPin.P12</field><next><block type=\"device_pause\" id=\"y_8c(og31hNa55CM2L/*\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"5yb[tS%*VD{y7%Chh+dC\"><field name=\"ms\">20</field></shadow></value><next><block type=\"NL_MP3_SetVolume\" id=\"XbqC*v8#v-C:!=Ryb4wU\"><field name=\"mp3bit\">notLegos.mp3type.sfxvoice</field><value name=\"vol\"><shadow type=\"math_number\" id=\"@=.}!3_|6=YWe_27VXwI\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"NL_MP3_SetVolume\" id=\"48mr~$Di7SdVHLPuwO1B\"><field name=\"mp3bit\">notLegos.mp3type.player</field><value name=\"vol\"><shadow type=\"math_number\" id=\"o!*oX08u9?:VY_KQgjkX\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"NL_MP3_SetVolume\" id=\"Rf`I/@Kr-`l?/-Kdbyj_\"><field name=\"mp3bit\">notLegos.mp3type.music</field><value name=\"vol\"><shadow type=\"math_number\" id=\"$r,~WFI9{B/Keuo)(aF8\"><field name=\"NUM\">100</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_digital_pin\" id=\"t].Gr7~4cDF3,rdy|#1r\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"Lm6];`:v4$uHdvz3I?$]\"><field name=\"pin\">DigitalPin.P0</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"oOAcx_QFj]@dK25h!n6P\"><mutation min=\"0\" max=\"1\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_digital_pin\" id=\",UFDaGyDkeb#j-HlLKsV\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"Q^a?8FJgh]UOG$-D*|7)\"><field name=\"pin\">DigitalPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"DP.*YohviBu2U+sE-i9O\"><mutation min=\"0\" max=\"1\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"device_set_digital_pin\" id=\"FKx1U|/3ENl-,XGC3S*v\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"6]7kM:2km1D{C6oasNz0\"><field name=\"pin\">DigitalPin.P8</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"$Zj9O^Q;MCK1Z~^:-]![\"><mutation min=\"0\" max=\"1\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"device_set_digital_pin\" id=\"-ONi.Q%At9y/IZBJ:/,+\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"wpQn=ijVHV1tbABkM::Y\"><field name=\"pin\">DigitalPin.P12</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"En1[q5tWgrzD@H0]x:y7\"><mutation min=\"0\" max=\"1\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"device_set_digital_pin\" id=\"i=*dQkEVs@ZA(RR5NfSh\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"##bl%[QE@.G7s?y+(%FD\"><field name=\"pin\">DigitalPin.P13</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"DQDBACQEIH4*utTpg;7?\"><mutation min=\"0\" max=\"1\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"%_vwmOSUS*!5X_}h`s{z\"><field name=\"motor\">notLegos.motors.fan</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"NL_MOTOR_Set\" id=\"mw+._t/6zIavp/m^NLaL\"><field name=\"motor\">notLegos.motors.redrack</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"$xesu#[/(%L7+1QSKQ0g\"><field name=\"motor\">notLegos.motors.shark</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\".Whvdt?!zW6m.n#p[o/,\"><field name=\"motor\">notLegos.motors.ghost</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"j74]=un7:sDNECRW060c\"><field name=\"motor\">notLegos.motors.cannon</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"!Cilwtg0k9R8tn@60x)l\"><field name=\"motor\">notLegos.motors.oarrack</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"MU($qCBJ@xxi(^e#tR?h\"><field name=\"motor\">notLegos.motors.shell</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"E9k}DnVa|e~tgP5a9d=I\"><field name=\"motor\">notLegos.motors.door</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"5R=-JbFv[Wd3Nb(Czoc4\"><field name=\"motor\">notLegos.motors.dragon</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_MOTOR_Set\" id=\"@t/2bm0JDGOw#.7u*!v_\"><field name=\"motor\">notLegos.motors.wheel</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"NL_PIXEL_CastleDo\" id=\"0|xpP@3yGC:@LFaRF=YQ\"><field name=\"spotPin\">DigitalPin.P14</field><field name=\"brickPin\">DigitalPin.P15</field><field name=\"kongPin\">DigitalPin.P16</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"u?9|w3B1LeEK@!B09q`h\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.parade</field><next><block type=\"function_call\" id=\"/@qZfnf!bJ3m;g|wsQO3\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"Mpxa8!Z85S|G@+6C1[/?\"><field name=\"TEXT\">check</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"XVcm0p`wJ,a.xJvA;GvI\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"variables_set\" id=\"AI?:2vykVrZ8T,hKqgSZ\"><field name=\"VAR\" id=\"m`bxu=!~_Nj|:o?}Kk!^\">iBegan</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"y%6y;lEO$e)hIXiK7S8^\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_running_time_micros\" id=\"B}89VzSssb}cZP!~_fpF\"></block></value><next><block type=\"variables_set\" id=\"*_:gt+A2}`h!}x2em[).\"><field name=\"VAR\" id=\"E3,(6Z)tM(C:#!xxP.d,\">isReady</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"!FoG4ci/M22KC%`4Oy$~\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"$teS|1J4@skg@as,tna@\"><field name=\"BOOL\">TRUE</field></block></value><next><block type=\"variables_set\" id=\"hYpGl;3wTBQ97^/[B,TR\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"|tcIg2)#q*YjfYwd`BGa\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"il^cLTF8|6GdSs6tUlDa\"><field name=\"TEXT\">init</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"every_interval\" id=\":H$M?g|@~Y-D7GLGg3f!\" x=\"1997\" y=\"229\"><value name=\"interval\"><shadow type=\"longTimePicker\" id=\"FQ},!eRn[zvz;IjmA-C*\"><field name=\"ms\">40</field></shadow></value><statement name=\"HANDLER\"><block type=\"variables_set\" id=\"S^T6?ZLHBn94_ml[Brqd\"><field name=\"VAR\" id=\"m`bxu=!~_Nj|:o?}Kk!^\">iBegan</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"thFdW$NLqMHxPY5VGwmN\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_running_time\" id=\"X:,^(@0O!I3vIUKIRiH@\"></block></value><next><block type=\"controls_if\" id=\"I#W0gIb.^P2iG;t:?18w\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"bY3.;3~9rqotl3U-8=?,\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\",!|c_oLE+h;Kqr:k(K@;\"><field name=\"VAR\" id=\"E3,(6Z)tM(C:#!xxP.d,\">isReady</field></block></value><statement name=\"DO0\"><block type=\"controls_if\" id=\"%e1G_$g/[Pl}Wm6q,/Zj\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"zINC(]~p(sXo6/lVs(eY\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"2Y%fyo/5dnSMQldCmR%b\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field></block></value><statement name=\"DO0\"><block type=\"NL_PIXEL_CastleSayTick\" id=\"WnD2/Dp/CEf/:Z+#8GtK\"><next><block type=\"variables_set\" id=\"_7I3R:D_U~!|smC3od?$\"><field name=\"VAR\" id=\"at2[c#F7*{?za?uyOm!i\">lastHunt</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"lJWgqsjjxHFgxm5]B1:M\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_digital_pin\" id=\"fIm1t+m7{PWtBy!!gJ;?\"><value name=\"name\"><shadow type=\"digital_pin_shadow\" id=\"y{(Wer`A)XVN;,FsBYc_\"><field name=\"pin\">DigitalPin.P4</field></shadow></value></block></value><next><block type=\"variables_set\" id=\"7e.qvUqh3/KVM[4s!loj\"><field name=\"VAR\" id=\"5rh0sr-gnWZKflz~gbRk\">lastGesture</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"-C*:XqL,Ud]en7+,(Sl`\"><field name=\"NUM\">0</field></shadow><block type=\"Connected_getGesture\" id=\"+c3L:=rm6]sN#J9Xfim_\"></block></value><next><block type=\"variables_set\" id=\"t,wG_V@3%ryGAXjJnP):\"><field name=\"VAR\" id=\"u#;Y3,}t+?Ue.~vd$_;0\">lastHue</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"?Lhd3c_(E73a{2u**Xaz\"><field name=\"NUM\">0</field></shadow><block type=\"apds9960_readcolor\" id=\"8iS;_TPF$V?MpHD6Tx*(\"></block></value><next><block type=\"variables_set\" id=\"h^$Gs;}o!mnfVV0h7uB3\"><field name=\"VAR\" id=\"}%7r;bz7Byg#SEH9P{dG\">lastSonarRead</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"]Vi~d#05Z$Qhjv2=UQJZ\"><field name=\"NUM\">0</field></shadow><block type=\"NL_SENSOR_SonarNextRead\" id=\"b.+#([$MDTzIkl2/Bjd!\"></block></value><next><block type=\"variables_set\" id=\"W0l~Zxn.D!IkIgF$GwKU\"><field name=\"VAR\" id=\"SRvF%Vl7CRHE66Kr9~Q[\">lastLaserR</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"^AH-,#gG{m(7jPY!z0Z6\"><field name=\"NUM\">0</field></shadow><block type=\"math_js_round\" id=\"4b5n$s?Z+Bz}}Z6,xE+p\"><field name=\"OP\">round</field><value name=\"ARG0\"><shadow type=\"math_number\" id=\"PJF?oDUmF_p1{cts9[)(\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"vcP`mlRo%+mfrG))=V+r\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"s~AZQNsK~$w?K0[m]EEu\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_analog_pin\" id=\"fvvJ)WuY_QArh/{B|R#9\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\"abZq4tc:zXz?,4}HD+R?\"><field name=\"pin\">AnalogReadWritePin.P1</field></shadow></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"5Re:#t$/xiIz4$jkW5bq\"><field name=\"NUM\">80</field></shadow></value></block></value></block></value><next><block type=\"variables_set\" id=\"EQ%9p+mxvr-Fdq/8A$zZ\"><field name=\"VAR\" id=\"%FT#@+cF!r3!,1uelm~,\">lastLaserC</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"wSR1A11gJV}u;GW10/TF\"><field name=\"NUM\">0</field></shadow><block type=\"math_js_round\" id=\"HnPeYoD1tD+31L|s#GN0\"><field name=\"OP\">round</field><value name=\"ARG0\"><shadow type=\"math_number\" id=\"0wA6srdT.Wz48-(CvM6H\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"3ps^mkc)E5+1yzjoi_y.\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"T(=QUpXG0F!=qUOr%h_S\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_analog_pin\" id=\";3K}!{!tR2)n.hiPA1{L\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\"i9#!$wko[?FZ_dm_L8TT\"><field name=\"pin\">AnalogReadWritePin.P2</field></shadow></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\",s){raD;{z@l}Y[[{d/m\"><field name=\"NUM\">80</field></shadow></value></block></value></block></value><next><block type=\"variables_set\" id=\"A%PBEcvm)KvU:=D,h8^!\"><field name=\"VAR\" id=\"hs_o5`X:I}y9{R2!_miN\">lastLaserL</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"4JS.d(b|KO.KL2Qwh`7|\"><field name=\"NUM\">0</field></shadow><block type=\"math_js_round\" id=\"xX`2a@]`:[%aq55k~-0S\"><field name=\"OP\">round</field><value name=\"ARG0\"><shadow type=\"math_number\" id=\"w|!q*+!)77n=]DN@`]+1\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"zfDwZZ:1S/gLADpeRvx2\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"coL8,+xfiyQ_}N;BFSmy\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_analog_pin\" id=\"!m-mrj;bAuXPey+NUMK`\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\"ekRT3hWJM1(,TJKx2a9c\"><field name=\"pin\">AnalogReadWritePin.P3</field></shadow></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\":)KiRkcYO-kf!PAK-fl=\"><field name=\"NUM\">80</field></shadow></value></block></value></block></value><next><block type=\"controls_if\" id=\"CFa0@?X$7jiTS;5k,zND\"><mutation elseif=\"4\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"XLIG[`s2gVz}6uXI!tA=\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"NXK0Ay:#aRZd]fV4Q]Y%\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"~I$FXdP-bl|8P}wld8C+\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\",s|Z^7Kd{9K/T8*2!/b[\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"IvhubHFC7I=A4*,_12Pw\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"c2PJU5d%f_rH)gyB%0Nu\"><field name=\"TEXT\">wait_start</field></block></value></block></value><statement name=\"DO0\"><block type=\"controls_if\" id=\"bFGU~g=8gQ!tA9dPu5/I\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"6L}iq+mF==ta(vYqv_]O\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"(BJ[cgyLnf{^ydp$Kxn|\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"ew?/H@(_B}llwpcsU##?\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"kBwl]7+VXl#lGT3bO{^x\"><field name=\"VAR\" id=\"at2[c#F7*{?za?uyOm!i\">lastHunt</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"$VEzA3qTa*ttnRlre;0$\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"93wo@=OT;R};$@1{aTkF\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"ctg2VZ^VFFUvpJhcZ7Uk\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"KqXj?]U(T:@5Oheth|Bp\"><field name=\"TEXT\">idle</field></block></value><next><block type=\"NL_MP3_MusicPlay\" id=\"feu+a!/aS8Jp@;:9@7Tg\"><field name=\"genre\">notLegos.musicGenre.intro</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"g|^.a(KjI5gI[OCJOFqd\"><field name=\"region\">notLegos.vfxRegion.CastleSayAll</field><field name=\"effect\">notLegos.vfxEffect.parade</field><next><block type=\"function_call\" id=\"0IG=OabbtWGH$MwSS:tD\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"yJYLbr/gmCeyG|ByR2Qy\"><field name=\"TEXT\">boot</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"zR#.+TJ^*+u!lMF-!srH\"><field name=\"NUM\">1</field></shadow><block type=\"NL_MP3_PlaytimeMusic\" id=\"$hd4g8.o91q8C{S30@#8\"></block></value></block></next></block></next></block></next></block></statement></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"7u)^}MoMyP2=3YEF25kA\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"*hfXy3[=%FxSL*1ix-y{\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\",[%Xr8z@#4s2Q_PG%6~V\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"-O~S5ioY_[=i*#3J.~$+\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"IRA~_pdQ1^OCfFU/wOfK\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\",Xk%8~zk!V5ycy9)lMyS\"><field name=\"TEXT\">wait_play</field></block></value></block></value><value name=\"IF2\"><shadow type=\"logic_boolean\" id=\"Xt$2?lgpp-y%T3m?7Bg5\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"$[F#Tq1]zTkX8f0B:UCz\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"K}C+p}ry=ka(Xkw|xIf_\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"+P](@4Oy4BTdn!}kwj6Q\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"J+lFwZRrzD~]wxf]G=96\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"F+sN!xDaWiE)#ArHrAN!\"><field name=\"TEXT\">wait_laser</field></block></value></block></value><value name=\"IF3\"><shadow type=\"logic_boolean\" id=\"caFB|pQ1,5_ByCnj%l9L\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"QlkcgVzPnn4q6T`6=Zz6\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"o|dFS7M.P0i@wE4%U3ZH\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"p`]VL=8]QA6C^8lfrNp;\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"_Bx0UdYJy|Or/(~k7nPW\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"g:{3]mc65b?xV`u8@+](\"><field name=\"TEXT\">init</field></block></value></block></value><statement name=\"DO3\"><block type=\"function_call\" id=\"j*rq-=0N*n,ZIjC|6DD5\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"=x,YyEth85FL,OC(AaA:\"><field name=\"TEXT\">ready</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"W.8~qkH!,WfN?UlMQ@-k\"><field name=\"NUM\">1</field></shadow></value></block></statement><value name=\"IF4\"><shadow type=\"logic_boolean\" id=\"r1E/OJCp$]klJl}h|^-x\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"[J-@7Rdz~):!jS*+bc.N\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"aLlchk-Ce_6CAz*fV9AH\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"Y+@q}LiV@jQJF:Wnw2xl\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"$t!wfPz|)JtXYUW04z#9\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"VG1Jgqw,3(vaTI}XuP}A\"><field name=\"TEXT\">wait_reg</field></block></value></block></value><statement name=\"DO4\"><block type=\"controls_if\" id=\"X2+}(Rgh#?$D0jU[/Ac`\"><mutation elseif=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"q-yN|*]x++L){%g@^y{y\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"h{}D^k6qXF=dc?3K}6N`\"><field name=\"OP\">NEQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"fg0Ycidw=?{%X*=nN@f.\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"Rq+A-Dr70`aAr^)ufWNq\"><field name=\"VAR\" id=\"5rh0sr-gnWZKflz~gbRk\">lastGesture</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"YUlO7GDxH^QJZ{wd_ruP\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"K`F9j}a4x7%I)2Q2r0SY\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"hF_]%w!ZddF~mED6:|5T\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"7%zO2i;H#^mpG++;mqx=\"><field name=\"TEXT\">tutorial</field></block></value><next><block type=\"function_call\" id=\"|BR[3RI0J8lNs5+%[3/c\"><mutation name=\"runTutorial\" functionid=\"Y{7P,}tzRL|sul3I;].}\"></mutation></block></next></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\";}H6f/Vf1mfOJ,)n.Z}E\"><field name=\"BOOL\">FALSE</field></shadow></value></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"NL_PIXEL_CastleDoTick\" id=\"=QDUxHK3mYwhTdg%-xnY\"><next><block type=\"variables_set\" id=\"U=CWyI]MPhy0^vRTfbaf\"><field name=\"VAR\" id=\"Wdm0N8:YM*4Q+_(l9!-/\">fogToggle</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"9W[KG!aX06FRC6v2O#7s\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"*v*N.~ynm,M|6{IAJz%.\"><field name=\"BOOL\">TRUE</field></block></value><next><block type=\"variables_set\" id=\"iTb6W#4oBu.+@8fVvcDY\"><field name=\"VAR\" id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"}NU5=q0sTf%-c1r2HBS6\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_analog_pin\" id=\"-]S06ryEmhAqd4jL6mr`\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\"`EIpYwUwrjBWg]cj*vR~\"><field name=\"pin\">AnalogReadWritePin.P1</field></shadow></value></block></value><next><block type=\"controls_if\" id=\"lvMD?Q5Zzk;q^Fa)#GD?\"><mutation elseif=\"4\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"Ci[}ZwbM6s#/C|pbgH/(\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"}nL%~I@NQbo(2:VBp||(\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\" id=\"gBv`v#r^!WloP`hr[Cka\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"J^rw*u#XYI.a|,EoG0D]\"><field name=\"VAR\" id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"2BqMFSk?;oTG|t0Was)C\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"function_call\" id=\"+F[a]R|fp:jZL)OV8s|B\"><mutation name=\"buttonPress\" functionid=\"hQwd-E[c|~F-X8]@NzHG\"><arg name=\"button\" id=\"ba9wfs6wbjdlsow065y8\" type=\"string\"></arg></mutation><value name=\"ba9wfs6wbjdlsow065y8\"><shadow type=\"text\" id=\"{4*YO4-*%Yjq0K+v7t7v\"><field name=\"TEXT\">A</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"={S:P$1o/$oidP60Kx9A\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.parade</field></block></next></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"PvF}y/O_a,cWwe?)X,xb\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"U{Sk(sF$_Hz8{F8A.COM\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\" id=\"7MNoaTQ8x4.{;{Y6ha9T\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"7SM6ch@LY=2~.*I@YEqt\"><field name=\"VAR\" id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"sYs_AGz{68!narNVWZoS\"><field name=\"NUM\">60</field></shadow></value></block></value><statement name=\"DO1\"><block type=\"function_call\" id=\".(c#cU9X@li+x:/D%Pzw\"><mutation name=\"buttonPress\" functionid=\"hQwd-E[c|~F-X8]@NzHG\"><arg name=\"button\" id=\"ba9wfs6wbjdlsow065y8\" type=\"string\"></arg></mutation><value name=\"ba9wfs6wbjdlsow065y8\"><shadow type=\"text\" id=\"hQn3NWx*)e|)N2]ye?[,\"><field name=\"TEXT\">B</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"dEtTfqvQgGOjfNSlF(#5\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.fire</field></block></next></block></statement><value name=\"IF2\"><shadow type=\"logic_boolean\" id=\"L!*^#v4K?NlnaH=)}08u\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\":iSpzHS=t6Mb}9*)^s4K\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\" id=\"xI!2+RbS7Lh$BD`o6N5)\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"C7MHNlqzr]zwY7,(@FF*\"><field name=\"VAR\" id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"61NLq[UQa7s{%[l-/wP0\"><field name=\"NUM\">110</field></shadow></value></block></value><statement name=\"DO2\"><block type=\"function_call\" id=\"hn`f+jj.k~iGQdm3+S?h\"><mutation name=\"buttonPress\" functionid=\"hQwd-E[c|~F-X8]@NzHG\"><arg name=\"button\" id=\"ba9wfs6wbjdlsow065y8\" type=\"string\"></arg></mutation><value name=\"ba9wfs6wbjdlsow065y8\"><shadow type=\"text\" id=\"S.EV-WbZ]5@TxnQFy`V(\"><field name=\"TEXT\">C</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"0i[%Pp7jER}O])lX(2+E\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.mine</field></block></next></block></statement><value name=\"IF3\"><shadow type=\"logic_boolean\" id=\"?`5u.2l1GkH=R~]s38s*\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"(;|0ma2C(a3d7/Pk/n@#\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\" id=\"lN6Ry3=7It6~[g-O`b8o\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"_l8n(cOV~%8S+$EYR:3d\"><field name=\"VAR\" id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"N-s_DU8|)BQ9h$?uVMy}\"><field name=\"NUM\">200</field></shadow></value></block></value><statement name=\"DO3\"><block type=\"function_call\" id=\"{MiW.dUeMJYU*#UJ@]~l\"><mutation name=\"buttonPress\" functionid=\"hQwd-E[c|~F-X8]@NzHG\"><arg name=\"button\" id=\"ba9wfs6wbjdlsow065y8\" type=\"string\"></arg></mutation><value name=\"ba9wfs6wbjdlsow065y8\"><shadow type=\"text\" id=\"!%f+d_M%dhr!/T[H0bkl\"><field name=\"TEXT\">D</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"-+|homVr/i7#$kX8Fg|g\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.glow</field></block></next></block></statement><value name=\"IF4\"><shadow type=\"logic_boolean\" id=\"5gplXa0h:DGLN.^/xNk;\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"15lDaPI,Twajjl:7G_0Z\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\" id=\"1pM,qeSHW:v:FgH`O^Uu\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"hX8TI7B=fc-SSjiAVCXJ\"><field name=\"VAR\" id=\"h/D9XaIzf|A5NH51qbEm\">buttonRow</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"IpFPN_iN3r@MCaVsaZm[\"><field name=\"NUM\">700</field></shadow></value></block></value><statement name=\"DO4\"><block type=\"function_call\" id=\"h9.MjcnqxmixcEVgn7[W\"><mutation name=\"buttonPress\" functionid=\"hQwd-E[c|~F-X8]@NzHG\"><arg name=\"button\" id=\"ba9wfs6wbjdlsow065y8\" type=\"string\"></arg></mutation><value name=\"ba9wfs6wbjdlsow065y8\"><shadow type=\"text\" id=\"xZB;sckPai[%{vt-%w/i\"><field name=\"TEXT\">E</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"(|KAC,,3FtGof,4B-s$_\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.off</field></block></next></block></statement></block></next></block></next></block></next></block></statement></block></statement><next><block type=\"function_call\" id=\"Fz*aJLp6;6!KVf+y?3=!\"><mutation name=\"ready_oled\" functionid=\",fv3PGT/J~k#ZH}9er,/\"></mutation><next><block type=\"NL_OLED_Update3\" id=\"4`Uotl8m~ECcr;kC4t24\"><next><block type=\"variables_set\" id=\"!Us5Z}^|j@]yf0Bp!Cb2\"><field name=\"VAR\" id=\"uj8c~)bC/;JXc[2;l@N!\">iTook</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"4VB}rN,,T+)RLP]ZSeKt\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"RpB](?/l$HoUi/a(S~`q\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"4DW5yoEy_irCvJ1R_#9O\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_running_time\" id=\"]X);LE{O-E;zt;JXy8d_\"></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"?(i;l+F-qGa_wB)v.z-y\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"528O8BaIR?%3j0D(G@9l\"><field name=\"VAR\" id=\"m`bxu=!~_Nj|:o?}Kk!^\">iBegan</field></block></value></block></value></block></next></block></next></block></next></block></next></block></statement></block><block type=\"variables_set\" id=\"UqA5a?qszK#-M1lw5~Ja\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"2466\" y=\"228\"><field name=\"VAR\" id=\"-O:q;^~u%Gff-w{^C`Ou\">lastWater</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"dvi{)4xo$Hf+!?)A|Y0Z\"><field name=\"NUM\">0</field></shadow><block type=\"math_js_round\" id=\"cRgf}ce|p$dx_)HS*#fD\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"OP\">round</field><value name=\"ARG0\"><shadow type=\"math_number\" id=\"t^!KWIX-7fmbQJqAGtOg\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"{JGPWspZ^zH4]v+uDvrg\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"Npih-`4@yZs?*.4~ODM{\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_analog_pin\" id=\"qsM|)j5/={ep]puu6(|,\" disabled-reasons=\"MANUALLY_DISABLED\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\".16#gQ@!IdUlls}^(_Pg\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"pin\">AnalogReadWritePin.P0</field></shadow></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"~jStuEnD,UDRE-$jhn;s\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"NUM\">1</field></shadow></value></block></value></block></value></block><block type=\"radio_on_value_drag\" id=\"B2fcjW./pNMlE:/Oed7C\" x=\"3423\" y=\"411\"><value name=\"HANDLER_DRAG_PARAM_name\"><block type=\"argument_reporter_string\" id=\"0w8f^4Ja9{zh0RjpyPO+\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">name</field></block></value><value name=\"HANDLER_DRAG_PARAM_value\"><block type=\"argument_reporter_number\" id=\",pRG!I!o[tsCRq7t6B`n\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">value</field></block></value><statement name=\"HANDLER\"><block type=\"controls_if\" id=\"A(;Fy=-_?KyFS3)@z81t\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"*ue8jh,mrwAh[UO$Z+cw\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"@n8_usRvU17)Duja)$L1\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"|9-i_Q.xNX(G!9}_6*?Q\"><field name=\"NUM\">0</field></shadow><block type=\"string_substr\" id=\"JX+aqSvLuHcpbG#^*d:f\"><value name=\"this\"><shadow type=\"text\" id=\"Lu!QB3)B}+*Sls?Uu_]N\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_string\" id=\"~;Rqt-1ZJfJKU*6KeAzw\"><field name=\"VALUE\">name</field></block></value><value name=\"start\"><shadow type=\"math_number\" id=\"Yiz%IL7Z:Ys(8~9?R@vd\"><field name=\"NUM\">0</field></shadow></value><value name=\"length\"><block type=\"text_length\" id=\"*I#YB3[6Xk5qxGzUI_|k\"><value name=\"VALUE\"><block type=\"variables_get\" id=\"g9e,vK9[.f:s+wxZ3z3,\"><field name=\"VAR\" id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</field></block></value></block></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"8mm$$,rvT45-*F)Vujkf\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"jnX`t@B;CEWWfPf!u;TN\"><field name=\"VAR\" id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\")~NIaoH};2.@U*|y^zw}\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"[~}Ew.cPj8+|}cA|C}1s\"><field name=\"NUM\">0</field></shadow><block type=\"string_substr\" id=\"p2G:kKDBQt^C0M[LWaY$\"><value name=\"this\"><shadow type=\"text\" id=\"_5OXC/d20$kd?hec,9l=\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_string\" id=\"dWwgqC_ULR?p{k[Sv$ml\"><field name=\"VALUE\">name</field></block></value><value name=\"start\"><block type=\"text_length\" id=\"=aS_8xnjXe0agQ~DNc(6\"><value name=\"VALUE\"><block type=\"variables_get\" id=\"MF6m,ABn@/Hrv5tD63Ob\"><field name=\"VAR\" id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</field></block></value></block></value><value name=\"length\"><block type=\"math_arithmetic\" id=\"7T8B5]?z88vb)aij1X7x\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"Oq78801e@dkeAxE@BsKR\"><field name=\"NUM\">0</field></shadow><block type=\"text_length\" id=\"DwXd/T!/fh:yyBXch`+k\"><value name=\"VALUE\"><block type=\"argument_reporter_string\" id=\"JPD3d30Id@R2`,zlHXy0\"><field name=\"VALUE\">name</field></block></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"K61s3ah:[k$rA127JEm}\"><field name=\"NUM\">0</field></shadow><block type=\"text_length\" id=\"^|MC:H70T00L5ytvb2NA\"><value name=\"VALUE\"><block type=\"variables_get\" id=\"{*I~jCQY(5`DA%DcQM!y\"><field name=\"VAR\" id=\"e(zt=aWo[lY`jeVUoVJF\">btToken</field></block></value></block></value></block></value></block></value><next><block type=\"controls_if\" id=\"1J[wYzdX*8n2RmR=o_2O\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"a;v_D?+?V9:=c}K,:{MG\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"4Q@c`U,EU?UP[)7C?kfZ\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field></block></value><statement name=\"DO0\"><block type=\"controls_if\" id=\"k2+H[yWOW[E^p4?=~?=^\"><mutation elseif=\"3\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"#][MS~W6R5#MA/YEX:$V\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"b4M(N-!NAk*HI{hsjg7i\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"`R.RTmbuTT-aQ:GF.i|,\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\",Qo.rwf%34Es{(=tx1QV\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"o1ulW-{RDt4F`/Q%4G[G\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"f3AjtvbXRwtk1l)f+b|w\"><field name=\"TEXT\">wstar</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"$nvIn7O$@#tPx`9WhEn0\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"6tA:d3l:TxMk%]Nk7.)*\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"mkic:U,8/mx{^/~`%{3t\"><field name=\"TEXT\">wait_start</field></block></value></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"5U7pf=3(TVo]s+@qJ/BT\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"R,IUyb7fUW]kI{l5a)R#\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"U:95V?rWvpFLFvUk;2KN\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"I4E9b_:fm83A5Kh;R2U=\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"4,r#b{b@,vjq|u_;1^ZU\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"0e/L?@#!lLcz16V25k/v\"><field name=\"TEXT\">welco</field></block></value></block></value><statement name=\"DO1\"><block type=\"controls_if\" id=\"(4RZKi.j;rx{5PtSFS$4\"><mutation elseif=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"(KAeZ`D#)f79ay:Pn~Wv\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"]xE9DG#.gNzImYo;ms?j\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"m:2nu3lJdV[};P*eWW(K\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"6-Q,;{wP0cT.T4w+Vp-^\"><field name=\"VALUE\">value</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"Y_$XpmxVRYb6/UuD/}vG\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"NL_PIXEL_ResetVFX\" id=\",yQ)sfQ9R:`Ob@ffU`~8\"><field name=\"effect\">notLegos.vfxEffect.glow</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"5G?vMceeoU~oOIE3/zx.\"><field name=\"region\">notLegos.vfxRegion.CastleSayAll</field><field name=\"effect\">notLegos.vfxEffect.glow</field><next><block type=\"NL_MP3_VoicePlay\" id=\"z/)L/5LmG5Q_!+j))V(!\"><field name=\"voice\">notLegos.voiceSaying.welcome</field></block></next></block></next></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"Ap7HbX+mn;}T%E.cV4AS\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"wm@?Y7?!!hUawN/]z70*\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"v%vU9)#io!,EYxQddoi~\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\",,*Z~re5I?*JXPm^th5k\"><field name=\"VALUE\">value</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"f,:zhbkmtF~[@f0x_AN#\"><field name=\"NUM\">2</field></shadow></value></block></value><statement name=\"DO1\"><block type=\"NL_PIXEL_SetEffect\" id=\"zpq;fJ,n%9#42m08Tuu:\"><field name=\"region\">notLegos.vfxRegion.CastleSayAll</field><field name=\"effect\">notLegos.vfxEffect.off</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"q]l|du*[W$p5{%$53y.C\"><field name=\"region\">notLegos.vfxRegion.WheelAll</field><field name=\"effect\">notLegos.vfxEffect.fire</field><next><block type=\"device_pause\" id=\"!4w?at6|9F~$U7e2IFR;\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"oIj*!mbh.]3*Cm+uVY#f\"><field name=\"ms\">1200</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"^#tODNBch5yqoy@phspx\"><field name=\"voice\">notLegos.voiceSaying.intro</field><next><block type=\"device_pause\" id=\"ThV:*%pGY[z:FX?Gl,||\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"SExhY(SgPb$xAs6ufAY}\"><field name=\"ms\">3000</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"rg8]1*f*bA[z+U(cqh~_\"><field name=\"region\">notLegos.vfxRegion.CastleSayAll</field><field name=\"effect\">notLegos.vfxEffect.off</field><next><block type=\"device_pause\" id=\"yFAs3Sp7nsB1_9Y3ayuL\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"+=C(a?jF-C|y7JlD[DYq\"><field name=\"ms\">4000</field></shadow></value><next><block type=\"NL_MP3_MusicPlay\" id=\"([NY#yq=|+1)q_oI74[~\"><field name=\"genre\">notLegos.musicGenre.awaiting</field><next><block type=\"variables_set\" id=\"xNFG!gu8`E.(gvx]+ADJ\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"Aa,i~FHlfLCg+`fzO-v3\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"P8OB%R6,fg-JoH[J^s;}\"><field name=\"TEXT\">wait_reg</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement><value name=\"IF2\"><shadow type=\"logic_boolean\" id=\";zlqYN;KI-7%/ixTxP.p\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"|GyAtjG)?/vRDIJPufsa\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"?@::0c4;F`{-IOD#[#3L\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"$HW3Dufz1F|0RQL($7I_\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"k}rIpL8qkm9CU?1mGqUt\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"s]2[DgnZ`+z;oRGfiGb`\"><field name=\"TEXT\">check</field></block></value></block></value><statement name=\"DO2\"><block type=\"NL_PIXEL_SetEffect\" id=\"Yl]wscz$KPhue]zg?-hZ\"><field name=\"region\">notLegos.vfxRegion.CastleSayAll</field><field name=\"effect\">notLegos.vfxEffect.off</field><next><block type=\"function_call\" id=\"X1EXAZY!:At2_2tBS$Du\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"tjLAc(g`hF=8[o-[!W?J\"><field name=\"TEXT\">ready</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"qw)_P|M:ECw~)|e/@PUC\"><field name=\"NUM\">1</field></shadow></value></block></next></block></statement><value name=\"IF3\"><shadow type=\"logic_boolean\" id=\"yw~fZ[;V#tpWo)E7lh;2\"><field name=\"BOOL\">FALSE</field></shadow></value></block></statement><statement name=\"ELSE\"><block type=\"controls_if\" id=\"DG9_h~-k-^TiesbAE!:w\"><mutation elseif=\"3\" else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"wrSX_l[3MNffuqV`Qykk\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"ej*mOpCD5J!EnN]UU9q|\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"+uZh1PG]o_8OAt}1iz/J\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\".:Q1h_)-t*~G]5.uCq};\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"f_~86F#Os]:Yr=f)YV#A\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"Z#/_{CRcVn)g)aF[)vPq\"><field name=\"TEXT\">ready</field></block></value></block></value><statement name=\"DO0\"><block type=\"function_call\" id=\"bmc$s]O[GQkYPyMO;#~d\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"j~/NwL.uMs=twQ.FgVCT\"><field name=\"TEXT\">wstar</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"e?o@axxov+LL;g^6u:r}\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"{5~[G3*T-P1B7a6~SWJ)\"><field name=\"region\">notLegos.vfxRegion.KongFront</field><field name=\"effect\">notLegos.vfxEffect.indicate</field></block></next></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"qCqu1b/:(~`G1w|GS0/w\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"g]5eu!#v`q(l6SrK*]al\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"jvvc[C,[D;25}PfZ*#v[\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"([W;)d(LxZ$-MpIZb.;d\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"n*Y:gx%~D?9bZ9[*KB@q\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"-g@Q;89CS4qWBd5KHs@G\"><field name=\"TEXT\">boot</field></block></value></block></value><statement name=\"DO1\"><block type=\"variables_set\" id=\"OFU.nQ%|1h?`sL[;.{;?\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\":LEzOB5b{MVSwH|L@:j8\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"[R46E?_@b7{52XpUR+;G\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.parade</field><next><block type=\"NL_MOTOR_Set\" id=\"Br?kL/;G;Y4r6z46xzmP\"><field name=\"motor\">notLegos.motors.wheel</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"gf,msI+IuZdw5dl%},VS\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"?%mB]U7?#a]$5*NI01Qm\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\",n@?w`h;cqdkcN5skaVd\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><shadow type=\"math_number\" id=\"UV{2-hdcXHb+MZt[IjD(\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"M#T.xNUl7$,{)6^Bs`5)\"><field name=\"VALUE\">value</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"f2U7XJ1C-L,KZuuBOi5D\"><field name=\"NUM\">1000</field></shadow></value></block></value><next><block type=\"NL_MOTOR_Set\" id=\"ci/(:xPu{0%*uj]8z.a{\"><field name=\"motor\">notLegos.motors.wheel</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"hW%|~Eh1/q|U,+#p|==5\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"}7;`3jQo5cV.6nda!|lq\"><field name=\"ms\">1000</field></shadow></value><next><block type=\"function_call\" id=\"pG#.t~C?E_u|mdm3y.IH\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"Hxsc$hAc{_1[C%lw|Klx\"><field name=\"TEXT\">welco</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"1U}oQ6LsH#5nmi~_kw*5\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"device_pause\" id=\"=ZzY6}Gv^M6]@=D_BqO1\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"xBx8L8x8(dW|/+EE:oKZ\"><field name=\"ms\">200</field></shadow></value><next><block type=\"NL_PIXEL_ResetVFX\" id=\".JQ4%|8wVX5/qC^1;VR=\"><field name=\"effect\">notLegos.vfxEffect.glow</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"Z?UTF;[E3`}L1Qn|WZ.a\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.glow</field><next><block type=\"device_pause\" id=\"_oFR|g^=kPYiyXG!4/mY\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"J,u@BYBVnAx!$^G{KU(z\"><field name=\"ms\">5000</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"hs6Hz!Lf7Lr{w@qn,y1=\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.idle</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"i^c(TgvVC?=}v)=/NeaV\"><field name=\"region\">notLegos.vfxRegion.SpotH</field><field name=\"effect\">notLegos.vfxEffect.mine</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"w^WvUH]~09M#LDO!7HyP\"><field name=\"region\">notLegos.vfxRegion.SpotI</field><field name=\"effect\">notLegos.vfxEffect.mine</field><next><block type=\"device_pause\" id=\"Y6y~prBr57NqK0tPp9Jy\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"yQ.[XpYzF;i7_eWr6g70\"><field name=\"ms\">0</field></shadow></value><next><block type=\"function_call\" id=\"T,5f9w)TBdklMNpgIRqH\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"`O}DDss-z/nYMrXC8LDp\"><field name=\"TEXT\">welco</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\";iOZ1e{n#LxYO/3MYU[W\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"device_pause\" id=\"[m/fRu1XX]b=bedoosVS\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"]^a}$(RA8}nJe[LA_0}D\"><field name=\"ms\">4500</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"A/JRO5y=Il+y8+X:(5x3\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.off</field><next><block type=\"device_pause\" id=\";0YUJ#t?n8^p#Sontp{~\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"xtegkl%n1@F_C;r==}Ww\"><field name=\"ms\">500</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"y/fltFQ^c{8e4j2EkQzW\"><field name=\"region\">notLegos.vfxRegion.BrickDragon</field><field name=\"effect\">notLegos.vfxEffect.indicate</field><next><block type=\"device_pause\" id=\"*/Q3R[bWa30/,wp~*oe{\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"~SXZ;q4wtD~cyIg$H1)o\"><field name=\"ms\">1200</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"ZJjHL7;m.c,u0h@)RVUW\"><field name=\"region\">notLegos.vfxRegion.SpotC</field><field name=\"effect\">notLegos.vfxEffect.indicate</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"jN3pl@;o9fkZ^HpM4YwH\"><field name=\"region\">notLegos.vfxRegion.SpotE</field><field name=\"effect\">notLegos.vfxEffect.indicate</field><next><block type=\"device_pause\" id=\"u##[93{e|t~SjLM^J8W{\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"4v;dVI}8XD;$Dr2t{]AE\"><field name=\"ms\">3000</field></shadow></value><next><block type=\"variables_set\" id=\"1t5VvQvSv0G:|[Nkz09a\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"GrXh1%E):vD,;2T7d,y/\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"`laR`7{8+l5Bo+aH||{O\"><field name=\"motor\">notLegos.motors.door</field><field name=\"state\">notLegos.motorState.max</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><value name=\"IF2\"><shadow type=\"logic_boolean\" id=\"QASCKm5}`*IbV1,7X;nS\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"k#:wo,bksZ8rM%)~jn@c\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"`UigkL//@|dlAf1zIh-?\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"+@T/HGxX:qo$O$BMZptl\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"48Q1n;-Ei5BD`V!CNKqd\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"JDOA1epIS.SVL80WHjRf\"><field name=\"TEXT\">tutor</field></block></value></block></value><statement name=\"DO2\"><block type=\"controls_if\" id=\";m)]UcA`~w#h4pWVi9uq\"><mutation elseif=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"F[7ZzGP7LZ15--AKeL9n\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"loqf,3E:5+HoDUhdQG@8\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"m6x=o)3d_zh*+OP6Vyy:\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"@]+92pP[,,wJx=pg]RC/\"><field name=\"VALUE\">value</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"4fo.@7=CA@/,fNiioc.[\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"NL_PIXEL_SetEffect\" id=\"RKL=5KJ~}Y%4Xe#7mEes\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.off</field><next><block type=\"device_pause\" id=\"M6c9b@cl9ZzY._8*-`T:\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"PC+2;$pz,GP2x2v(i_~B\"><field name=\"ms\">4000</field></shadow></value><next><block type=\"NL_PIXEL_ResetVFX\" id=\"D@cw3MSR{Z=nw=9Pu_G4\"><field name=\"effect\">notLegos.vfxEffect.glow</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"=W9LP!k|Ry6!nq~CYyOb\"><field name=\"region\">notLegos.vfxRegion.SpotA</field><field name=\"effect\">notLegos.vfxEffect.glow</field><next><block type=\"device_pause\" id=\"#dI]SsbWP(OSzXPlY^PU\"><value name=\"pause\"><shadow type=\"timePicker\" id=\")3:6Ae6+@P)he}6w/D,u\"><field name=\"ms\">6000</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"~S`^%zmxsrPWcBR~89SX\"><field name=\"region\">notLegos.vfxRegion.SpotB</field><field name=\"effect\">notLegos.vfxEffect.indicate</field><next><block type=\"NL_PIXEL_SetEffect\" id=\"]vj-i%e$wAy10owY!q5$\"><field name=\"region\">notLegos.vfxRegion.SpotC</field><field name=\"effect\">notLegos.vfxEffect.indicate</field></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"e!7bFs4War}Z4$sYG10H\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"xUZFpg|5^Hi3Yc%|Q}CQ\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"rx@WTL/,El^l7tA=ns$)\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"W|Y3=!KPt%WpX8D_(/,O\"><field name=\"VALUE\">value</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"!@1y=n6o:$RG4.D]FJyG\"><field name=\"NUM\">2</field></shadow></value></block></value></block></statement><value name=\"IF3\"><shadow type=\"logic_boolean\" id=\"1vTPI28BKV?9X`q?r2^$\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"#rX+lC-gwI~65M=!Kvv)\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"J-TiMn._ua7-ZsrY^cI9\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"vrfw55Ycm).[nmCuQh`$\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"f@++[_zk36gN$ee,ith#\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"KA%[JIzHNgztsJ6rLkWh\"><field name=\"TEXT\">welco</field></block></value></block></value></block></statement><next><block type=\"NL_OLED_PrintLine\" id=\"~PewD`k~?;UOufUcFuY*\"><value name=\"text\"><block type=\"text_join\" id=\"2eBtpa.G[5:L@ql/c8Ne\"><mutation items=\"4\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"pF/`1EegX_d#)WJK%@g3\"><field name=\"TEXT\">heard: </field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"M(,HG1F8[L(Z8pRtf27Z\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"j;Zkrf//g/CDg%!dT[e+\"><field name=\"VAR\" id=\"vlNJo2)`QokXI:|N|`c|\">theName</field></block></value><value name=\"ADD2\"><shadow type=\"text\" id=\":T,V6l6dD15,J^1_L6)A\"><field name=\"TEXT\">=</field></shadow></value><value name=\"ADD3\"><shadow type=\"text\" id=\"@Z]]Mm-?6cR^?KmT2ops\"><field name=\"TEXT\"></field></shadow><block type=\"argument_reporter_number\" id=\"$r#W%%HQ75yh1*+spr4F\"><field name=\"VALUE\">value</field></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"^)?.2u?Lpt.z$~P+a?V]\"><field name=\"NUM\">6</field></shadow></value></block></next></block></next></block></statement></block></statement></block><block type=\"every_interval\" id=\"1zEdlqd{.,2ZC#MgF(I@\" x=\"936\" y=\"631\"><value name=\"interval\"><shadow type=\"longTimePicker\" id=\"iDrP*$C0rojmNY-0wTBL\"><field name=\"ms\">500</field></shadow></value></block><block type=\"nl_digits_number\" id=\"rzJh+;6ZoHMPt_.j2)`$\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"980\" y=\"799\"><value name=\"display\"><block type=\"variables_get\" id=\"jX~yFkfRb:$GTRAS)iJR\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"VAR\" id=\"W@//5%rK$%/F|oN!f$h$\">digits</field></block></value><value name=\"num\"><shadow type=\"math_number\" id=\"v9oXNriYJxh52?G9+c-t\"><field name=\"NUM\">-1000</field></shadow><block type=\"variables_get\" id=\"1F(Fu25,sSdmArB/GQ/1\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"VAR\" id=\"-O:q;^~u%Gff-w{^C`Ou\">lastWater</field></block></value></block><block type=\"device_get_analog_pin\" id=\"|Xm1(QWi-~VP|UAa3sA@\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"1127\" y=\"870\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\"hBVbz-y(~T{Ff5/n:A(V\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"pin\">AnalogReadWritePin.P0</field></shadow></value></block><block type=\"logic_compare\" id=\"=VRi?4!!fs-%-x4u:QU-\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"2223\" y=\"1173\"><field name=\"OP\">LTE</field><value name=\"A\"><shadow type=\"math_number\" id=\"Ov#v|5h-f${Xm@Nh_!M3\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_analog_pin\" id=\"a38-0*SHqhd~A+`dc1ep\" disabled-reasons=\"MANUALLY_DISABLED\"><value name=\"name\"><shadow type=\"analog_read_write_pin_shadow\" id=\"p|mq-}4V$IC2V+%gC2oe\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"pin\">AnalogReadWritePin.P0</field></shadow></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"7au?Sj[Xg@h3tl~7_-{y\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"NUM\">90</field></shadow></value></block><block type=\"function_definition\" id=\"?D9=xhAWkD!MR25=X^a-\" x=\"-632\" y=\"3227\"><mutation name=\"fogFlood\" functionid=\"k_s2+XI@*gx2@)wty=I0\"></mutation><field name=\"function_name\">fogFlood</field><statement name=\"STACK\"><block type=\"controls_if\" id=\"h%GZWRdL4H3?ul)Tn--r\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"jw}_DX|5WzLSaWl/J10:\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"z+/o%8VwkR[k@Gigtgzf\"><field name=\"VAR\" id=\"Wdm0N8:YM*4Q+_(l9!-/\">fogToggle</field></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\",$?{]j7[7#h?wn}H:]~k\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"jJV;jt:_N}rJdH?3$pg8\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"device_pause\" id=\"/Ed{rvG+OnvKk4esk0UZ\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"S$:}sOvtty~md1zg9BbJ\"><field name=\"ms\">10000</field></shadow></value><next><block type=\"NL_PIXEL_SetEffect\" id=\"f}fdc)y@r#:G+^4]tcAo\"><field name=\"region\">notLegos.vfxRegion.CastleDoAll</field><field name=\"effect\">notLegos.vfxEffect.parade</field><next><block type=\"function_call\" id=\"jr0#+*C!`$LbH#EQW4Q[\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"EqhHW]xj{hMBWRLI:F1o\"><field name=\"TEXT\">para</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"t.|GiU@d*%q450$q}(K!\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"variables_set\" id=\"4a]4DpCOgep:2..z3$n$\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"-@Ge@Jk)qF#o$BL7oT,`\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"/[J)un+/1K7Xl])R@~AR\"><field name=\"motor\">notLegos.motors.fan</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"NL_MOTOR_Set\" id=\"z{3MB?ATHTBeUM0Fa)lQ\"><field name=\"motor\">notLegos.motors.door</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"xlr6;Y=9G{7hW#fq3E?$\"><value name=\"pause\"><shadow type=\"timePicker\" id=\":(FfOt42ls2Ru{4$Hu#3\"><field name=\"ms\">1000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"/mCX37|}luGaHZRdjjE$\"><field name=\"motor\">notLegos.motors.fan</field><field name=\"state\">notLegos.motorState.mid</field><next><block type=\"device_pause\" id=\"BoKS7Nu3Qg-9y[Zm)8/q\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"Lz}a@);;rDI@alV7uBEQ\"><field name=\"ms\">6000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"19So$i+E@6(e$/s$]7VY\"><field name=\"motor\">notLegos.motors.fan</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"DkS@Mp]x_FtLb`?Obo*y\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"c=t[P)gGl-[L14n*w52/\"><field name=\"ms\">500</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"$]W(CK:TUFXnQIDQ0PD)\"><field name=\"motor\">notLegos.motors.fan</field><field name=\"state\">notLegos.motorState.off</field><next><block type=\"NL_MOTOR_Set\" id=\"r=8dZW/2FW2$XMRnXFg^\"><field name=\"motor\">notLegos.motors.door</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"variables_set\" id=\"rh{az^!GmCxIjL}@v$PE\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\";}N5h(J{xWibAH{[_uo3\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"NL_RELAY_SockSet\" id=\"Yn#J[Lz@n!cR8gn^Ikc/\"><field name=\"sockState\">notLegos.sockState.dancing</field><next><block type=\"device_pause\" id=\"#9CJpWo-31cd~_?Wc5li\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"v?9^0*}RNV]Khw0XiM~Q\"><field name=\"ms\">6000</field></shadow></value><next><block type=\"NL_RELAY_SockSet\" id=\"O^^Ca)h2/yJkt$^HHu1p\"><field name=\"sockState\">notLegos.sockState.still</field><next><block type=\"device_pause\" id=\"e8SG=Eu8a}KlTE:aH]`6\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"8_jLk*j-mF]8:95?Z#jr\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"09qfJG8FBY|k.P!Wy19,\"><field name=\"motor\">notLegos.motors.wheel</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"!,Drgq@3p:{aDRIU`^ao\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"3oY8!%hLPS0+udmC+HF=\"><field name=\"ms\">8000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"1A4409m/C:QA$:+D(aGt\"><field name=\"motor\">notLegos.motors.wheel</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"I{8dY|drZb*hR%x^IHp^\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"Nq5$Vs^$el0^/pJ5,ACM\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"w~/Ea`++^v9Yun[=o!,B\"><field name=\"motor\">notLegos.motors.redrack</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\",v~!*oE@lCzfZ$Tj39x[\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"$kgUwMB{-Q_ekf*0Begu\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"3v@w,.a?HP?bKWL0vg6s\"><field name=\"motor\">notLegos.motors.redrack</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"9yGON~beb~DXw5k++)`d\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"YWU]BhKiC%AYQmz`SD^M\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"5d-G?:dGyWq~fqBZ.1Nz\"><field name=\"motor\">notLegos.motors.shark</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"9C|7Zj4!)gTu~v]vaiU8\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"}SnTCpwp98$-1ZIMOp=N\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"k8+f8[ZB1@MH:sm0_]nT\"><field name=\"motor\">notLegos.motors.shark</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"R|6fpSzgf!HmPVA_v.wQ\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"b`x90cYNVl86IC6qQx=1\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"ts,!XyKbs24,AyRIZk;{\"><field name=\"motor\">notLegos.motors.ghost</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"J]a|$2KW9{-xJ+RBRK(s\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"u9C#~GlQ6rEJ,kYD+C-z\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"/6~Df$+QuC1=8UPW.lgr\"><field name=\"motor\">notLegos.motors.ghost</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"594+Xvl}UP}VcbpN]imb\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"u]?_g];gv73hP@T6U4y[\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"+Dak.We1XZ}Jv!5aeJl}\"><field name=\"motor\">notLegos.motors.cannon</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"#y]x)1))0{tASJlM]rCT\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"kSq?QF#!qZsD$M6.U#v%\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"y|*YOn#j}B~%Kv#pa|{c\"><field name=\"motor\">notLegos.motors.cannon</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"xmm6yaXd}J9%8GHO7~I2\"><value name=\"pause\"><shadow type=\"timePicker\" id=\":%Rn#dko%a.WeV~4gXZA\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"nWpZ918uMdy.*^7%f)dC\"><field name=\"motor\">notLegos.motors.oarrack</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"RMaHB]lxTPm3YL/%3W=+\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"rsFw)92H4HSl[CQ2O1XD\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"ykdW;82mUb^~X[q*=k.q\"><field name=\"motor\">notLegos.motors.oarrack</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"YSAnHEPj0!y1sEk.6lQG\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"??ELH[:s(a4YU.-6qe[@\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\")R^w_@8*)Y58o:0Rd*h;\"><field name=\"motor\">notLegos.motors.shell</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"p.:1D4;/Q*?h)R})d%,0\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"QoB7xq84c=J{uNsK@eOP\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"tp?N0+L_q[)MKcAXU]SJ\"><field name=\"motor\">notLegos.motors.shell</field><field name=\"state\">notLegos.motorState.min</field><next><block type=\"device_pause\" id=\"KRBJ)d`8XF,zve(y%4yX\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"n~br]#F7Md;,JWqbBIMK\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"D5~1XBRQ{Q~H|nG{3yTu\"><field name=\"motor\">notLegos.motors.dragon</field><field name=\"state\">notLegos.motorState.max</field><next><block type=\"device_pause\" id=\"%2:(Z#q2yu$U;@|Le%0_\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"q~jaZwHcuoi3(ziZ:4bu\"><field name=\"ms\">2000</field></shadow></value><next><block type=\"NL_MOTOR_Set\" id=\"sHS?uXD:a;[i{2sHdx82\"><field name=\"motor\">notLegos.motors.dragon</field><field name=\"state\">notLegos.motorState.min</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement></block><block type=\"function_definition\" id=\"WL,t,Dtl9Cmf@_3[@K30\" x=\"-190\" y=\"3227\"><mutation name=\"runTutorial\" functionid=\"Y{7P,}tzRL|sul3I;].}\"></mutation><field name=\"function_name\">runTutorial</field><statement name=\"STACK\"><block type=\"function_call\" id=\",f7^Xb4,ChjjqSo[xT[r\"><mutation name=\"radioSay\" functionid=\"nKRfWQ(syQc/y.8DQ.x#\"><arg name=\"text5\" id=\"fxkpgrx3u5x98l61f5dik\" type=\"string\"></arg><arg name=\"val\" id=\"rvdhqzqjw8gzz1h9w1uw\" type=\"number\"></arg></mutation><value name=\"fxkpgrx3u5x98l61f5dik\"><shadow type=\"text\" id=\"-::|rrX]Edk(^%|l#9F/\"><field name=\"TEXT\">tutor</field></shadow></value><value name=\"rvdhqzqjw8gzz1h9w1uw\"><shadow type=\"math_number\" id=\"q-.r.JyPzn*gGq(!7[JG\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"NL_MP3_SetVolume\" id=\"sWxz@$)`Oi=uT]3`UP(;\"><field name=\"mp3bit\">notLegos.mp3type.music</field><value name=\"vol\"><shadow type=\"math_number\" id=\"V5Nbp9h+zmo50B1Zl~6M\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"device_pause\" id=\"nEMsz](S+%=~%[!.2P{%\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"%bCOT-nw7$~MG^(Z}|BI\"><field name=\"ms\">20</field></shadow></value><next><block type=\"NL_MP3_MusicPlay\" id=\")+d5SnGPuvCI4wKrDS|7\"><field name=\"genre\">notLegos.musicGenre.tutorial</field><next><block type=\"variables_set\" id=\"@q=U-z_R`yt/TLF;bqVN\"><field name=\"VAR\" id=\"^acr(i@uH|C[8LteG?#}\">fogLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"F7J@kzJT4.q{1o6^y9o@\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"![S`hTFQMmSb8%f*la1J\"><field name=\"voice\">notLegos.voiceSaying.howto1</field><next><block type=\"device_pause\" id=\"Ff`{EdA1QOq:p8j}FIz2\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"y@+ZoWj4FdY!j7E0:+?_\"><field name=\"ms\">5950</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"2bjJnLe$N4_Eo|d24,XY\"><field name=\"voice\">notLegos.voiceSaying.howto2</field><next><block type=\"device_pause\" id=\"Aq^^)^idz2:Sw4IAic,5\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"Lc5JTl2okYFA2nePs`(/\"><field name=\"ms\">5000</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"ps*Mg[E*(wh#,iF`dE@M\"><field name=\"voice\">notLegos.voiceSaying.howto3</field><next><block type=\"device_pause\" id=\"yhA4x;D$cJ19E]F[StYj\"><value name=\"pause\"><shadow type=\"timePicker\" id=\")!0t@8r[=~+il$pr_9+G\"><field name=\"ms\">7600</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"3GeaLa^@8NqA7u!X~h9o\"><field name=\"voice\">notLegos.voiceSaying.howto4</field><next><block type=\"device_pause\" id=\"_x)-ix38XsXh$mJm_*lI\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"59(@$^[m#~]yw~y?J0md\"><field name=\"ms\">6100</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"BLV9zo^r.#}x%zr_s%z)\"><field name=\"voice\">notLegos.voiceSaying.howto5</field><next><block type=\"device_pause\" id=\"K3%5Wo(isZ^mL[Vfv|/;\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"V:r~PSZZj.cj7xuW]t4H\"><field name=\"ms\">13000</field></shadow></value><next><block type=\"NL_MP3_VoicePlay\" id=\"DUC[l$L[](LdbZpt7{kM\"><field name=\"voice\">notLegos.voiceSaying.howto6</field><next><block type=\"NL_MP3_SetVolume\" id=\"Pu1]oJ#OTN[I4wAg9Swq\"><field name=\"mp3bit\">notLegos.mp3type.music</field><value name=\"vol\"><shadow type=\"math_number\" id=\"xyT@52`7%GDp,^H*L.[g\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"device_pause\" id=\"|7-A!rc-BOlEEHWykKW7\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"q(S|o^o+I/@0wS^[p*)t\"><field name=\"ms\">7000</field></shadow></value><next><block type=\"NL_MP3_MusicPlay\" id=\"VeOe9$q1T#xQJlhVcnf0\"><field name=\"genre\">notLegos.musicGenre.awaiting</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"function_definition\" id=\"#TR.ZPsxW/}N!9JcY*KA\" x=\"166\" y=\"3227\"><mutation name=\"ready_oled\" functionid=\",fv3PGT/J~k#ZH}9er,/\"></mutation><field name=\"function_name\">ready_oled</field><statement name=\"STACK\"><block type=\"controls_if\" id=\"El^8U!*d03[htA_D^p_}\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"pjdmw}Cy/v4l@xVnR=Q,\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"`BL:oH?2hUC~7--kt^@A\"><field name=\"VAR\" id=\"PDL_XYoU-yQc6,h6soef\">isCastleSay</field></block></value><statement name=\"DO0\"><block type=\"NL_OLED_PrintLine\" id=\"pp9#:$M$iV`zr%%}Jr}V\"><value name=\"text\"><shadow type=\"text\" id=\"]te[GXUjVj9u{1EfU%qx\"><field name=\"TEXT\">// Castle Say //</field></shadow></value><value name=\"line\"><shadow type=\"math_number\" id=\"C^HeQy~I3].nf=hb!Sv3\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"NL_OLED_PrintLine\" id=\"_gl-eu9i:dA:s76w`7bW\"><value name=\"text\"><block type=\"text_join\" id=\"j:lnEoMrm9YL=Z.DR1RY\" inline=\"false\"><mutation items=\"6\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"/09bbCg8PMU[I]f-PAL;\"><field name=\"TEXT\">R</field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"*T#R8O,GR^r@[m5cEPEu\"><field name=\"TEXT\"></field></shadow><block type=\"math_constrain_value\" id=\"2{/)khc:{O`yjTK|#16K\"><value name=\"value\"><block type=\"variables_get\" id=\"j|UTiHAieS`jB}5~Vmu#\"><field name=\"VAR\" id=\"SRvF%Vl7CRHE66Kr9~Q[\">lastLaserR</field></block></value><value name=\"low\"><shadow type=\"math_number\" id=\"[VJJU#un-J4!so8$bF%9\"><field name=\"NUM\">0</field></shadow></value><value name=\"high\"><shadow type=\"math_number\" id=\"!Yz=E5mm/*?z+L_,5^W2\"><field name=\"NUM\">9</field></shadow></value></block></value><value name=\"ADD2\"><shadow type=\"text\" id=\"DO5SO5%XK:TuTY(MD/oz\"><field name=\"TEXT\"> C</field></shadow></value><value name=\"ADD3\"><shadow type=\"text\" id=\"LyB+cZ|hK??u;Ol}6)[f\"><field name=\"TEXT\"></field></shadow><block type=\"math_constrain_value\" id=\"FO/hg9GO8X;wf:M30}F?\"><value name=\"value\"><block type=\"variables_get\" id=\"C+GT~l4G$tTflQN3ED.T\"><field name=\"VAR\" id=\"%FT#@+cF!r3!,1uelm~,\">lastLaserC</field></block></value><value name=\"low\"><shadow type=\"math_number\" id=\"UnwU;PBphNxI~Yr_Pq0Q\"><field name=\"NUM\">0</field></shadow></value><value name=\"high\"><shadow type=\"math_number\" id=\"MGeOD|fe.rbLlAW8sQeB\"><field name=\"NUM\">9</field></shadow></value></block></value><value name=\"ADD4\"><shadow type=\"text\" id=\"Lq6F`e|w|IKpPu@Y}}+B\"><field name=\"TEXT\"> L</field></shadow></value><value name=\"ADD5\"><shadow type=\"text\" id=\"8L*y-3%edUs4AQZ/V+=Z\"><field name=\"TEXT\"></field></shadow><block type=\"math_constrain_value\" id=\"Q`7xGj^EcAp[43w/21Cn\"><value name=\"value\"><block type=\"variables_get\" id=\"jv(ODKti-RJ1n1iz]%j[\"><field name=\"VAR\" id=\"hs_o5`X:I}y9{R2!_miN\">lastLaserL</field></block></value><value name=\"low\"><shadow type=\"math_number\" id=\"h,XM?pMm,=,?.9r5|!(i\"><field name=\"NUM\">0</field></shadow></value><value name=\"high\"><shadow type=\"math_number\" id=\"g@VC*__0px*}V=A7!nNQ\"><field name=\"NUM\">9</field></shadow></value></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"b4c,)@1g#7PPmhnhb3UJ\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"NL_OLED_PrintLine\" id=\"lPh*JXpWXJ;Lz(nu4}Co\"><value name=\"text\"><block type=\"text_join\" id=\"XB:FZ~EUV(RQK)Z-D$Ms\" inline=\"false\"><mutation items=\"8\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"UUSN+vRSbkuZB/^|G(X$\"><field name=\"TEXT\">S</field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"fy/SAohQ~Od~Db0L6E[q\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\")FSnpDn:INI0E1oc]E!E\"><field name=\"VAR\" id=\"}%7r;bz7Byg#SEH9P{dG\">lastSonarRead</field></block></value><value name=\"ADD2\"><shadow type=\"text\" id=\"1fmH(%7R}l06hJWBC3ba\"><field name=\"TEXT\"> H</field></shadow></value><value name=\"ADD3\"><shadow type=\"text\" id=\"hc[jv=4c5#)EqWFcAtmr\"><field name=\"TEXT\"></field></shadow><block type=\"math_js_round\" id=\":6|3nu[2``vz#j*IyDd~\"><field name=\"OP\">round</field><value name=\"ARG0\"><shadow type=\"math_number\" id=\"kb+0JtQqf7lLiliVLn4*\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"uZastNz(6dIih(!2dY@d\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"{NxyIt^N0$4[J=p_#;I=\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"8.aAF`SqP+Gc]ae!_WQL\"><field name=\"VAR\" id=\"u#;Y3,}t+?Ue.~vd$_;0\">lastHue</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"BE}lif.SAsd1t-dKk2}5\"><field name=\"NUM\">3</field></shadow></value></block></value></block></value><value name=\"ADD4\"><shadow type=\"text\" id=\"Cz_$$,gJL)hfv9gzXV}P\"><field name=\"TEXT\"> G</field></shadow></value><value name=\"ADD5\"><shadow type=\"text\" id=\"Pg70l3KC%1TEm0E4}1V0\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"=RQ.rX?r#0V%]ge9z9*x\"><field name=\"VAR\" id=\"5rh0sr-gnWZKflz~gbRk\">lastGesture</field></block></value><value name=\"ADD6\"><shadow type=\"text\" id=\"Nzx%0(I)R8R;:Y%+=NXl\"><field name=\"TEXT\"> N</field></shadow></value><value name=\"ADD7\"><shadow type=\"text\" id=\"mDDe4-T]4b=-z0q.==:H\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"12mX5cj9GX2%C{(wbuhe\"><field name=\"VAR\" id=\"at2[c#F7*{?za?uyOm!i\">lastHunt</field></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"f1o,5zs5eK:CQB6F?2XA\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"NL_OLED_PrintLine\" id=\"q]?#:#PrU^?-Jrp$xi|u\"><value name=\"text\"><block type=\"text_join\" id=\"t0)}g]5qrfrb!*?_w@at\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"ldi|Tt}q[bh=~XI(=xV$\"><field name=\"TEXT\">Mode: </field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"RTBMH5{]2rsiiPw3DC9m\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"wIA%[U2=8enp?Zw~@e@H\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"8kI(pYTc7J2HWGCAD`D-\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"NL_OLED_PrintLine\" id=\"Ud6W+Z%7SaBD(U$0QLQc\"><value name=\"text\"><block type=\"text_join\" id=\"~B:nCKKnt*@-`3Bv%cI!\"><mutation items=\"2\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\":)m~HDRmv9SZ?hcFi51E\"><field name=\"TEXT\">M:</field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"iby.[~EP0|MDy=2Qd7^Y\"><field name=\"TEXT\"></field></shadow><block type=\"NL_MP3_PlaytimeMusic\" id=\"0G_})|1:]@Q6VG:i#{SJ\"></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"%w]L5QOC`Luo/0/U]4#O\"><field name=\"NUM\">4</field></shadow></value></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"NL_OLED_PrintLine\" id=\"yp2zlCFc^|He.8x$n#~d\"><value name=\"text\"><shadow type=\"text\" id=\"8VaTi,6f^I1BAI2aO.|V\"><field name=\"TEXT\">// Castle Do //</field></shadow></value><value name=\"line\"><shadow type=\"math_number\" id=\"3yW,V5Ksz6AIa|x[=b_,\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"NL_OLED_PrintLine\" id=\"oILidPXA7unb}G?y$?_y\"><value name=\"text\"><block type=\"text_join\" id=\"4/77eJ=qfj!KvJxMuOWl\"><mutation items=\"4\"></mutation><value name=\"ADD0\"><shadow type=\"text\" id=\"DjCWgeM^PTYIPS*hJ|1;\"><field name=\"TEXT\">M: </field></shadow></value><value name=\"ADD1\"><shadow type=\"text\" id=\"h}{Cj|bD;Q*#SEw?:]$z\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"B`Sqk.$|@4YNt:5bcx]-\"><field name=\"VAR\" id=\"6yx5zEY;NaJR[fa/,a#f\">castleMode</field></block></value><value name=\"ADD2\"><shadow type=\"text\" id=\"0zy~b+Cua^`|r{Cd4dT]\"><field name=\"TEXT\"> T </field></shadow></value><value name=\"ADD3\"><shadow type=\"text\" id=\"!Uyt^!:TdPtFMirA(:-C\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"`%=__Zjpb%y).Q^e=@|a\"><field name=\"VAR\" id=\"Wdm0N8:YM*4Q+_(l9!-/\">fogToggle</field></block></value></block></value><value name=\"line\"><shadow type=\"math_number\" id=\"7a*/Nhse.FB|BOc{W4@l\"><field name=\"NUM\">1</field></shadow></value></block></next></block></statement></block></statement></block></xml>","main.ts":"function radioSay (text5: string, val: number) {\n    radio.sendValue(\"\" + btToken + text5, val)\n    notLegos.printLine(\"said: \" + text5 + \"=\" + val, 7)\n}\nfunction buttonPress (button: string) {\n    notLegos.printLine(\"button: \" + button, 3)\n}\nfunction runTutorial () {\n    radioSay(\"tutor\", 1)\n    notLegos.setVolume(notLegos.mp3type.music, 80)\n    basic.pause(20)\n    notLegos.mp3musicPlay(notLegos.musicGenre.tutorial)\n    fogLevel = 3\n    notLegos.mp3voicePlay(notLegos.voiceSaying.howto1)\n    basic.pause(5950)\n    notLegos.mp3voicePlay(notLegos.voiceSaying.howto2)\n    basic.pause(5000)\n    notLegos.mp3voicePlay(notLegos.voiceSaying.howto3)\n    basic.pause(7600)\n    notLegos.mp3voicePlay(notLegos.voiceSaying.howto4)\n    basic.pause(6100)\n    notLegos.mp3voicePlay(notLegos.voiceSaying.howto5)\n    basic.pause(13000)\n    notLegos.mp3voicePlay(notLegos.voiceSaying.howto6)\n    notLegos.setVolume(notLegos.mp3type.music, 100)\n    basic.pause(7000)\n    notLegos.mp3musicPlay(notLegos.musicGenre.awaiting)\n}\nfunction ready_oled () {\n    if (isCastleSay) {\n        notLegos.printLine(\"// Castle Say //\", 0)\n        notLegos.printLine(\"R\" + Math.constrain(lastLaserR, 0, 9) + \" C\" + Math.constrain(lastLaserC, 0, 9) + \" L\" + Math.constrain(lastLaserL, 0, 9), 1)\n        notLegos.printLine(\"S\" + lastSonarRead + \" H\" + Math.round(lastHue / 3) + \" G\" + lastGesture + \" N\" + lastHunt, 2)\n        notLegos.printLine(\"Mode: \" + castleMode, 3)\n        notLegos.printLine(\"M:\" + notLegos.mp3durationMusic(), 4)\n    } else {\n        notLegos.printLine(\"// Castle Do //\", 0)\n        notLegos.printLine(\"M: \" + castleMode + \" T \" + fogToggle, 1)\n    }\n}\nradio.onReceivedValue(function (name, value) {\n    if (name.substr(0, btToken.length) == btToken) {\n        theName = name.substr(btToken.length, name.length - btToken.length)\n        if (isCastleSay) {\n            if (theName == \"wstar\") {\n                castleMode = \"wait_start\"\n            } else if (theName == \"welco\") {\n                if (value == 1) {\n                    notLegos.vfxReset(notLegos.vfxEffect.glow)\n                    notLegos.setEffect(notLegos.vfxRegion.CastleSayAll, notLegos.vfxEffect.glow)\n                    notLegos.mp3voicePlay(notLegos.voiceSaying.welcome)\n                } else if (value == 2) {\n                    notLegos.setEffect(notLegos.vfxRegion.CastleSayAll, notLegos.vfxEffect.off)\n                    notLegos.setEffect(notLegos.vfxRegion.WheelAll, notLegos.vfxEffect.fire)\n                    basic.pause(1200)\n                    notLegos.mp3voicePlay(notLegos.voiceSaying.intro)\n                    basic.pause(3000)\n                    notLegos.setEffect(notLegos.vfxRegion.CastleSayAll, notLegos.vfxEffect.off)\n                    basic.pause(4000)\n                    notLegos.mp3musicPlay(notLegos.musicGenre.awaiting)\n                    castleMode = \"wait_reg\"\n                }\n            } else if (theName == \"check\") {\n                notLegos.setEffect(notLegos.vfxRegion.CastleSayAll, notLegos.vfxEffect.off)\n                radioSay(\"ready\", 1)\n            } else if (false) {\n            \t\n            }\n        } else {\n            if (theName == \"ready\") {\n                radioSay(\"wstar\", 1)\n                notLegos.setEffect(notLegos.vfxRegion.KongFront, notLegos.vfxEffect.indicate)\n            } else if (theName == \"boot\") {\n                fogLevel = 3\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.parade)\n                notLegos.motorSet(notLegos.motors.wheel, notLegos.motorState.max)\n                basic.pause(value * 1000)\n                notLegos.motorSet(notLegos.motors.wheel, notLegos.motorState.min)\n                basic.pause(1000)\n                radioSay(\"welco\", 1)\n                basic.pause(200)\n                notLegos.vfxReset(notLegos.vfxEffect.glow)\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.glow)\n                basic.pause(5000)\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.idle)\n                notLegos.setEffect(notLegos.vfxRegion.SpotH, notLegos.vfxEffect.mine)\n                notLegos.setEffect(notLegos.vfxRegion.SpotI, notLegos.vfxEffect.mine)\n                basic.pause(0)\n                radioSay(\"welco\", 2)\n                basic.pause(4500)\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.off)\n                basic.pause(500)\n                notLegos.setEffect(notLegos.vfxRegion.BrickDragon, notLegos.vfxEffect.indicate)\n                basic.pause(1200)\n                notLegos.setEffect(notLegos.vfxRegion.SpotC, notLegos.vfxEffect.indicate)\n                notLegos.setEffect(notLegos.vfxRegion.SpotE, notLegos.vfxEffect.indicate)\n                basic.pause(3000)\n                fogLevel = 1\n                notLegos.motorSet(notLegos.motors.door, notLegos.motorState.max)\n            } else if (theName == \"tutor\") {\n                if (value == 1) {\n                    notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.off)\n                    basic.pause(4000)\n                    notLegos.vfxReset(notLegos.vfxEffect.glow)\n                    notLegos.setEffect(notLegos.vfxRegion.SpotA, notLegos.vfxEffect.glow)\n                    basic.pause(6000)\n                    notLegos.setEffect(notLegos.vfxRegion.SpotB, notLegos.vfxEffect.indicate)\n                    notLegos.setEffect(notLegos.vfxRegion.SpotC, notLegos.vfxEffect.indicate)\n                } else if (value == 2) {\n                \t\n                }\n            } else if (theName == \"welco\") {\n            \t\n            } else {\n            \t\n            }\n        }\n        notLegos.printLine(\"heard: \" + theName + \"=\" + value, 6)\n    }\n})\ninput.onLogoEvent(TouchButtonEvent.Touched, function () {\n    if (isCastleSay) {\n        notLegos.mp3sayPlay(notLegos.playerSaying.ready)\n        notLegos.mp3sfxPlay(notLegos.sfxType.fire)\n        notLegos.mp3musicPlay(notLegos.musicGenre.intro)\n    }\n})\nfunction fogFlood () {\n    if (fogToggle) {\n        fogLevel = 3\n        basic.pause(10000)\n        notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.parade)\n        radioSay(\"para\", 1)\n        fogLevel = 0\n        notLegos.motorSet(notLegos.motors.fan, notLegos.motorState.max)\n        notLegos.motorSet(notLegos.motors.door, notLegos.motorState.max)\n        basic.pause(1000)\n        notLegos.motorSet(notLegos.motors.fan, notLegos.motorState.mid)\n        basic.pause(6000)\n        notLegos.motorSet(notLegos.motors.fan, notLegos.motorState.min)\n        basic.pause(500)\n        notLegos.motorSet(notLegos.motors.fan, notLegos.motorState.off)\n        notLegos.motorSet(notLegos.motors.door, notLegos.motorState.min)\n        fogLevel = 1\n        notLegos.setSock(notLegos.sockState.dancing)\n        basic.pause(6000)\n        notLegos.setSock(notLegos.sockState.still)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.wheel, notLegos.motorState.max)\n        basic.pause(8000)\n        notLegos.motorSet(notLegos.motors.wheel, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.redrack, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.redrack, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.shark, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.shark, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.ghost, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.ghost, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.cannon, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.cannon, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.oarrack, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.oarrack, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.shell, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.shell, notLegos.motorState.min)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.dragon, notLegos.motorState.max)\n        basic.pause(2000)\n        notLegos.motorSet(notLegos.motors.dragon, notLegos.motorState.min)\n    }\n}\nlet buttonRow = 0\nlet iTook = 0\nlet theName = \"\"\nlet castleMode = \"\"\nlet digits: notLegos.TM1637LEDs = null\nlet isCastleSay = false\nlet btToken = \"\"\nlet fogLevel = 0\nlet fogToggle = false\nlet lastHunt = 0\nlet lastLaserC = 0\nlet lastLaserL = 0\nlet lastLaserR = 0\nlet lastHue = 0\nlet lastGesture = 0\nlet lastSonarRead = 0\nlet lastVolumeRead = 0\nlastSonarRead = 0\nlastGesture = 0\nlastHue = 0\nlastLaserR = 0\nlastLaserL = 0\nlastLaserC = 0\nlastHunt = 0\nfogToggle = false\nfogLevel = 0\nbtToken = \"KC$\"\npins.setAudioPinEnabled(false)\nled.enable(false)\nisCastleSay = notLegos.SonarFirstRead(DigitalPin.P8, DigitalPin.P9) > 0\nradio.setGroup(171)\nnotLegos.oledinit()\nif (isCastleSay) {\n    notLegos.potSet(AnalogPin.P10)\n    digits = notLegos.tm1637Create(DigitalPin.P7, DigitalPin.P6)\n    digits.showNumber(-1000)\n    pins.digitalWritePin(DigitalPin.P13, 1)\n    notLegos.mp3setPorts(notLegos.mp3type.music, SerialPin.P14)\n    notLegos.mp3setPorts(notLegos.mp3type.sfxvoice, SerialPin.P15)\n    notLegos.mp3setPorts(notLegos.mp3type.player, SerialPin.P16)\n    notLegos.castleSayLights(DigitalPin.P11, DigitalPin.P5, DigitalPin.P12)\n    basic.pause(20)\n    notLegos.setVolume(notLegos.mp3type.sfxvoice, 100)\n    notLegos.setVolume(notLegos.mp3type.player, 100)\n    notLegos.setVolume(notLegos.mp3type.music, 100)\n} else {\n    pins.digitalWritePin(DigitalPin.P0, 0)\n    pins.digitalWritePin(DigitalPin.P2, 1)\n    pins.digitalWritePin(DigitalPin.P8, 1)\n    pins.digitalWritePin(DigitalPin.P12, 1)\n    pins.digitalWritePin(DigitalPin.P13, 1)\n    notLegos.motorSet(notLegos.motors.fan, notLegos.motorState.max)\n    notLegos.motorSet(notLegos.motors.redrack, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.shark, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.ghost, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.cannon, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.oarrack, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.shell, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.door, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.dragon, notLegos.motorState.min)\n    notLegos.motorSet(notLegos.motors.wheel, notLegos.motorState.min)\n    notLegos.castleDoLights(DigitalPin.P14, DigitalPin.P15, DigitalPin.P16)\n    notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.parade)\n    radioSay(\"check\", 1)\n}\nlet iBegan = input.runningTimeMicros()\nlet isReady = true\ncastleMode = \"init\"\nloops.everyInterval(500, function () {\n    if (isCastleSay) {\n        notLegos.updateVolumeGlobal()\n    } else {\n        if (!(fogToggle) || fogLevel == 0) {\n            notLegos.setFog(notLegos.fogLevels.none)\n        } else {\n            if (fogLevel == 1) {\n                notLegos.setFog(notLegos.fogLevels.light)\n            } else if (fogLevel == 2) {\n                notLegos.setFog(notLegos.fogLevels.medium)\n            } else if (fogLevel == 3) {\n                notLegos.setFog(notLegos.fogLevels.heavy)\n            }\n        }\n    }\n})\nloops.everyInterval(500, function () {\n\t\n})\nloops.everyInterval(2000, function () {\n    notLegos.printLine(\"\" + iTook + \"\", 5)\n})\nloops.everyInterval(40, function () {\n    iBegan = input.runningTime()\n    if (isReady) {\n        if (isCastleSay) {\n            notLegos.castleSayTick()\n            lastHunt = pins.digitalReadPin(DigitalPin.P4)\n            lastGesture = Connected.getGesture()\n            lastHue = Connected.readColor()\n            lastSonarRead = notLegos.SonarNextRead()\n            lastLaserR = Math.round(pins.analogReadPin(AnalogReadWritePin.P1) / 80)\n            lastLaserC = Math.round(pins.analogReadPin(AnalogReadWritePin.P2) / 80)\n            lastLaserL = Math.round(pins.analogReadPin(AnalogReadWritePin.P3) / 80)\n            if (castleMode == \"wait_start\") {\n                if (lastHunt == 1) {\n                    castleMode = \"idle\"\n                    notLegos.mp3musicPlay(notLegos.musicGenre.intro)\n                    notLegos.setEffect(notLegos.vfxRegion.CastleSayAll, notLegos.vfxEffect.parade)\n                    radioSay(\"boot\", notLegos.mp3durationMusic())\n                }\n            } else if (castleMode == \"wait_play\") {\n            \t\n            } else if (castleMode == \"wait_laser\") {\n            \t\n            } else if (castleMode == \"init\") {\n                radioSay(\"ready\", 1)\n            } else if (castleMode == \"wait_reg\") {\n                if (lastGesture != 0) {\n                    castleMode = \"tutorial\"\n                    runTutorial()\n                } else if (false) {\n                \t\n                }\n            }\n        } else {\n            notLegos.castleDoTick()\n            fogToggle = true\n            buttonRow = pins.analogReadPin(AnalogReadWritePin.P1)\n            if (buttonRow < 10) {\n                buttonPress(\"A\")\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.parade)\n            } else if (buttonRow < 60) {\n                buttonPress(\"B\")\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.fire)\n            } else if (buttonRow < 110) {\n                buttonPress(\"C\")\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.mine)\n            } else if (buttonRow < 200) {\n                buttonPress(\"D\")\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.glow)\n            } else if (buttonRow < 700) {\n                buttonPress(\"E\")\n                notLegos.setEffect(notLegos.vfxRegion.CastleDoAll, notLegos.vfxEffect.off)\n            }\n        }\n    }\n    ready_oled()\n    notLegos.changeThree()\n    iTook = input.runningTime() - iBegan\n})\n","README.md":"\n> Open this page at [https://notlegos.github.io/castleresay/](https://notlegos.github.io/castleresay/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/notlegos/castleresay** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/notlegos/castleresay** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n\n\n\n> Open this page at [https://notlegos.github.io/soundbank/](https://notlegos.github.io/soundbank/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/notlegos/soundbank** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/notlegos/soundbank** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n\n\n\n> Open this page at [https://notlegos.github.io/resoundbank/](https://notlegos.github.io/resoundbank/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/notlegos/resoundbank** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/notlegos/resoundbank** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n\n\n\n> Open this page at [https://notlegos.github.io/notlegosext/](https://notlegos.github.io/notlegosext/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/notlegos/notlegosext** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/notlegos/notlegosext** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n\n\n\n> Open this page at [https://notlegos.github.io/notlegosmaster/](https://notlegos.github.io/notlegosmaster/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/notlegos/notlegosmaster** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/notlegos/notlegosmaster** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","displaySendBuffer.asm":"sendBufferAsm:\n\n    push {r4,r5,r6,r7,lr}\n    \n    mov r4, r0 ; save buff\n    mov r6, r1 ; save pin\n    \n    mov r0, r4\n    bl BufferMethods::length\n    mov r5, r0\n    \n    mov r0, r4\n    bl BufferMethods::getBytes\n    mov r4, r0\n    \n    ; setup pin as digital\n    mov r0, r6\n    movs r1, #0\n    bl pins::digitalWritePin\n    \n    ; load pin address\n    mov r0, r6\n    bl pins::getPinAddress\n\n    ldr r0, [r0, #8] ; get mbed DigitalOut from MicroBitPin\n    ldr r1, [r0, #4] ; r1-mask for this pin\n    ldr r2, [r0, #16] ; r2-clraddr\n    ldr r3, [r0, #12] ; r3-setaddr\n    \n    cpsid i ; disable irq\n    \n    b .start\n    \n.nextbit:               ;            C0\n    str r1, [r3, #0]    ; pin := hi  C2\n    tst r6, r0          ;            C3\n    bne .islate         ;            C4\n    str r1, [r2, #0]    ; pin := lo  C6\n.islate:\n    lsrs r6, r6, #1     ; r6 >>= 1   C7\n    bne .justbit        ;            C8\n    \n    ; not just a bit - need new byte\n    adds r4, #1         ; r4++       C9\n    subs r5, #1         ; r5--       C10\n    bcc .stop           ; if (r5<0) goto .stop  C11\n.start:\n    movs r6, #0x80      ; reset mask C12\n    nop                 ;            C13\n\n.common:               ;             C13\n    str r1, [r2, #0]   ; pin := lo   C15\n    ; always re-load byte - it just fits with the cycles better this way\n    ldrb r0, [r4, #0]  ; r0 := *r4   C17\n    b .nextbit         ;             C20\n\n.justbit: ; C10\n    ; no nops, branch taken is already 3 cycles\n    b .common ; C13\n\n.stop:    \n    str r1, [r2, #0]   ; pin := lo\n    cpsie i            ; enable irq\n\n    pop {r4,r5,r6,r7,pc}\n","planetxbasic.ts":"/**\n* Functions to PlanetX sensor by ELECFREAKS Co.,Ltd.\n*/\n//% color=#00B1ED  icon=\"\\uf005\" block=\"Connected\" blockId=\"PlanetX_Connected\"\n//% groups='[\"Digital\", \"Analog\", \"IIC Port\"]'\nnamespace Connected {\n    \n    ////////////////////////paj7620//////////////////////\n    let gesture_first_init = true\n    const initRegisterArray: number[] = [\n        0xEF, 0x00, 0x32, 0x29, 0x33, 0x01, 0x34, 0x00, 0x35, 0x01, 0x36, 0x00, 0x37, 0x07, 0x38, 0x17,\n        0x39, 0x06, 0x3A, 0x12, 0x3F, 0x00, 0x40, 0x02, 0x41, 0xFF, 0x42, 0x01, 0x46, 0x2D, 0x47, 0x0F,\n        0x48, 0x3C, 0x49, 0x00, 0x4A, 0x1E, 0x4B, 0x00, 0x4C, 0x20, 0x4D, 0x00, 0x4E, 0x1A, 0x4F, 0x14,\n        0x50, 0x00, 0x51, 0x10, 0x52, 0x00, 0x5C, 0x02, 0x5D, 0x00, 0x5E, 0x10, 0x5F, 0x3F, 0x60, 0x27,\n        0x61, 0x28, 0x62, 0x00, 0x63, 0x03, 0x64, 0xF7, 0x65, 0x03, 0x66, 0xD9, 0x67, 0x03, 0x68, 0x01,\n        0x69, 0xC8, 0x6A, 0x40, 0x6D, 0x04, 0x6E, 0x00, 0x6F, 0x00, 0x70, 0x80, 0x71, 0x00, 0x72, 0x00,\n        0x73, 0x00, 0x74, 0xF0, 0x75, 0x00, 0x80, 0x42, 0x81, 0x44, 0x82, 0x04, 0x83, 0x20, 0x84, 0x20,\n        0x85, 0x00, 0x86, 0x10, 0x87, 0x00, 0x88, 0x05, 0x89, 0x18, 0x8A, 0x10, 0x8B, 0x01, 0x8C, 0x37,\n        0x8D, 0x00, 0x8E, 0xF0, 0x8F, 0x81, 0x90, 0x06, 0x91, 0x06, 0x92, 0x1E, 0x93, 0x0D, 0x94, 0x0A,\n        0x95, 0x0A, 0x96, 0x0C, 0x97, 0x05, 0x98, 0x0A, 0x99, 0x41, 0x9A, 0x14, 0x9B, 0x0A, 0x9C, 0x3F,\n        0x9D, 0x33, 0x9E, 0xAE, 0x9F, 0xF9, 0xA0, 0x48, 0xA1, 0x13, 0xA2, 0x10, 0xA3, 0x08, 0xA4, 0x30,\n        0xA5, 0x19, 0xA6, 0x10, 0xA7, 0x08, 0xA8, 0x24, 0xA9, 0x04, 0xAA, 0x1E, 0xAB, 0x1E, 0xCC, 0x19,\n        0xCD, 0x0B, 0xCE, 0x13, 0xCF, 0x64, 0xD0, 0x21, 0xD1, 0x0F, 0xD2, 0x88, 0xE0, 0x01, 0xE1, 0x04,\n        0xE2, 0x41, 0xE3, 0xD6, 0xE4, 0x00, 0xE5, 0x0C, 0xE6, 0x0A, 0xE7, 0x00, 0xE8, 0x00, 0xE9, 0x00,\n        0xEE, 0x07, 0xEF, 0x01, 0x00, 0x1E, 0x01, 0x1E, 0x02, 0x0F, 0x03, 0x10, 0x04, 0x02, 0x05, 0x00,\n        0x06, 0xB0, 0x07, 0x04, 0x08, 0x0D, 0x09, 0x0E, 0x0A, 0x9C, 0x0B, 0x04, 0x0C, 0x05, 0x0D, 0x0F,\n        0x0E, 0x02, 0x0F, 0x12, 0x10, 0x02, 0x11, 0x02, 0x12, 0x00, 0x13, 0x01, 0x14, 0x05, 0x15, 0x07,\n        0x16, 0x05, 0x17, 0x07, 0x18, 0x01, 0x19, 0x04, 0x1A, 0x05, 0x1B, 0x0C, 0x1C, 0x2A, 0x1D, 0x01,\n        0x1E, 0x00, 0x21, 0x00, 0x22, 0x00, 0x23, 0x00, 0x25, 0x01, 0x26, 0x00, 0x27, 0x39, 0x28, 0x7F,\n        0x29, 0x08, 0x30, 0x03, 0x31, 0x00, 0x32, 0x1A, 0x33, 0x1A, 0x34, 0x07, 0x35, 0x07, 0x36, 0x01,\n        0x37, 0xFF, 0x38, 0x36, 0x39, 0x07, 0x3A, 0x00, 0x3E, 0xFF, 0x3F, 0x00, 0x40, 0x77, 0x41, 0x40,\n        0x42, 0x00, 0x43, 0x30, 0x44, 0xA0, 0x45, 0x5C, 0x46, 0x00, 0x47, 0x00, 0x48, 0x58, 0x4A, 0x1E,\n        0x4B, 0x1E, 0x4C, 0x00, 0x4D, 0x00, 0x4E, 0xA0, 0x4F, 0x80, 0x50, 0x00, 0x51, 0x00, 0x52, 0x00,\n        0x53, 0x00, 0x54, 0x00, 0x57, 0x80, 0x59, 0x10, 0x5A, 0x08, 0x5B, 0x94, 0x5C, 0xE8, 0x5D, 0x08,\n        0x5E, 0x3D, 0x5F, 0x99, 0x60, 0x45, 0x61, 0x40, 0x63, 0x2D, 0x64, 0x02, 0x65, 0x96, 0x66, 0x00,\n        0x67, 0x97, 0x68, 0x01, 0x69, 0xCD, 0x6A, 0x01, 0x6B, 0xB0, 0x6C, 0x04, 0x6D, 0x2C, 0x6E, 0x01,\n        0x6F, 0x32, 0x71, 0x00, 0x72, 0x01, 0x73, 0x35, 0x74, 0x00, 0x75, 0x33, 0x76, 0x31, 0x77, 0x01,\n        0x7C, 0x84, 0x7D, 0x03, 0x7E, 0x01\n    ];\n    \n    /////////////////////////color/////////////////////////\n    const APDS9960_ADDR = 0x39\n    const APDS9960_ENABLE = 0x80\n    const APDS9960_ATIME = 0x81\n    const APDS9960_CONTROL = 0x8F\n    const APDS9960_STATUS = 0x93\n    const APDS9960_CDATAL = 0x94\n    const APDS9960_CDATAH = 0x95\n    const APDS9960_RDATAL = 0x96\n    const APDS9960_RDATAH = 0x97\n    const APDS9960_GDATAL = 0x98\n    const APDS9960_GDATAH = 0x99\n    const APDS9960_BDATAL = 0x9A\n    const APDS9960_BDATAH = 0x9B\n    const APDS9960_GCONF4 = 0xAB\n    const APDS9960_AICLEAR = 0xE7\n    let color_first_init = false\n\n    function i2cwrite_color(addr: number, reg: number, value: number) {\n        let buf = pins.createBuffer(2)\n        buf[0] = reg\n        buf[1] = value\n        pins.i2cWriteBuffer(addr, buf)\n    }\n    function i2cread_color(addr: number, reg: number) {\n        pins.i2cWriteNumber(addr, reg, NumberFormat.UInt8BE);\n        let val = pins.i2cReadNumber(addr, NumberFormat.UInt8BE);\n        return val;\n    }\n    function rgb2hsl(color_r: number, color_g: number, color_b: number): number {\n        let Hue = 0\n        let R = color_r * 100 / 255;\n        let G = color_g * 100 / 255;\n        let B = color_b * 100 / 255;\n        let maxVal = Math.max(R, Math.max(G, B))\n        let minVal = Math.min(R, Math.min(G, B))\n        let Delta = maxVal - minVal;\n\n        if (Delta < 0) {\n            Hue = 0;\n        }\n        else if (maxVal == R && G >= B) {\n            Hue = (60 * ((G - B) * 100 / Delta)) / 100;\n        }\n        else if (maxVal == R && G < B) {\n            Hue = (60 * ((G - B) * 100 / Delta) + 360 * 100) / 100;\n        }\n        else if (maxVal == G) {\n            Hue = (60 * ((B - R) * 100 / Delta) + 120 * 100) / 100;\n        }\n        else if (maxVal == B) {\n            Hue = (60 * ((R - G) * 100 / Delta) + 240 * 100) / 100;\n        }\n        return Hue\n    }\n    function initModule(): void {\n        i2cwrite_color(APDS9960_ADDR, APDS9960_ATIME, 252)\n        i2cwrite_color(APDS9960_ADDR, APDS9960_CONTROL, 0x03)\n        i2cwrite_color(APDS9960_ADDR, APDS9960_ENABLE, 0x00)\n        i2cwrite_color(APDS9960_ADDR, APDS9960_GCONF4, 0x00)\n        i2cwrite_color(APDS9960_ADDR, APDS9960_AICLEAR, 0x00)\n        i2cwrite_color(APDS9960_ADDR, APDS9960_ENABLE, 0x01)\n        color_first_init = true\n    }\n    function colorMode(): void {\n        let tmp = i2cread_color(APDS9960_ADDR, APDS9960_ENABLE) | 0x2;\n        i2cwrite_color(APDS9960_ADDR, APDS9960_ENABLE, tmp);\n    }\n\n    ///////////////////////////////////////////////////////MP3\n    let Start_Byte = 0x7E\n    let Version_Byte = 0xFF\n    let Command_Length = 0x06\n    let End_Byte = 0xEF\n    let Acknowledge = 0x00\n    let CMD = 0x00\n    let para1 = 0x00\n    let para2 = 0x00\n    let highByte = 0x00\n    let lowByte = 0x00\n    let dataArr: number[] = [Start_Byte, Version_Byte, Command_Length, CMD, Acknowledge, para1, para2, highByte, lowByte, End_Byte]\n    /*\n    * Play status selection button list\n    */\n    export enum playType {\n        //% block=\"Play\"\n        Play = 0x0D,\n        //% block=\"Stop\"\n        Stop = 0x16,\n        //% block=\"PlayNext\"\n        PlayNext = 0x01,\n        //% block=\"PlayPrevious\"\n        PlayPrevious = 0x02,\n        //% block=\"Pause\"\n        Pause = 0x0E\n    }\n    function mp3_sendData(): void {\n        let myBuff = pins.createBuffer(10);\n        for (let i = 0; i < 10; i++) {\n            myBuff.setNumber(NumberFormat.UInt8BE, i, dataArr[i])\n        }\n        serial.writeBuffer(myBuff)\n        basic.pause(100)\n    }\n    function mp3_checkSum(): void {\n        let total = 0;\n        for (let i = 1; i < 7; i++) {\n            total += dataArr[i]\n        }\n        total = 65536 - total\n        lowByte = total & 0xFF;\n        highByte = total >> 8;\n        dataArr[7] = highByte\n        dataArr[8] = lowByte\n    }\n\n    ///////////////////////////////////////////////////////RJpin_to_pin\n    function RJpin_to_analog(Rjpin: AnalogRJPin): any {\n        let pin = AnalogPin.P1\n        switch (Rjpin) {\n            case AnalogRJPin.J1:\n                pin = AnalogPin.P1\n                break;\n            case AnalogRJPin.J2:\n                pin = AnalogPin.P2\n                break;\n        }\n        return pin\n    }\n    function RJpin_to_digital(Rjpin: DigitalRJPin): any {\n        let pin = DigitalPin.P1\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pin = DigitalPin.P8\n                break;\n            case DigitalRJPin.J2:\n                pin = DigitalPin.P12\n                break;\n            case DigitalRJPin.J3:\n                pin = DigitalPin.P14\n                break;\n            case DigitalRJPin.J4:\n                pin = DigitalPin.P16\n                break;\n            case DigitalRJPin.J5:\n                pin = DigitalPin.P11\n                break;\n            case DigitalRJPin.P0:\n                pin = DigitalPin.P0\n                break;\n            case DigitalRJPin.P1:\n                pin = DigitalPin.P1\n                break;\n            case DigitalRJPin.P2:\n                pin = DigitalPin.P2\n                break;\n            case DigitalRJPin.P3:\n                pin = DigitalPin.P3\n                break;\n            case DigitalRJPin.P4:\n                pin = DigitalPin.P4\n                break;\n            case DigitalRJPin.P4:\n                pin = DigitalPin.P4\n                break;\n            case DigitalRJPin.P5:\n                pin = DigitalPin.P5\n                break;\n            case DigitalRJPin.P6:\n                pin = DigitalPin.P6\n                break;\n            case DigitalRJPin.P7:\n                pin = DigitalPin.P7\n                break;\n            case DigitalRJPin.P8:\n                pin = DigitalPin.P8\n                break;\n            case DigitalRJPin.P9:\n                pin = DigitalPin.P9\n                break;\n            case DigitalRJPin.P10:\n                pin = DigitalPin.P10\n                break;\n            case DigitalRJPin.P11:\n                pin = DigitalPin.P11\n                break;\n            case DigitalRJPin.P12:\n                pin = DigitalPin.P12\n                break;\n            case DigitalRJPin.P13:\n                pin = DigitalPin.P13\n                break;\n            case DigitalRJPin.P14:\n                pin = DigitalPin.P14\n                break;\n            case DigitalRJPin.P15:\n                pin = DigitalPin.P15\n                break;\n            case DigitalRJPin.P16:\n                pin = DigitalPin.P16\n                break;\n        }\n        return pin\n    }\n\n\n    ///////////////////////////////enum\n    export enum DigitalRJPin {\n        //% block=\"J1\"\n        J1,\n        //% block=\"J2\"\n        J2,\n        //% block=\"J3\"\n        J3,\n        //% block=\"J4\"\n        J4,\n        //% block=\"J5\"\n        J5,\n        //% block=\"P0\"\n        P0,        \n        //% block=\"P1\"\n        P1,\n        //% block=\"P2\"\n        P2,\n        //% block=\"P3\"\n        P3,\n        //% block=\"P4\"\n        P4,\n        //% block=\"P5\"\n        P5,\n        //% block=\"P6\"\n        P6,\n        //% block=\"P7\"\n        P7,\n        //% block=\"P8\"\n        P8,\n        //% block=\"P9\"\n        P9,\n        //% block=\"P10\"\n        P10,\n        //% block=\"P11\"\n        P11,\n        //% block=\"P12\"\n        P12,\n        //% block=\"P13\"\n        P13,\n        //% block=\"P14\"\n        P14,\n        //% block=\"P15\"\n        P15,\n        //% block=\"P16\"\n        P16,\n    }\n    export enum AnalogRJPin {\n        //% block=\"J1\"\n        J1,\n        //% block=\"J2\"\n        J2\n    }\n    export enum Distance_Unit_List {\n        //% block=\"cm\" \n        Distance_Unit_cm,\n\n        //% block=\"foot\"\n        Distance_Unit_foot,\n    }\n    export enum ButtonStateList {\n        //% block=\"C\"\n        C,\n        //% block=\"D\"\n        D,\n        //% block=\"C+D\"\n        CD\n    }\n    export enum GestureType {\n        //% block=\"None\"\n        None = 0,\n        //% block=\"Right\"\n        Right = 1,\n        //% block=\"Left\"\n        Left = 2,\n        //% block=\"Up\"\n        Up = 3,\n        //% block=\"Down\"\n        Down = 4,\n        //% block=\"Forward\"\n        Forward = 5,\n        //% block=\"Backward\"\n        Backward = 6,\n        //% block=\"Clockwise\"\n        Clockwise = 7,\n        //% block=\"Anticlockwise\"\n        Anticlockwise = 8,\n        //% block=\"Wave\"\n        Wave = 9\n    }\n    export enum ColorList {\n        //% block=\"Red\"\n        red,\n        //% block=\"Green\"\n        green,\n        //% block=\"Blue\"\n        blue,\n        //% block=\"Cyan\"\n        cyan,\n        //% block=\"Magenta\"\n        magenta,\n        //% block=\"Yellow\"\n        yellow,\n        //% block=\"White\"\n        white\n    }\n\n    ///////////////////////////////////blocks/////////////////////////////\n\n    //% blockId=\"readwaterLevel\" block=\"Water level sensor %Rjpin value(0~100)\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=2\n    //% subcategory=Sensor color=#E2C438 group=\"Analog\"\n    export function waterLevel(Rjpin: AnalogRJPin): number {\n        let pin = AnalogPin.P1\n        pin = RJpin_to_analog(Rjpin)\n        let voltage = 0, waterlevel = 0;\n        voltage = pins.map(\n            pins.analogReadPin(pin),\n            50,\n            600,\n            0,\n            100\n        );\n        if (voltage < 0) {\n            voltage = 0\n        }\n        waterlevel = voltage;\n        return Math.round(waterlevel)\n    }\n\n    let distance_last = 0\n\n    //% blockId=sonarbit block=\"Ultrasonic sensor pinT %tPin pinE %ePin distance %distance_unit\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=2\n    //% distance_unit.fieldEditor=\"gridpicker\"\n    //% distance_unit.fieldOptions.columns=2\n    //% subcategory=Sensor group=\"Digital\" color=#EA5532\n    export function ultrasoundSensor(tPin: DigitalPin, ePin: DigitalPin, distance_unit: Distance_Unit_List): number {\n        let pinT = tPin\n        let pinE = ePin\n        pins.setPull(pinT, PinPullMode.PullNone)\n        pins.digitalWritePin(pinT, 0)\n        control.waitMicros(2)\n        pins.digitalWritePin(pinT, 1)\n        control.waitMicros(10)\n        pins.digitalWritePin(pinT, 0)\n\n        // read pulse\n        let d = pins.pulseIn(pinE, PulseValue.High, 25000)\n        let version = control.hardwareVersion()\n        let distance = d * 34 / 2 / 1000\n        if (version == \"1\") {\n            distance = distance * 3 / 2\n        }\n\n        if (distance > 430) {\n            distance = 0\n        }\n\n        if (distance == 0) {\n            distance = distance_last\n            distance_last = 0\n        }\n        else {\n            distance_last = distance\n        }\n\n        switch (distance_unit) {\n            case Distance_Unit_List.Distance_Unit_cm:\n                return Math.floor(distance)  //cm\n                break\n            case Distance_Unit_List.Distance_Unit_foot:\n                return Math.floor(distance / 30.48)   //foot\n                break\n            default:\n                return 0\n        }\n    }\n\n    export class PAJ7620 {\n        private paj7620WriteReg(addr: number, cmd: number) {\n            let buf: Buffer = pins.createBuffer(2);\n            buf[0] = addr;\n            buf[1] = cmd;\n            pins.i2cWriteBuffer(0x73, buf, false);\n        }\n        private paj7620ReadReg(addr: number): number {\n            let buf: Buffer = pins.createBuffer(1);\n            buf[0] = addr;\n            pins.i2cWriteBuffer(0x73, buf, false);\n            buf = pins.i2cReadBuffer(0x73, 1, false);\n            return buf[0];\n        }\n        private paj7620SelectBank(bank: number) {\n            if (bank == 0) this.paj7620WriteReg(0xEF, 0);\n            else if (bank == 1) this.paj7620WriteReg(0xEF, 1);\n        }\n        private paj7620Init() {\n            let temp = 0;\n            this.paj7620SelectBank(0);\n            temp = this.paj7620ReadReg(0);\n            if (temp == 0x20) {\n                for (let i = 0; i < 438; i += 2) {\n                    this.paj7620WriteReg(initRegisterArray[i], initRegisterArray[i + 1]);\n                }\n            }\n            this.paj7620SelectBank(0);\n        }\n        init() {\n            this.paj7620Init();\n            basic.pause(200);\n        }\n        read(): number {\n            let data = 0, result = 0;\n            data = this.paj7620ReadReg(0x43);\n            switch (data) {\n                case 0x01:\n                    result = GestureType.Right;\n                    break;\n                case 0x02:\n                    result = GestureType.Left;\n                    break;\n                case 0x04:\n                    result = GestureType.Up;\n                    break;\n                case 0x08:\n                    result = GestureType.Down;\n                    break;\n                case 0x10:\n                    result = GestureType.Forward;\n                    break;\n                case 0x20:\n                    result = GestureType.Backward;\n                    break;\n                case 0x40:\n                    result = GestureType.Clockwise;\n                    break;\n                case 0x80:\n                    result = GestureType.Anticlockwise;\n                    break;\n                default:\n                    data = this.paj7620ReadReg(0x44);\n                    if (data == 0x01)\n                        result = GestureType.Wave;\n                    break;\n            }\n            return result;\n        }\n    }\n    const gestureEventId = 3100;\n    let lastGesture = GestureType.None;\n    let paj7620 = new PAJ7620();\n    //% blockId= gesture_create_event block=\"Gesture sensor IIC port is %gesture\"\n    //% gesture.fieldEditor=\"gridpicker\" gesture.fieldOptions.columns=3\n    //% subcategory=Sensor group=\"IIC Port\"\n    export function onGesture(gesture: GestureType, handler: () => void) {\n        control.onEvent(gestureEventId, gesture, handler);\n        if (gesture_first_init) {\n            paj7620.init();\n            gesture_first_init = false\n        }\n        control.inBackground(() => {\n            while (true) {\n                const gesture = paj7620.read();\n                if (gesture != lastGesture) {\n                    lastGesture = gesture;\n                    control.raiseEvent(gestureEventId, lastGesture);\n                }\n                basic.pause(200);\n            }\n        })\n    }\n\n    //% blockId= gesture_get_event block=\"Gesture sensor IIC port detects\"\n    //% subcategory=Sensor group=\"IIC Port\"\n    export function getGesture(): number {\n        if (gesture_first_init) {\n            paj7620.init();\n            gesture_first_init = false\n        }\n        const gesture = paj7620.read();\n        return gesture\n    }\n\n\n\n\n    //% blockId=apds9960_readcolor block=\"Color sensor IIC port color HUE(0~360)\"\n    //% subcategory=Sensor group=\"IIC Port\"\n    export function readColor(): number {\n        if (color_first_init == false) {\n            initModule()\n            colorMode()\n        }\n        let tmp = i2cread_color(APDS9960_ADDR, APDS9960_STATUS) & 0x1;\n        while (!tmp) {\n            basic.pause(5);\n            tmp = i2cread_color(APDS9960_ADDR, APDS9960_STATUS) & 0x1;\n        }\n        let c = i2cread_color(APDS9960_ADDR, APDS9960_CDATAL) + i2cread_color(APDS9960_ADDR, APDS9960_CDATAH) * 256;\n        let r = i2cread_color(APDS9960_ADDR, APDS9960_RDATAL) + i2cread_color(APDS9960_ADDR, APDS9960_RDATAH) * 256;\n        let g = i2cread_color(APDS9960_ADDR, APDS9960_GDATAL) + i2cread_color(APDS9960_ADDR, APDS9960_GDATAH) * 256;\n        let b = i2cread_color(APDS9960_ADDR, APDS9960_BDATAL) + i2cread_color(APDS9960_ADDR, APDS9960_BDATAH) * 256;\n        // map to rgb based on clear channel\n        let avg = c / 3;\n        r = r * 255 / avg;\n        g = g * 255 / avg;\n        b = b * 255 / avg;\n        //let hue = rgb2hue(r, g, b);\n        let hue = rgb2hsl(r, g, b)\n        return hue\n    }\n    //% block=\"Color sensor IIC port detects %color\"\n    //% subcategory=Sensor group=\"IIC Port\"\n    //% color.fieldEditor=\"gridpicker\" color.fieldOptions.columns=3\n    export function checkColor(color: ColorList): boolean {\n        let hue = readColor()\n        switch (color) {\n            case ColorList.red:\n                if (hue > 330 || hue < 20) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n            case ColorList.green:\n                if (hue > 120 && 180 > hue) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n            case ColorList.blue:\n                if (hue > 210 && 270 > hue) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n            case ColorList.cyan:\n                if (hue > 190 && 210 > hue) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n            case ColorList.magenta:\n                if (hue > 260 && 330 > hue) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n            case ColorList.yellow:\n                if (hue > 30 && 120 > hue) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n            case ColorList.white:\n                if (hue >= 180 && 190 > hue) {\n                    return true\n                }\n                else {\n                    return false\n                }\n                break\n        }\n    }\n\n    //% blockId=\"potentiometer\" block=\"Trimpot %Rjpin analog value\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=2\n    //% subcategory=Input color=#E2C438 group=\"Analog\"\n    export function trimpot(Rjpin: AnalogRJPin): number {\n        let pin = AnalogPin.P1\n        pin = RJpin_to_analog(Rjpin)\n        return pins.analogReadPin(pin)\n    }\n    //% blockId=buttonab block=\"Button %Rjpin %button is pressed\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=2\n    //% button.fieldEditor=\"gridpicker\"\n    //% button.fieldOptions.columns=1\n    //% subcategory=Input group=\"Digital\" color=#EA5532\n    export function buttonCD(Rjpin: DigitalRJPin, button: ButtonStateList): boolean {\n        let pinC = DigitalPin.P1\n        let pinD = DigitalPin.P2\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pinC = DigitalPin.P1\n                pinD = DigitalPin.P8\n                break;\n            case DigitalRJPin.J2:\n                pinC = DigitalPin.P2\n                pinD = DigitalPin.P12\n                break;\n            case DigitalRJPin.J3:\n                pinC = DigitalPin.P13\n                pinD = DigitalPin.P14\n                break;\n            case DigitalRJPin.J4:\n                pinC = DigitalPin.P15\n                pinD = DigitalPin.P16\n                break;\n            case DigitalRJPin.P3:\n                pinC = DigitalPin.P3\n                pinD = DigitalPin.P4\n                break;\n        }\n        pins.setPull(pinC, PinPullMode.PullUp)\n        pins.setPull(pinD, PinPullMode.PullUp)\n        if (pins.digitalReadPin(pinD) == 0 && pins.digitalReadPin(pinC) == 0 && button == ButtonStateList.CD) {\n            return true\n        }\n        else if (pins.digitalReadPin(pinC) == 0 && pins.digitalReadPin(pinD) == 1 && button == ButtonStateList.C) {\n            return true\n        }\n        else if (pins.digitalReadPin(pinD) == 0 && pins.digitalReadPin(pinC) == 1 && button == ButtonStateList.D) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n\n    export enum ButtonState {\n        //% block=\"on\"\n        on = 1,\n        //% block=\"off\"\n        off = 2\n    }\n\n    const buttonEventSource = 5000\n    const buttonEventValue = {\n        CD_pressed: ButtonState.on,\n        CD_unpressed: ButtonState.off\n    }\n\n    //% block=\"on button %Rjpin %button pressed\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=4\n    //% button.fieldEditor=\"gridpicker\"\n    //% button.fieldOptions.columns=1\n    //% subcategory=Input group=\"Digital\" color=#EA5532\n    export function buttonEvent(Rjpin: DigitalRJPin, button: ButtonStateList, handler: () => void) {\n        let ButtonPin_C = DigitalPin.P1\n        let ButtonPin_D = DigitalPin.P2\n        let pinEventSource_C = EventBusSource.MICROBIT_ID_IO_P0\n        let pinEventSource_D = EventBusSource.MICROBIT_ID_IO_P1\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                ButtonPin_C = DigitalPin.P1\n                ButtonPin_D = DigitalPin.P8\n                pinEventSource_C = EventBusSource.MICROBIT_ID_IO_P1\n                pinEventSource_D = EventBusSource.MICROBIT_ID_IO_P8\n                break;\n            case DigitalRJPin.J2:\n                ButtonPin_C = DigitalPin.P2\n                ButtonPin_D = DigitalPin.P12\n                pinEventSource_C = EventBusSource.MICROBIT_ID_IO_P2\n                pinEventSource_D = EventBusSource.MICROBIT_ID_IO_P12\n                break;\n            case DigitalRJPin.J3:\n                ButtonPin_C = DigitalPin.P13\n                ButtonPin_D = DigitalPin.P14\n                pinEventSource_C = EventBusSource.MICROBIT_ID_IO_P13\n                pinEventSource_D = EventBusSource.MICROBIT_ID_IO_P14\n                break;\n            case DigitalRJPin.J4:\n                ButtonPin_C = DigitalPin.P15\n                ButtonPin_D = DigitalPin.P16\n                pinEventSource_C = EventBusSource.MICROBIT_ID_IO_P15\n                pinEventSource_D = EventBusSource.MICROBIT_ID_IO_P16\n                break;\n            case DigitalRJPin.P3:\n                ButtonPin_C = DigitalPin.P3\n                ButtonPin_D = DigitalPin.P4\n                pinEventSource_C = EventBusSource.MICROBIT_ID_IO_P3\n                pinEventSource_D = EventBusSource.MICROBIT_ID_IO_P4\n                break;\n        }\n        if (button == ButtonStateList.C) {\n            pins.setPull(ButtonPin_C, PinPullMode.PullUp)\n            pins.setEvents(ButtonPin_C, PinEventType.Edge)\n            control.onEvent(pinEventSource_C, EventBusValue.MICROBIT_PIN_EVT_RISE, handler)\n        }\n        else if (button == ButtonStateList.D) {\n            pins.setPull(ButtonPin_D, PinPullMode.PullUp)\n            pins.setEvents(ButtonPin_D, PinEventType.Edge)\n            control.onEvent(pinEventSource_D, EventBusValue.MICROBIT_PIN_EVT_RISE, handler)\n        }\n        else if (button == ButtonStateList.CD) {\n            loops.everyInterval(50, function () {\n                if (pins.digitalReadPin(ButtonPin_C) == 0 && pins.digitalReadPin(ButtonPin_D) == 0) {\n                    control.raiseEvent(buttonEventSource, buttonEventValue.CD_pressed)\n                }\n            })\n            control.onEvent(buttonEventSource, buttonEventValue.CD_pressed, handler)\n        }\n    }\n\n    //% blockId=fans block=\"Motor fan %Rjpin toggle to $fanstate || speed %speed \\\\%\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=2\n    //% fanstate.shadow=\"toggleOnOff\"\n    //% subcategory=Excute group=\"Digital\" color=#EA5532\n    //% speed.min=0 speed.max=100\n    //% expandableArgumentMode=\"toggle\"\n    export function motorFan(Rjpin: DigitalRJPin, fanstate: boolean, speed: number = 100): void {\n        let pin = AnalogPin.P1\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pin = AnalogPin.P1\n                break;\n            case DigitalRJPin.J2:\n                pin = AnalogPin.P2\n                break;\n            case DigitalRJPin.J3:\n                pin = AnalogPin.P13\n                break;\n            case DigitalRJPin.J4:\n                pin = AnalogPin.P15\n                break;\n        }\n        if (fanstate) {\n            pins.analogSetPeriod(pin, 100)\n            pins.analogWritePin(pin, Math.map(speed, 0, 100, 0, 1023))\n        }\n        else {\n            pins.analogWritePin(pin, 0)\n            speed = 0\n        }\n    }\n\n\n    //% blockId=\"setLoopFolder\" block=\"loop play all the MP3s in the folder:$folderNum\"\n    //% folderNum.defl=\"01\"\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function setLoopFolder(folderNum: string): void {\n        CMD = 0x17\n        para1 = 0\n        para2 = parseInt(folderNum)\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendData()\n    }\n\n    //% blockId=\"folderPlay\" \n    //% block=\"play the mp3 in the folder:$folderNum filename:$fileNum || repeatList: $myAns\"\n    //% folderNum.defl=\"01\" fileNum.defl=\"001\"\n    //% myAns.shadow=\"toggleYesNo\"\n    //% expandableArgumentMode=\"toggle\"\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function folderPlay(folderNum: string, fileNum: string, myAns: boolean = false): void {\n        CMD = 0x0F\n        para1 = parseInt(folderNum)\n        para2 = parseInt(fileNum)\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendData()\n        if (myAns)\n            execute(0x19)\n    }\n\n    //% blockId=\"playFolderFilePort\" \n    //% block=\"play the mp3 in the folder:$folderNum filename:$fileNum usingPin:$Rjpin\"\n    //% fileNum.defl=\"01\" folderNum.defl=\"01\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function playFolderFilePort(folderNum: string, fileNum: string, Rjpin: DigitalRJPin): void {\n        let pin = SerialPin.USB_TX\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pin = SerialPin.P8\n                break;\n            case DigitalRJPin.J2:\n                pin = SerialPin.P12\n                break;\n            case DigitalRJPin.J3:\n                pin = SerialPin.P14\n                break;\n            case DigitalRJPin.J4:\n                pin = SerialPin.P16\n                break;\n            case DigitalRJPin.P0:\n                pin = SerialPin.P0\n                break;\n            case DigitalRJPin.P16:\n                pin = SerialPin.P16\n                break;\n        }\n        serial.redirect(\n            pin,\n            SerialPin.USB_RX,\n            BaudRate.BaudRate9600\n        )\n        CMD = 15\n        para1 = parseInt(folderNum)\n        para2 = parseInt(fileNum)\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendDataFast()\n    }\n\n    //% blockId=\"playFolderFileVolumePort\" \n    //% block=\"play the mp3 in the folder:$folderNum filename:$fileNum with volume:$theVolume usingPin:$Rjpin\"\n    //% fileNum.defl=\"01\" theVolume.defl=\"10\" folderNum.defl=\"01\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function playFolderFileVolumePort(folderNum: string, fileNum: string, theVolume: string, Rjpin: DigitalRJPin): void {\n        \n        let pin = SerialPin.USB_TX\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pin = SerialPin.P8\n                break;\n            case DigitalRJPin.J2:\n                pin = SerialPin.P12\n                break;\n            case DigitalRJPin.J3:\n                pin = SerialPin.P14\n                break;\n            case DigitalRJPin.J4:\n                pin = SerialPin.P16\n                break;\n            case DigitalRJPin.P0:\n                pin = SerialPin.P0\n                break;\n            case DigitalRJPin.P16:\n                pin = SerialPin.P16\n                break;\n        }\n        serial.redirect(\n            pin,\n            SerialPin.USB_RX,\n            BaudRate.BaudRate9600\n        )\n        \n        let volume = parseInt(theVolume)\n        if (volume > 25) {\n            volume = 25\n        }\n        CMD = 6\n        para1 = 0\n        para2 = volume\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendDataFast()\n        basic.pause(200)\n\n        CMD = 15\n        para1 = parseInt(folderNum)\n        para2 = parseInt(fileNum)\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendDataFast()\n    }\n\n    //% blockId=\"volumePort\" \n    //% block=\"set MP3 volume:$theVolume usingPin:$Rjpin\"\n    //% theVolume.defl=\"10\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function volumePort(theVolume: string, Rjpin: DigitalRJPin): void {\n        let pin = SerialPin.USB_TX\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pin = SerialPin.P8\n                break;\n            case DigitalRJPin.J2:\n                pin = SerialPin.P12\n                break;\n            case DigitalRJPin.J3:\n                pin = SerialPin.P14\n                break;\n            case DigitalRJPin.J4:\n                pin = SerialPin.P16\n                break;\n            case DigitalRJPin.P0:\n                pin = SerialPin.P0\n                break;\n            case DigitalRJPin.P16:\n                pin = SerialPin.P16\n                break;\n        }\n        serial.redirect(\n            pin,\n            SerialPin.USB_RX,\n            BaudRate.BaudRate9600\n        )\n        let volume = parseInt(theVolume)\n        if (volume > 30) {\n            volume = 30\n        }\n        CMD = 6\n        para1 = 0\n        para2 = volume\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendDataFast()\n        basic.pause(300)\n    }\n\n    function mp3_sendDataFast(): void {\n        let myBuff = pins.createBuffer(10);\n        for (let i = 0; i < 10; i++) {\n            myBuff.setNumber(NumberFormat.UInt8BE, i, dataArr[i])\n        }\n        serial.writeBuffer(myBuff)\n    }\n\n\n    //% blockId=\"setTracking\" \n    //% block=\"play the mp3 in order of:%tracking || repeatList: $myAns\"\n    //% myAns.shadow=\"toggleYesNo\"\n    //% tracking.defl=1\n    //% expandableArgumentMode=\"toggle\"\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function setTracking(tracking: number, myAns: boolean = false): void {\n        CMD = 0x03\n        para1 = 0x00\n        para2 = tracking\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendData()\n        execute(0x0D)\n        if (myAns)\n            execute(0x19)\n    }\n    //% blockId=MP3execute block=\"Set MP3 execute procedure:%myType\"\n    //% myType.fieldEditor=\"gridpicker\"\n    //% myType.fieldOptions.columns=2\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function execute(myType: playType): void {\n        CMD = myType\n        para1 = 0x00\n        para2 = 0x00\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendData()\n    }\n    //% blockId=\"setVolume\" block=\"Set volume(0~25):%volume\"\n    //% volume.min=0 volume.max=25\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function setVolume(volume: number): void {\n        if (volume > 25) {\n            volume = 25\n        }\n        CMD = 0x06\n        para1 = 0\n        para2 = volume\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendData()\n    }\n    //% blockId=MP3setPort block=\"Set the MP3 port to %Rjpin\"\n    //% Rjpin.fieldEditor=\"gridpicker\"\n    //% Rjpin.fieldOptions.columns=2\n    //% subcategory=Excute group=\"MP3\" color=#EA5532\n    export function MP3SetPort(Rjpin: DigitalRJPin): void {\n        let pin = SerialPin.USB_TX\n        switch (Rjpin) {\n            case DigitalRJPin.J1:\n                pin = SerialPin.P8\n                break;\n            case DigitalRJPin.J2:\n                pin = SerialPin.P12\n                break;\n            case DigitalRJPin.J3:\n                pin = SerialPin.P14\n                break;\n            case DigitalRJPin.J4:\n                pin = SerialPin.P16\n                break;\n            case DigitalRJPin.P0:\n                pin = SerialPin.P0\n                break;\n            case DigitalRJPin.P16:\n                pin = SerialPin.P16\n                break;\n            case DigitalRJPin.P14:\n                pin = SerialPin.P14\n                break;\n            case DigitalRJPin.P8:\n                pin = SerialPin.P8\n                break;\n        }\n        serial.redirect(\n            pin,\n            SerialPin.USB_RX,\n            BaudRate.BaudRate9600\n        )\n        setVolume(25)\n    }\n}","notlegos.ts":"// NotLegos Blocks\n//% block=\"Not LEGOs\" color=#0031AF weight=1000 icon=\"\\uf3a5\"\n//% groups='[\"MP3\",\"Sensors\"]'\nnamespace notLegos {\n\n\n/// BEGIN NEOPIXEL ///\n    export enum hues { red = 0, orange = 15, yellow = 40, lime = 85, green = 110, cyan = 170, blue = 240, purple = 260, pink = 310 }\n    export enum vfxEffect { parade = 0, fire = 1, indicate = 2, idle = 3, glow = 4, mine = 5, off = 6 }\n    let NeoSock: Strip = null; let NeoScore: Strip = null; let NeoWheel: Strip = null; let NeoKong: Strip = null; let NeoStrip: Strip = null; let NeoBrick: Strip = null\n    let vfx_mine_tog: number[] = []; let vfx_mine_hue: number[] = []; let vfx_mine_sat: number[] = []; let vfx_mine_lum: number[] = []\n    let vfx_fire_tog: number[] = []; let vfx_fire_hue: number[] = []; let vfx_fire_sat: number[] = []; let vfx_fire_lum: number[] = []; let vfx_fire_colors: number[] = []\n    let vfx_indicate_tog: number[] = []; let vfx_indicate_hue: number[] = []; let vfx_indicate_sat: number[] = []; let vfx_indicate_lum: number[] = [];\n    let vfx_idle_tog: number[] = []; let vfx_idle_hue: number[] = []; let vfx_idle_sat: number[] = []; let vfx_idle_lum: number[] = []\n    let vfx_glow_tog: number[] = []; let vfx_glow_hue: number[] = []; let vfx_glow_sat: number[] = []; let vfx_glow_lum: number[] = []\n    let vfx_parade_tog: number[] = []; let vfx_parade_hue: number[] = []; let vfx_parade_sat: number[] = []; let vfx_parade_lum: number[] = []; let vfx_parade_colors: number[] = [];\n    let vfx_last_tog: number[] = []; let vfx_last_hue: number[] = []; let vfx_last_sat: number[] = []; let vfx_last_lum: number[] = []\n    let vfx_master_tog: number[] = []; let vfx_master_hue: number[] = []; let vfx_master_sat: number[] = []; let vfx_master_lum: number[] = []; let vfx_master_effect: number[] = [];\n    let vfx_light_count = 0\n\n    //% shim=sendBufferAsm\n    function sendBuffer(buf: Buffer, pin: DigitalPin) { }\n\n    export class Strip {\n        buf: Buffer;\n        pin: DigitalPin;\n        start: number; // start offset in LED strip\n        _length: number; // number of LEDs\n\n        setPixelHSLPrecise(pixeloffset: number, h: number, s: number, l: number): void {\n            if (pixeloffset < 0 || pixeloffset >= this._length)\n                return;\n            pixeloffset = (pixeloffset + this.start) * 3\n            h = Math.clamp(0,1,h/360)\n            s = Math.clamp(0,1,s/100)\n            l = Math.clamp(0,1,l/100)\n            let r, g, b;\n            if (s === 0) {\n                r = g = b = l; // achromatic\n            } else {\n                const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                const p = 2 * l - q;\n                r = this.hueToRgb(p, q, h + 1 / 3);\n                g = this.hueToRgb(p, q, h);\n                b = this.hueToRgb(p, q, h - 1 / 3);\n            }\n            this.buf[pixeloffset + 0] = Math.round(g * 255);\n            this.buf[pixeloffset + 1] = Math.round(r * 255);\n            this.buf[pixeloffset + 2] = Math.round(b * 255);\n        }\n\n        hueToRgb(p:number, q:number, t:number) {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        }\n\n        show() { sendBuffer(this.buf, this.pin); }  //Send all the changes to the strip.\n\n        length() { return this._length; }   //Gets the number of pixels declared on the strip\n\n        shift(offset: number = 1): void { this.buf.shift(-offset * 3, this.start * 3, this._length * 3) }   //Shift LEDs forward and clear with zeros.\n\n        rotate(offset: number = 1): void { this.buf.rotate(-offset * 3, this.start * 3, this._length * 3) } //Rotate LEDs forward\n\n        setPin(pin: DigitalPin): void {\n            this.pin = pin;\n            pins.digitalWritePin(this.pin, 0);  // don't yield to avoid races on initialization\n        }\n    }\n\n    function create(thePin: DigitalPin, numleds: number): Strip {\n        let strip = new Strip();\n        strip.buf = pins.createBuffer(numleds * 3);\n        strip.start = 0;\n        strip._length = numleds;\n        strip.setPin(thePin)\n        return strip;\n    }\n\n    //% blockId=NL_PIXEL_CastleSay\n    //% subcategory=\"Neopixel\" Group=\"Neopixel\"\n    //% block=\"Sock Circle:%sockPin  Wheel Strip/Circle:%wheelPin  Score Circle:%scorePin \"\n    //% weight=100\n    export function castleSayLights(sockPin: DigitalPin, wheelPin: DigitalPin, scorePin: DigitalPin): void {\n        NeoScore = create(scorePin, 8)\n        NeoSock = create(sockPin, 8)\n        NeoWheel = create(wheelPin, 18)\n        vfx_light_count = 8 + 8 + 18\n        vfxInit()\n        vfx_indicate_hue[30]=hues.green\n        vfx_indicate_hue[31] = hues.yellow\n        vfx_indicate_hue[32] = hues.orange\n        vfx_indicate_hue[33] = hues.red\n        vfx_indicate_hue[26] = hues.red\n        vfx_indicate_hue[27] = hues.red\n        vfx_indicate_hue[28] = hues.red\n        vfx_indicate_hue[29] = hues.red\n\n        // setEffect(vfxRegion.CastleSayAll, vfxEffect.parade)\n    }\n\n    //% blockId=NL_PIXEL_CastleDo\n    //% subcategory=\"Neopixel\" Group=\"Neopixel\"\n    //% block=\"Strips:%spotPin  Bricks:%brickPin Kong Lights:%kongPin\"\n    //% weight=100\n    export function castleDoLights(stripPin: DigitalPin, brickPin: DigitalPin, kongPin: DigitalPin): void {\n        NeoStrip = create(stripPin, 20)\n        NeoBrick = create(brickPin, 8)\n        NeoKong = create(kongPin, 4)\n        vfx_light_count = 20 + 8 + 4\n        vfxInit()\n        vfx_indicate_hue[0]=hues.cyan; vfx_indicate_hue[1]=hues.cyan   //spot h\n        vfx_indicate_hue[2] = hues.pink; vfx_indicate_hue[3] = hues.pink //spot f\n        vfx_indicate_hue[26] = hues.pink   //shell brick\n        vfx_indicate_hue[4] = hues.orange; vfx_indicate_hue[5] = hues.orange   //spot d\n        vfx_indicate_hue[21] = hues.orange   //cannon brick\n        vfx_indicate_hue[25] = hues.orange   //bomb brick\n        vfx_indicate_hue[6] = hues.yellow; vfx_indicate_hue[7] = hues.yellow   //spot b\n        vfx_indicate_hue[8] = hues.red; vfx_indicate_hue[9] = hues.red; vfx_indicate_hue[10] = hues.red; vfx_indicate_hue[11] = hues.red  //spot a\n        vfx_indicate_hue[20] = hues.red; vfx_indicate_hue[27] = hues.red  //wheel bricks\n        vfx_indicate_hue[12] = hues.blue; vfx_indicate_hue[13] = hues.blue    //spot c\n        vfx_indicate_hue[14] = hues.cyan; vfx_indicate_hue[15] = hues.cyan    //spot e\n        vfx_indicate_hue[16] = hues.purple; vfx_indicate_hue[17] = hues.purple  //spot g\n        vfx_indicate_hue[24] = hues.purple  //ghost brick\n        vfx_indicate_hue[18] = hues.green; vfx_indicate_hue[19] = hues.green   //spot i\n        vfx_indicate_hue[28] = hues.green; vfx_indicate_hue[29] = hues.green; vfx_indicate_hue[30] = hues.green; vfx_indicate_hue[31] = hues.green   //kong\n        vfx_indicate_hue[22] = hues.yellow; vfx_indicate_hue[23] = hues.yellow  //dragon brick\n        vfx_indicate_tog[0] = 1; vfx_indicate_tog[1] = 1 //spot h\n        vfx_indicate_tog[2] = 1; vfx_indicate_tog[3] = 1 //spot f\n        vfx_indicate_tog[4] = 1; vfx_indicate_tog[5] = 1 //spot d\n        vfx_indicate_tog[6] = 1; vfx_indicate_tog[7] = 1 //spot b\n        vfx_indicate_tog[8] = 1; vfx_indicate_tog[9] = 1 //spot a\n        vfx_indicate_tog[22] = 1; vfx_indicate_tog[27] = 1    //wheel bricks\n        vfx_indicate_tog[21] = 1    //cannon brick\n        vfx_indicate_tog[25] = 1    //bomb brick\n        vfx_indicate_tog[26] = 1    //shell brick\n        vfx_indicate_tog[31] = 1; vfx_indicate_tog[30] = 1    //kong\n        \n        // setEffect(vfxRegion.CastleDoAll, vfxEffect.indicate)\n    }\n\n    function vfxInit(): void{\n        vfx_parade_colors = [hues.red, hues.orange, hues.yellow, hues.cyan, hues.blue, hues.purple]\n        vfx_fire_colors = [hues.red, hues.red, hues.red, hues.red, hues.orange, hues.orange, hues.orange, hues.orange, hues.orange, hues.yellow]\n        for (let index = 0; index < vfx_light_count; index++) {\n             \n            vfx_indicate_tog.push(0)\n            vfx_indicate_lum.push(50)\n            vfx_indicate_hue.push(50)\n            vfx_indicate_sat.push(100)\n\n            vfx_mine_tog.push(0)\n            vfx_mine_hue.push(hues.red)\n            vfx_mine_sat.push(100)\n            vfx_mine_lum.push(50)\n\n            vfx_fire_tog.push(randint(0, 1))\n            vfx_fire_hue.push(vfx_fire_colors[randint(0, vfx_fire_colors.length - 1)])\n            vfx_fire_sat.push(100)\n            vfx_fire_lum.push(randint(30, 80))\n\n            vfx_idle_tog.push(1)\n            if (index % 2 == 0) { vfx_idle_tog[index] = 0; }\n            vfx_idle_hue.push(265)\n            if (index % 2 == 0) { vfx_idle_hue[index] = 2; }\n            vfx_idle_sat.push(100)\n            vfx_idle_lum.push(50)\n\n            vfx_glow_tog.push(0)\n            vfx_glow_hue.push(50)\n            vfx_glow_sat.push(0)\n            vfx_glow_lum.push(0)\n\n            vfx_parade_tog.push(randint(0, 1))\n            vfx_parade_hue.push(vfx_parade_colors[randint(0, vfx_parade_colors.length-1)])\n            vfx_parade_sat.push(100)\n            vfx_parade_lum.push(randint(10, 65))\n\n            vfx_last_tog.push(0)\n            vfx_last_hue.push(50)\n            vfx_last_sat.push(100)\n            vfx_last_lum.push(50)\n\n            vfx_master_tog.push(0)\n            vfx_master_hue.push(0)\n            vfx_master_sat.push(100)\n            vfx_master_lum.push(50)\n            vfx_master_effect.push(vfxEffect.off)    //leave this be!\n        }\n    }\n\n    //% blockId=NL_PIXEL_ResetVFX\n    //% subcategory=\"Neopixel\" Group=\"Neopixel\"\n    //% block=\"Reset VFX %effect\"\n    //% weight=100\n    export function vfxReset(effect:vfxEffect):void{\n        if (effect == vfxEffect.idle){\n            for (let index = 0; index < vfx_light_count; index++) {\n                vfx_idle_tog[index]=1\n                if (index % 2 == 0) { vfx_idle_tog[index] = 0; }\n                vfx_idle_hue[index]=265\n                if (index % 2 == 0) { vfx_idle_hue[index] = 2; }\n                vfx_idle_sat[index]=100\n                vfx_idle_lum[index]=50\n            }\n        } else if (effect == vfxEffect.glow) {\n            for (let index = 0; index < vfx_light_count; index++) {\n                vfx_glow_tog[index] = 0\n                vfx_glow_hue[index] = 50\n                // vfx_glow_sat[index] = 100\n                vfx_glow_lum[index] = 0\n            }\n        } else if (effect == vfxEffect.mine) {\n            for (let index = 0; index < vfx_light_count; index++) {\n                vfx_mine_tog[index] = 0\n                vfx_mine_hue[index] = hues.red\n                vfx_mine_sat[index] = 100\n                vfx_mine_lum[index] = 50\n            }\n        } else if (effect == vfxEffect.indicate) {\n            for (let index = 0; index < vfx_light_count; index++) {\n                vfx_indicate_tog[index] = 0\n                vfx_indicate_sat[index] = 100\n                vfx_indicate_lum[index] = 50\n            }\n        }\n    }\n\n    //% blockId=NL_PIXEL_CastleSayTick\n    //% subcategory=\"Neopixel\" Group=\"Neopixel\"\n    //% block=\"Advance Castle Say lights\"\n    //% weight=100\n    export function castleSayTick(): void {\n        paradeTick()\n        fireTick()\n        glowTick()\n        castleSayWrite()\n        indicateTick()\n        idleTick()\n        mineTick()\n    }\n\n    //% blockId=NL_PIXEL_CastleDoTick\n    //% subcategory=\"Neopixel\" Group=\"Neopixel\"\n    //% block=\"Advance Castle Do lights\"\n    //% weight=100\n    export function castleDoTick(): void {\n        paradeTick()\n        fireTick()\n        glowTick()\n        castleDoWrite()\n        indicateTick()\n        idleTick()\n        mineTick()\n    }\n\n    function paradeTick(): void{\n        for (let index=0; index < vfx_light_count; index++){\n            let thisLum = vfx_parade_lum[index]\n            let thisHue = vfx_parade_hue[index]\n            let thisTog = vfx_parade_tog[index]\n            let nextHue = thisHue\n            if (thisTog == 0){\n                if (thisLum < 65){\n                    vfx_parade_lum[index] = thisLum + 12\n                } else if (thisLum >= 65){\n                    vfx_parade_tog[index] = 1\n                }\n            } else if (thisTog == 1){\n                if (thisLum>10){\n                    vfx_parade_lum[index] = thisLum - 4\n                } else if (thisLum <= 10){\n                    vfx_parade_tog[index] = 0\n                    while (nextHue == thisHue){\n                        nextHue = vfx_parade_colors[randint(0, vfx_parade_colors.length - 1)]\n                    }\n                    vfx_parade_hue[index] = nextHue\n                    vfx_parade_lum[index] = thisLum - randint(0,10)\n                }\n            }\n        }\n    }\n\n    function mineTick(): void {\n        for (let index = 0; index < vfx_light_count; index++) {\n            let thisLum = vfx_mine_lum[index]\n            let thisHue = vfx_mine_hue[index]\n            let thisTog = vfx_mine_tog[index]\n            let nextHue = thisHue\n            if (thisTog == 0) {\n                if (thisLum < 200) {\n                    vfx_mine_lum[index] = thisLum + 30\n                } else if (thisLum >= 200) {\n                    vfx_mine_tog[index] = 1\n                }\n            } else if (thisTog == 1) {\n                if (thisLum > 0) {\n                    vfx_mine_lum[index] = thisLum - 30\n                } else if (thisLum <= 0) {\n                    vfx_mine_tog[index] = 0\n                }\n            }\n        }\n    }\n\n    function idleTick(): void {\n        for (let index = 0; index < vfx_light_count; index++) {\n            let thisLum = vfx_idle_lum[index]\n            let thisHue = vfx_idle_hue[index]\n            let thisTog = vfx_idle_tog[index]\n            let nextHue = thisHue\n            if (thisTog == 0) {\n                if (thisHue < 265) {\n                    vfx_idle_hue[index] = thisHue + 1\n                } else if (thisHue >= 265) {\n                    vfx_idle_tog[index] = 1\n                }\n            } else if (thisTog == 1) {\n                if (thisHue > 2) {\n                    vfx_idle_hue[index] = thisHue - 1\n                } else if (thisHue <= 2) {\n                    vfx_idle_tog[index] = 0\n                }\n            }\n        }\n    }\n\n    function indicateTick(): void {\n        for (let index = 0; index < vfx_light_count; index++) {\n            let thisLum = vfx_indicate_lum[index]\n            let thisHue = vfx_indicate_hue[index]\n            let thisTog = vfx_indicate_tog[index]\n            let nextHue = thisHue\n            if (thisTog == 0) {\n                if (thisLum < 80) {\n                    vfx_indicate_lum[index] = thisLum + 12\n                } else if (thisLum >= 80) {\n                    vfx_indicate_tog[index] = 1\n                }\n            } else if (thisTog == 1) {\n                if (thisLum > 25) {\n                    vfx_indicate_lum[index] = thisLum - 4\n                } else if (thisLum <= 25) {\n                    vfx_indicate_tog[index] = 0\n                }\n            }\n        }\n    }\n\n    function fireTick(): void {\n        for (let index = 0; index < vfx_light_count; index++) {\n            let thisLum = vfx_fire_lum[index]\n            let thisHue = vfx_fire_hue[index]\n            let thisTog = vfx_fire_tog[index]\n            let nextHue = thisHue\n            if (thisTog == 0) {\n                if (thisLum < 80) {\n                    vfx_fire_lum[index] = thisLum + 15\n                } else if (thisLum >= 80) {\n                    vfx_fire_tog[index] = 1\n                }\n            } else if (thisTog == 1) {\n                if (thisLum > 30) {\n                    vfx_fire_lum[index] = thisLum - 5\n                } else if (thisLum <= 30) {\n                    vfx_fire_tog[index] = 0\n                    while (nextHue == thisHue) {\n                        nextHue = vfx_fire_colors[randint(0, vfx_fire_colors.length - 1)]\n                    }\n                    vfx_fire_hue[index] = nextHue\n                    vfx_fire_lum[index] = thisLum - randint(0, 30)\n                }\n            }\n        }\n    }\n\n    function glowTick(): void {\n        for (let index = 0; index < vfx_light_count; index++) {\n            let thisLum = vfx_glow_lum[index]\n            if (thisLum < 4){\n                vfx_glow_lum[index] = thisLum+.2\n            } else if (thisLum < 5) {\n                vfx_glow_lum[index] = thisLum+ + .3\n            } else if (thisLum < 10) {\n                vfx_glow_lum[index] = thisLum + .5\n            } else if (thisLum < 15) {\n                vfx_glow_lum[index] = thisLum + 1\n            }else if (thisLum < 30) {\n                vfx_glow_lum[index] = thisLum + 1.5\n            } else if (thisLum < 100) {\n                vfx_glow_lum[index] = thisLum + 4\n            } else{\n                vfx_glow_lum[index] = 0\n            }\n        }\n    }\n\n    function vfxPrepareMaster(): void{\n        for (let index = 0; index < vfx_light_count; index++) {\n            let thisEffect = vfx_master_effect[index]\n            if (thisEffect == vfxEffect.parade) {\n                vfx_master_hue[index] = vfx_parade_hue[index]\n                vfx_master_sat[index] = vfx_parade_sat[index]\n                vfx_master_lum[index] = Math.max(0,Math.min(50,vfx_parade_lum[index]))\n            } else if (thisEffect == vfxEffect.fire) {\n                vfx_master_hue[index] = vfx_fire_hue[index]\n                vfx_master_sat[index] = vfx_fire_sat[index]\n                vfx_master_lum[index] = Math.max(0, Math.min(50, vfx_fire_lum[index]))\n            } else if (thisEffect == vfxEffect.indicate) {\n                vfx_master_hue[index] = vfx_indicate_hue[index]\n                vfx_master_sat[index] = vfx_indicate_sat[index]\n                vfx_master_lum[index] = Math.max(0, Math.min(50, vfx_indicate_lum[index]))\n            } else if (thisEffect == vfxEffect.idle) {\n                vfx_master_hue[index] = vfx_idle_hue[index]\n                vfx_master_sat[index] = vfx_idle_sat[index]\n                vfx_master_lum[index] = Math.max(0, Math.min(50, vfx_idle_lum[index]))\n            } else if (thisEffect == vfxEffect.glow) {\n                vfx_master_hue[index] = vfx_glow_hue[index]\n                vfx_master_sat[index] = vfx_glow_sat[index]\n                vfx_master_lum[index] = Math.min(100,vfx_glow_lum[index])\n            } else if (thisEffect == vfxEffect.mine) {\n                vfx_master_hue[index] = vfx_mine_hue[index]\n                vfx_master_sat[index] = vfx_mine_sat[index]\n                vfx_master_lum[index] = Math.max(0, Math.min(50, vfx_mine_lum[index]))\n            } else if (thisEffect == vfxEffect.off) {\n                vfx_master_hue[index] = vfx_mine_hue[index]\n                vfx_master_sat[index] = vfx_mine_sat[index]\n                vfx_master_lum[index] = 0\n            }\n        }\n    }\n    function castleSayWrite(): void{\n        vfxPrepareMaster()\n        let masterIndex = 0\n        for (let index = 0; index < NeoSock.length(); index++){\n            NeoSock.setPixelHSLPrecise(index, vfx_master_hue[masterIndex], vfx_master_sat[masterIndex], vfx_master_lum[masterIndex])\n            masterIndex++\n        }\n        for (let index = 0; index < NeoWheel.length(); index++) {\n            NeoWheel.setPixelHSLPrecise(index, vfx_master_hue[masterIndex], vfx_master_sat[masterIndex], vfx_master_lum[masterIndex])\n            masterIndex++\n        }\n        for (let index = 0; index < NeoScore.length(); index++) {\n            NeoScore.setPixelHSLPrecise(index, vfx_master_hue[masterIndex], vfx_master_sat[masterIndex], vfx_master_lum[masterIndex])\n            masterIndex++\n        }\n        NeoSock.show()\n        NeoWheel.show()\n        NeoScore.show()\n    }\n\n    function castleDoWrite(): void {\n        vfxPrepareMaster()\n        let masterIndex = 0\n        for (let index = 0; index < NeoStrip.length(); index++) {\n            NeoStrip.setPixelHSLPrecise(index, vfx_master_hue[masterIndex], vfx_master_sat[masterIndex], vfx_master_lum[masterIndex])\n            masterIndex++\n        }\n        for (let index = 0; index < NeoBrick.length(); index++) {\n            NeoBrick.setPixelHSLPrecise(index, vfx_master_hue[masterIndex], vfx_master_sat[masterIndex], vfx_master_lum[masterIndex])\n            masterIndex++\n        }\n        for (let index = 0; index < NeoKong.length(); index++) {\n            NeoKong.setPixelHSLPrecise(index, vfx_master_hue[masterIndex], vfx_master_sat[masterIndex], vfx_master_lum[masterIndex])\n            masterIndex++\n        }\n        NeoStrip.show()\n        NeoBrick.show()\n        NeoKong.show()\n    }\n\n    //% blockId=NL_PIXEL_SetEffect\n    //% subcategory=\"Neopixel\" Group=\"Neopixel\"\n    //% block=\"Set %region VFX to %effect\"\n    //% weight=100\n    export function setEffect(region:vfxRegion, effect:vfxEffect){\n        if (region == vfxRegion.Score1){\n            vfx_master_effect[30] = effect\n        } else if (region == vfxRegion.Score2) {\n            vfx_master_effect[31] = effect\n        } else if (region == vfxRegion.Score3) {\n            vfx_master_effect[32] = effect\n        } else if (region == vfxRegion.Score4) {\n            vfx_master_effect[33] = effect\n        } else if (region == vfxRegion.Score5) {\n            vfx_master_effect[26] = effect\n        } else if (region == vfxRegion.Score6) {\n            vfx_master_effect[27] = effect\n        } else if (region == vfxRegion.Score7) {\n            vfx_master_effect[28] = effect\n        } else if (region == vfxRegion.Score8) {\n            vfx_master_effect[29] = effect\n        } else if (region == vfxRegion.ScoreAll) {\n            for (let i = 26; i <= 33; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SockAll) {\n            for (let i = 0; i <= 7; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.WheelInner) {\n            for (let i = 18; i <= 25; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.WheelOuter) {\n            for (let i = 8; i <= 17; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.WheelAll) {\n            for (let i=8; i <= 25; i++){ vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.CastleSayAll) {\n            for (let i = 0; i <= 33; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotA) {\n            for (let i = 8; i <= 11; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotB) {\n            for (let i = 6; i <= 7; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotC) {\n            for (let i = 12; i <= 13; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotD) {\n            for (let i = 4; i <= 5; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotE) {\n            for (let i = 14; i <= 15; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotF) {\n            for (let i = 2; i <= 3; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotG) {\n            for (let i = 16; i <= 17; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotH) {\n            for (let i = 0; i <= 1; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotI) {\n            for (let i = 18; i <= 19; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.SpotAll) {\n            for (let i = 0; i <= 19; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.BrickWheel) {\n            vfx_master_effect[20] = effect\n            vfx_master_effect[27] = effect\n        } else if (region == vfxRegion.BrickBomb) {\n            vfx_master_effect[25] = effect\n        } else if (region == vfxRegion.BrickShell) {\n            vfx_master_effect[26] = effect\n        } else if (region == vfxRegion.BrickGhost) {\n            vfx_master_effect[24] = effect\n        } else if (region == vfxRegion.BrickDragon) {\n            for (let i = 22; i <= 23; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.BrickCannon) {\n            vfx_master_effect[21] = effect\n        } else if (region == vfxRegion.BrickAll) {\n            for (let i = 20; i <= 27; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.KongFront) {\n            for (let i = 28; i <= 29; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.KongBack) {\n            for (let i = 30; i <= 31; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.KongAll) {\n            for (let i = 28; i <=31; i++) { vfx_master_effect[i] = effect };\n        } else if (region == vfxRegion.CastleDoAll) {\n            for (let i = 0; i < vfx_light_count; i++) { vfx_master_effect[i] = effect };\n        } \n    }\n\n    export enum vfxRegion{\n        Score1, Score2, Score3, Score4, Score5, Score6, Score7, Score8, ScoreAll,\n        SockAll,\n        WheelInner, WheelOuter, WheelAll,\n        KongFront, KongBack, KongAll,\n        BrickWheel, BrickBomb, BrickShell, BrickGhost, BrickDragon, BrickCannon, BrickAll,\n        SpotA, SpotB, SpotC, SpotD, SpotE, SpotF, SpotG, SpotH, SpotI, SpotAll,\n        CastleSayAll,\n        CastleDoAll\n    }\n\n/// END NEOPIXEL ///\n\n\n/// BEGIN SONAR ///\n\n    let sonarPinT = DigitalPin.P0\n    let sonarPinE = DigitalPin.P0\n\n    //% blockId=NL_SENSOR_SonarFirstRead\n    //% subcategory=\"Sensors\" Group=\"Sensors\"\n    //% block=\"first distance from sonar at %pin1|%pin2\"\n    //% weight=101\n    export function SonarFirstRead(pin1: DigitalPin, pin2: DigitalPin): number {\n        sonarPinT = pin1\n        sonarPinE = pin2\n        pins.setPull(sonarPinT, PinPullMode.PullNone)\n        return SonarNextRead()\n    }\n\n    //% blockId=NL_SENSOR_SonarNextRead\n    //% subcategory=\"Sensors\" Group=\"Sensors\"\n    //% block=\"next sonar distance\"\n    //% weight=100\n    export function SonarNextRead(): number {\n        pins.digitalWritePin(sonarPinT, 0)\n        control.waitMicros(2)\n        pins.digitalWritePin(sonarPinT, 1)\n        control.waitMicros(10)\n        pins.digitalWritePin(sonarPinT, 0)\n        return Math.floor(pins.pulseIn(sonarPinE, PulseValue.High, 25000) * 34 / 2000)\n    }\n\n/// END SONAR ///\n\n\n/// BEGIN MP3 ///\n\n    export enum playType { Play = 0x0D, Stop = 0x16, PlayNext = 0x01, PlayPrevious = 0x02, Pause = 0x0E }\n    let Start_Byte = 0x7E\n    let Version_Byte = 0xFF\n    let Command_Length = 0x06\n    let End_Byte = 0xEF\n    let Acknowledge = 0x00\n    let CMD = 0x00\n    let para1 = 0x00\n    let para2 = 0x00\n    let highByte = 0x00\n    let lowByte = 0x00\n    let dataArr: number[] = [Start_Byte, Version_Byte, Command_Length, CMD, Acknowledge, para1, para2, highByte, lowByte, End_Byte]\n    let mp3musicPin: SerialPin\n    let mp3music = false\n    let mp3player = false\n    let mp3sfxPin: SerialPin\n    let mp3sfx = false\n    let mp3musicVol = 0\n    let mp3playerPin: SerialPin\n    let mp3playerVol = 0\n    let mp3sfxVol = 0\n    let isPot = false\n    let potPin = AnalogPin.P0\n    let masterVolume = 25\n\n    //% blockId=NL_SENSOR_TrimpotSet\n    //% subcategory=\"Sensors\" Group=\"Sensors\"\n    //% block=\"set volume control pot at %aPin\"\n    export function potSet(aPin: AnalogPin): void {\n        potPin = aPin\n        isPot = true\n        masterVolume = potRead()\n    }\n\n    function potRead() {\n        if (isPot) { return Math.round(pins.map(pins.analogReadPin(potPin), 0, 1023, 0, 30)) }\n        else { return 5 }\n    }\n\n    function mp3_checkSum(): void {\n        let total = 0;\n        for (let i = 1; i < 7; i++) { total += dataArr[i] }\n        total = 65536 - total\n        lowByte = total & 0xFF;\n        highByte = total >> 8;\n        dataArr[7] = highByte\n        dataArr[8] = lowByte\n    }\n\n    function mp3_sendData(): void {\n        let myBuff = pins.createBuffer(10);\n        for (let i = 0; i < 10; i++) { myBuff.setNumber(NumberFormat.UInt8BE, i, dataArr[i]) }\n        serial.writeBuffer(myBuff)\n        basic.pause(20) // Was 100; problematic at 10\n    }\n\n    function mp3_sendDataFast(): void {\n        let myBuff = pins.createBuffer(10);\n        for (let i = 0; i < 10; i++) { myBuff.setNumber(NumberFormat.UInt8BE, i, dataArr[i]) }\n        serial.writeBuffer(myBuff)\n    }\n\n    //% blockId=NL_MP3_InitiateAs\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Ready MP3bit for %type at %sPin\"\n    //% dPin.fieldEditor=\"gridpicker\"\n    export function mp3setPorts(mp3bit: mp3type, sPin: SerialPin): void {\n        if (mp3bit == mp3type.music) {\n            mp3musicPin = sPin\n            mp3music = true\n            mp3musicVol = 100\n            setVolume(mp3type.music, mp3musicVol)\n        } else if (mp3bit == mp3type.player) {\n            mp3playerPin = sPin\n            mp3player = true\n            mp3playerVol = 100\n            setVolume(mp3type.player, mp3playerVol)\n        } else if (mp3bit == mp3type.sfxvoice) {\n            mp3sfxPin = sPin\n            mp3sfx = true\n            mp3sfxVol = 100\n            setVolume(mp3type.sfxvoice, mp3sfxVol)\n        }   \n    }\n\n    //% blockId=\"nl_playfilefolder\" \n    //% block=\"Play folder %folderNum file %fileNum on %sPin\"\n    //% subcategory=MP3 group=\"MP3\"\n    export function sendMP3fileFolder(folderNum: string, fileNum: string, sPin: SerialPin): void {\n        serial.redirect(sPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n        dataArr[5] = parseInt(folderNum)\n        dataArr[6] = parseInt(fileNum)\n        mp3_checkSum()\n        mp3_sendDataFast()\n    }\n\n    //% blockId=\"NL_MP3_SendNumbers\" \n    //% block=\"Send numbers for folder %folderNum file %fileNum on %sPin\"\n    //% subcategory=MP3 group=\"MP3\"\n    export function sendMP3numbers(folderNum: number, fileNum: number, sPin: SerialPin): void {\n        serial.redirect(sPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n        dataArr[3] = 15\n        dataArr[5] = folderNum\n        dataArr[6] = fileNum\n        mp3_checkSum()\n        mp3_sendDataFast()\n    }\n\n    //% blockId=NL_MP3_UpdateVolume\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Update volume for all\"\n    export function updateVolumeGlobal(): void {\n        let nowVol = potRead()\n        if (masterVolume != nowVol){\n            masterVolume = nowVol\n            setVolume(mp3type.music, mp3musicVol)\n            setVolume(mp3type.player, mp3playerVol)\n            setVolume(mp3type.sfxvoice, mp3sfxVol)\n        }\n    }\n\n    //% blockId=NL_MP3_SetVolume\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Set %mp3bit volume to %vol\"\n    export function setVolume(mp3bit:mp3type, vol:number): void {\n        if (mp3bit == mp3type.music) {\n            serial.redirect(mp3musicPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n            mp3musicVol = vol\n        } else if (mp3bit == mp3type.player) {\n            serial.redirect(mp3playerPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n            mp3playerVol = vol\n        } else if (mp3bit == mp3type.sfxvoice) {\n            serial.redirect(mp3sfxPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n            mp3sfxVol = vol\n        }\n        dataArr[3] = 6\n        dataArr[5] = 0\n        dataArr[6] = Math.round(vol / 100 * masterVolume)\n        mp3_checkSum()\n        mp3_sendDataFast()\n    }\n\n    //% blockId=NL_MP3_GetVolumes\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Get current volumes\"\n    export function getVolumes() {\n        return \"m\" + mp3musicVol + \" p\" + mp3playerVol + \" s\" + mp3sfxVol + \" g\" + masterVolume\n    }\n\n    //% blockId=\"NL_MP3_StopPlayback\" \n    //% block=\"Stop playback on %mp3bit\"\n    //% subcategory=MP3 group=\"MP3\"\n    export function stopPlayback(mp3bit:mp3type): void {\n        if (mp3bit == mp3type.music) {\n            serial.redirect(mp3musicPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n        } else if (mp3bit == mp3type.player){\n            serial.redirect(mp3playerPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n        } else if (mp3bit == mp3type.sfxvoice) {\n            serial.redirect(mp3sfxPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n        }\n        CMD = 0x16\n        para1 = 0x00\n        para2 = 0x00\n        dataArr[3] = CMD\n        dataArr[5] = para1\n        dataArr[6] = para2\n        mp3_checkSum()\n        mp3_sendData()\n    }\n\n/// END MP3 ///\n\n/// BEGIN SOUND BANK ///\n    export enum mp3type { music, player, sfxvoice }\n    export enum musicGenre { intro, tutorial, awaiting, level, won, lost }\n    export enum playerSaying { ready, yay, intro, nay, ouch, success, failure, won, lost, hurry }\n    export enum sfxType { correct, incorrect, ghost, fire, explosion, splash, spark, slash }\n    export enum voiceSaying { name, begin, retry, next, complete, gameover, welcome, intro, howto1, howto2, howto3, howto4, howto5, howto6, howto7, howto8, howto9 }\n    export enum magicianSaysSide { left, right }\n    export enum magicianDifficulty { easy, medium, hard }\n    export enum spotName { A, B, C, D, E, F, G, H, I }\n    export enum playerChar { mario, luigi, peach, daisy, toad, wario }\n\n    let sb_music_tutorial = feedBank(\"1.1.46|1.2.51|1.3.51|1.4.59|1.5.60|1.6.60|1.7.60|1.8.60|1.9.60|1.10.60|1.11.60|1.12.60|1.13.60|1.14.60|1.15.60|1.16.60|1.17.60|1.18.60|1.19.60|1.20.60|1.21.60\")\n    let sb_music_awaiting = feedBank(\"2.1.64|2.2.120|2.3.120|2.4.120|2.5.120|2.6.114|2.7.120|2.8.103|2.9.120|2.10.120|2.11.120|2.12.120|2.13.119|2.14.120|2.15.120|2.16.103|2.17.119|2.18.120|2.19.86|2.20.120\")\n    let sb_music_level = feedBank(\"3.1.120|3.2.120|3.3.120|3.4.120|3.5.120|3.6.120|3.7.120|3.8.120|3.9.120|3.10.92|3.11.120|3.12.120|3.13.111|3.14.116|3.15.98|3.16.120|3.17.120|3.18.82|3.19.120|3.20.120|3.21.120|3.22.120|3.23.120|3.24.120|3.25.120|3.26.120|3.27.91|3.28.120|3.29.120|3.30.41|3.31.120|3.32.120|3.33.120|3.34.94|3.35.120|3.36.120|3.37.120|3.38.120|3.39.120|3.40.120|3.41.78|3.42.120|3.43.120|3.44.120|3.45.120|3.46.120|3.47.120|3.48.120|3.49.120|3.50.120|3.51.120|3.52.113|3.53.120|3.54.120|3.55.42|3.56.120|3.57.120|3.58.120|3.59.114|3.60.120|3.61.120|3.62.118|3.63.120|3.64.120|3.65.120|3.66.120|3.67.120|3.68.59|3.69.120|3.70.120|3.71.118|3.72.120|3.73.120|3.74.70|3.75.120|3.76.120|3.77.120|3.78.120|3.79.120|3.80.120|3.81.120|3.82.120|3.83.80|3.84.120|3.85.120|3.86.120|3.87.120|3.88.107|3.89.120|3.90.120|3.91.120|3.92.120|3.93.36|3.94.120|3.95.120|3.96.120|3.97.120|3.98.120|3.99.120|3.100.63|3.101.120|3.102.120|3.103.112|3.104.105|3.105.120|3.106.110|3.107.120|3.108.120|3.109.120|3.110.120|3.111.120|3.112.120|3.113.120|3.114.120|3.115.120|3.116.119|3.117.120|3.118.120|3.119.120|3.120.120|3.121.120|3.122.120|3.123.120|3.124.120|3.125.120|3.126.104|3.127.120|3.128.87|3.129.120|3.130.118|3.131.120|3.132.120|3.133.50|3.134.109|3.135.120|3.136.120|3.137.120|3.138.91|3.139.120|3.140.120|3.141.120|3.142.120|3.143.120|3.144.120|3.145.104|3.146.112|3.147.120\")\n    let sb_music_won = feedBank(\"4.1.30|4.2.22|4.3.30|4.4.17|4.5.29|4.6.30|4.7.30|4.8.30|4.9.30|4.10.30|4.11.20|4.12.28|4.13.30|4.14.15|4.15.30|4.16.17|4.17.17|4.18.15|4.19.30|4.20.30|4.21.30|4.22.17|4.23.30|4.24.30|4.25.30\")\n    let sb_music_lost = feedBank(\"5.1.30|5.2.30|5.3.30|5.4.30|5.5.30|5.6.30|5.7.30|5.8.30|5.9.30|5.10.30|5.11.30\")\n    let sb_music_intro = feedBank(\"9.1.3|9.2.4|9.3.8|9.4.5|9.5.4|9.6.12|9.7.3|9.8.7|9.9.6|9.10.7|9.11.9|9.12.9|9.13.11|9.14.3|9.15.10|9.16.3|9.17.6|9.18.5|9.19.6|9.20.5|9.21.7|9.22.5|9.23.3|9.24.7|9.25.6|9.26.6|9.27.11|9.28.5|9.29.5|9.30.4|9.31.6|9.32.4|9.33.4|9.34.10|9.35.8|9.36.8|9.37.3|9.38.7|9.39.4|9.40.6|9.41.3|9.42.7|9.43.7|9.44.3|9.45.6|9.46.1|9.47.2|9.48.2|9.49.8|9.50.16|9.51.9|9.52.10|9.53.13|9.54.14|9.55.14|9.56.16|9.57.7|9.58.4|9.59.9|9.60.8|9.61.9|9.62.9|9.63.12|9.64.4|9.65.6|9.66.9|9.67.5|9.68.6|9.69.5|9.70.10|9.71.8|9.72.8|9.73.5|9.74.3\")\n    let sb_sfx_correct = feedBank(\"6.1.5|6.2.8|6.3.6|6.4.7|6.5.6|6.6.14|6.7.7|6.8.8|6.9.12|6.10.7|6.11.9|6.12.7|6.13.10|6.14.8|6.15.8|6.16.4|6.17.7|6.18.4|6.19.2|6.20.10|6.21.7|6.22.7|6.23.6|6.24.4|6.25.7|6.26.12|6.27.4|6.28.6|6.29.6|6.30.6|6.31.4|6.32.5|6.33.3|6.34.6|6.35.6|6.36.6|6.37.6|6.38.4|6.39.8|6.40.6|6.41.3|6.42.3|6.43.7|6.44.8|6.45.6|6.46.2|6.47.5|6.48.7|6.49.8|6.50.7|6.51.6|6.52.7|6.53.6|6.54.8|6.55.5|6.56.5|6.57.7|6.58.6|6.59.8|6.60.5|6.61.6|6.62.8|6.63.3|6.64.3|6.65.6|6.66.3|6.67.6|6.68.2|6.69.3|6.70.3|6.71.2|6.72.3|6.73.6|6.74.7|6.75.5|6.76.3|6.77.5|6.78.3|6.79.2|6.80.3|6.81.3|6.82.1|6.83.1|6.84.1|6.85.1|6.86.1|6.87.1|6.88.3|6.89.1|6.90.1|6.91.4|6.92.4\")\n    let sb_sfx_incorrect = feedBank(\"7.1.6|7.2.5|7.3.3|7.4.5|7.5.7|7.6.6|7.7.4|7.8.1|7.9.3|7.10.4|7.11.3|7.12.3|7.13.6|7.14.3|7.15.1|7.16.1|7.17.1|7.18.1|7.19.5|7.20.4|7.21.3|7.22.7\")\n    let sb_sfx_beep = feedBank(\"8.1.1|8.2.2|8.3.1\")\n    let sb_sfx_smash = feedBank(\"8.4.1|8.5.1|8.6.1|8.7.3\")\n    let sb_sfx_falling = feedBank(\"8.8.6\")\n    let sb_sfx_boom = feedBank(\"8.9.1|8.10.2|8.11.3|8.12.2\")\n    let sb_sfx_cannon = feedBank(\"8.13.2|8.14.1|8.15.1|8.16.2|8.17.2\")\n    let sb_sfx_fire = feedBank(\"8.18.2|8.19.2|8.20.5|8.21.2\")\n    let sb_sfx_ghost = feedBank(\"8.22.5|8.23.4|8.24.5|8.25.5\")\n    let sb_sfx_hit = feedBank(\"8.26.1|8.27.1|8.28.1|8.29.1|8.30.1\")\n    let sb_sfx_slash = feedBank(\"8.31.1|8.32.1|8.33.1|8.34.1|8.35.1|8.36.1|8.37.1|8.38.1|8.39.1|8.40.1|8.41.1|8.42.2\")\n    let sb_sfx_zap = feedBank(\"8.43.1|8.44.1|8.45.2|8.46.1|8.47.2|8.48.1\")\n    let sb_sfx_splash = feedBank(\"8.49.2|8.50.2|8.51.1|8.52.1|8.53.2|8.54.1|8.55.2|8.56.1|8.57.2\")\n    let sb_sfx_voice = feedBank(\"10.1.4|10.2.6|10.3.4|10.4.4|10.5.6|10.6.4|10.7.11|10.8.6|10.9.4|10.10.1\")\n    let sb_magician_left_easy = feedBank(\"11.1.3|11.2.6|11.3.7|11.4.6|11.5.6|11.6.7|11.7.6|11.8.6|11.9.6|11.10.7|11.11.6|11.12.6|11.13.7|11.14.6|11.15.6|11.16.6|11.17.6|11.18.6|11.19.6|11.20.6|11.21.6|11.22.7|11.23.6|11.24.6|11.25.6|11.26.6|11.27.7|11.28.7|11.29.7|11.30.6|11.31.6|11.32.8|11.33.7|11.34.6|11.35.7|11.36.5|11.37.6|11.38.8|11.39.6|11.40.6|11.41.6|11.42.6|11.43.6|11.44.7|11.45.6|11.46.7|11.47.7|11.48.8|11.49.6|11.50.7|11.51.6|11.52.6|11.53.7|11.54.8|11.55.7|11.56.6|11.57.7|11.58.6|11.59.6|11.60.6|11.61.6\")\n    let sb_magician_left_medium = feedBank(\"11.62.7|11.63.6|11.64.6|11.65.8|11.66.7|11.67.8|11.68.8|11.69.8|11.70.7|11.71.7|11.72.6|11.73.6|11.74.6|11.75.6|11.76.6|11.77.7|11.78.6|11.79.7|11.80.6|11.81.6|11.82.6|11.83.7|11.84.6|11.85.6|11.86.6|11.87.7|11.88.6|11.89.6|11.90.7|11.91.6|11.92.6|11.93.6|11.94.6|11.95.6|11.96.7|11.97.6|11.98.6|11.99.7|11.100.6|11.101.6|11.102.6|11.103.7|11.104.6|11.105.8|11.106.6|11.107.6|11.108.6|11.109.7|11.110.6|11.111.7|11.112.7|11.113.6|11.114.6|11.115.7|11.116.6|11.117.7|11.118.7|11.119.6|11.120.6|11.121.6|11.122.7|11.123.7|11.124.6|11.125.6|11.126.6|11.127.8|11.128.7|11.129.6|11.130.8|11.131.7|11.132.6|11.133.7|11.134.6|11.135.6|11.136.7|11.137.7\")\n    let sb_magician_left_hard = feedBank(\"11.219.7|11.220.6|11.221.6|11.222.6|11.223.6|11.224.6|11.225.7|11.226.7|11.227.6|11.228.6|11.229.6|11.230.8|11.231.7|11.232.7|11.233.6|11.234.6|11.235.6|11.236.8|11.237.7|11.238.7|11.239.6|11.240.6|11.241.8|11.242.7|11.243.7|11.244.6|11.245.6|11.246.7|11.247.7|11.248.7|11.249.7|11.250.6|11.251.6|11.252.6|11.253.6|11.254.6|11.255.6|11.256.6|11.257.6|11.258.7|11.259.7|11.260.7|11.261.6|11.262.6|11.263.6|11.264.6|11.265.6|11.266.6|11.267.7|11.268.6|11.269.6|11.270.6|11.271.6|11.272.6|11.273.6|11.274.6|11.275.7|11.276.6|11.277.6|11.278.7|11.279.7|11.280.7|11.281.6|11.282.6|11.283.7|11.284.9|11.285.7|11.286.6|11.287.6|11.288.6|11.289.7|11.290.7|11.291.6|11.292.6|11.293.7|11.294.7|11.295.6|11.296.7|11.297.6|11.298.6|11.299.6|11.300.6|11.301.6|11.302.6|11.303.7|11.304.6|11.305.6|11.306.7|11.307.6|\")\n    let sb_magician_right_easy = feedBank(\"11.159.6|11.160.6|11.161.7|11.162.6|11.163.7|11.164.7|11.165.6|11.166.6|11.167.7|11.168.7|11.169.6|11.170.8|11.171.7|11.172.7|11.173.6|11.174.6|11.175.6|11.176.6|11.177.7|11.178.6|11.179.6|11.180.6|11.181.6|11.182.7|11.183.6|11.184.6|11.185.6|11.186.6|11.187.8|11.188.7|11.189.6|11.190.6|11.191.6|11.192.6|11.193.6|11.194.6|11.195.5|11.196.6|11.197.6|11.198.6|11.199.7|11.200.6|11.201.6|11.202.6|11.203.6|11.204.6|11.205.6|11.206.6|11.207.6|11.208.6|11.209.6|11.210.7|11.211.7|11.212.7|11.213.6|11.214.7|11.215.7|11.216.6|11.217.7|11.218.6\")\n    let sb_magician_right_medium = feedBank(\"11.219.7|11.220.6|11.221.6|11.222.6|11.223.6|11.224.6|11.225.7|11.226.7|11.227.6|11.228.6|11.229.6|11.230.8|11.231.7|11.232.7|11.233.6|11.234.6|11.235.6|11.236.8|11.237.7|11.238.7|11.239.6|11.240.6|11.241.8|11.242.7|11.243.7|11.244.6|11.245.6|11.246.7|11.247.7|11.248.7|11.249.7|11.250.6|11.251.6|11.252.6|11.253.6|11.254.6|11.255.6|11.256.6|11.257.6|11.258.7|11.259.7|11.260.7|11.261.6|11.262.6|11.263.6|11.264.6|11.265.6|11.266.6|11.267.7|11.268.6|11.269.6|11.270.6|11.271.6|11.272.6|11.273.6|11.274.6|11.275.7|11.276.6|11.277.6|11.278.7|11.279.7|11.280.7|11.281.6|11.282.6|11.283.7|11.284.9|11.285.7|11.286.6|11.287.6\")\n    let sb_magician_right_hard = feedBank(\"11.288.6|11.289.7|11.290.7|11.291.6|11.292.6|11.293.7|11.294.7|11.295.6|11.296.7|11.297.6|11.298.6|11.299.6|11.300.6|11.301.6|11.302.6|11.303.7|11.304.6|11.305.6|11.306.7|11.307.6|11.308.7|11.309.6|11.310.6|11.311.6|11.312.7|11.313.7|11.314.6|11.315.7\")\n    let sb_mario_name = feedBank(\"12.1.2|12.2.1|12.4.2|12.5.3\")\n    let sb_mario_intro = feedBank(\"12.3.4|12.6.2|12.7.212.112.1|12.113.1|\")\n    let sb_mario_ready = feedBank(\"12.8.1|12.9.2|12.10.2|12.11.1|12.12.1|12.13.2|12.14.2|12.15.2|12.16.2|12.17.2|12.18.1\")\n    let sb_mario_yay = feedBank(\"12.19.1|12.20.1|12.21.1|12.22.1|12.23.1|12.24.1|12.25.1|12.26.1|12.27.1|12.28.1|12.29.1|12.30.1|12.31.1|12.32.1|12.33.1|12.34.1|12.35.1|12.36.1|12.37.1|12.38.1|12.39.1|12.40.1|12.41.1|12.42.1|12.43.1|12.44.1|12.45.1|12.46.1|12.47.1|12.48.1|12.49.1|12.50.1|12.51.2|12.52.2|12.53.2|12.54.2|12.55.2|12.56.2|12.57.2|12.58.2|12.59.2|12.60.2|12.61.2|12.62.2\")\n    let sb_mario_success = feedBank(\"12.63.1|12.64.2|12.65.2|12.66.2|12.67.2|12.68.3|12.69.3|12.70.3|12.71.3|12.72.3\")\n    let sb_mario_won = feedBank(\"12.73.2|12.74.2|12.75.3|12.76.3|12.77.3\")\n    let sb_mario_ouch = feedBank(\"12.78.1|12.79.1|12.80.1|12.81.1|12.82.1|12.83.1|12.84.1|12.85.1|12.86.1|12.87.1|12.88.1|12.89.1|12.90.1|12.91.1|12.92.1|12.93.1|12.94.1|12.95.1\")\n    let sb_mario_nay = feedBank(\"12.96.1|12.97.1|12.98.1|12.99.1|12.100.1|12.101.1|12.102.2|12.103.1|12.104.1|12.105.1|12.106.1|12.107.1|12.108.1|12.109.1|12.110.2|12.111.2\")\n    let sb_mario_failure = feedBank(\"12.114.2|12.115.2|12.116.2|12.117.1\")\n    let sb_mario_lost = feedBank(\"12.118.3|12.119.3|12.120.4|12.121.1\")\n    let sb_mario_hurry = feedBank(\"12.122.44\")\n    \n    let playlist_tutorial = makePlaylist(sb_music_tutorial)\n    let playlist_awaiting = makePlaylist(sb_music_awaiting)\n    let playlist_level = makePlaylist(sb_music_level)\n    let playlist_won = makePlaylist(sb_music_won)\n    let playlist_lost = makePlaylist(sb_music_lost)\n    let playlist_correct = makePlaylist(sb_sfx_correct)\n    let playlist_incorrect = makePlaylist(sb_sfx_incorrect)\n    let playlist_intro = makePlaylist(sb_music_intro)\n    let playlist_boom = makePlaylist(sb_sfx_boom)\n    let playlist_smash = makePlaylist(sb_sfx_smash)\n    let playlist_falling = makePlaylist(sb_sfx_falling)\n    let playlist_cannon = makePlaylist(sb_sfx_cannon)\n    let playlist_fire = makePlaylist(sb_sfx_fire)\n    let playlist_ghost = makePlaylist(sb_sfx_ghost)\n    let playlist_hit = makePlaylist(sb_sfx_hit)\n    let playlist_slash = makePlaylist(sb_sfx_slash)\n    let playlist_zap = makePlaylist(sb_sfx_zap)\n    let playlist_splash = makePlaylist(sb_sfx_splash)\n    let playlist_magician_left_easy = makePlaylist(sb_magician_left_easy)\n    let playlist_magician_left_medium = makePlaylist(sb_magician_left_medium)\n    let playlist_magician_left_hard = makePlaylist(sb_magician_left_hard)\n    let playlist_magician_right_easy = makePlaylist(sb_magician_right_easy)\n    let playlist_magician_right_medium = makePlaylist(sb_magician_right_medium)\n    let playlist_magician_right_hard = makePlaylist(sb_magician_right_hard)\n    let playlist_mario_name = makePlaylist(sb_mario_name)\n    let playlist_mario_intro = makePlaylist(sb_mario_intro)\n    let playlist_mario_ready = makePlaylist(sb_mario_ready)\n    let playlist_mario_yay = makePlaylist(sb_mario_yay)\n    let playlist_mario_success = makePlaylist(sb_mario_success)\n    let playlist_mario_won = makePlaylist(sb_mario_won)\n    let playlist_mario_ouch = makePlaylist(sb_mario_ouch)\n    let playlist_mario_nay = makePlaylist(sb_mario_nay)\n    let playlist_mario_failure = makePlaylist(sb_mario_failure)\n    let playlist_mario_lost = makePlaylist(sb_mario_lost)\n    let playlist_mario_hurry = makePlaylist(sb_mario_hurry)\n    let playtimeMusic = 0\n    let playtimePlayer = 0\n    let playtimeSfxVoice = 0\n\n    function takeRotate(PlaylistIn: number[]) {\n        let returnTrack = PlaylistIn.shift()\n        PlaylistIn.push(returnTrack)\n        return returnTrack\n    }\n    function feedBank(BankString: string) {\n        let returnBank: number[][] = []\n        let BankSplit = BankString.split(\"|\")\n        for (let soundString of BankSplit) {\n            returnBank.push([parseFloat(soundString.split(\".\")[0]), parseFloat(soundString.split(\".\")[1]), parseFloat(soundString.split(\".\")[2])])\n        }\n        return returnBank\n    }\n    function makePlaylist(SoundBank: any[]) {\n        let returnList: number[] = []\n        let orderedList: number[] = []\n        for (let soundNo = 0; soundNo <= SoundBank.length - 1; soundNo++) {\n            orderedList.push(soundNo)\n        }\n        while (orderedList.length > 0) {\n            let randTrack = randint(0, orderedList.length - 1)\n            returnList.push(orderedList.removeAt(randTrack))\n        }\n        return returnList\n    }\n    function bankPlay(mp3bit:mp3type, SoundBank: number[][], trackIndex: number) {\n        let theSong = SoundBank[trackIndex]\n        if (mp3bit == mp3type.music) {\n            serial.redirect(mp3musicPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n            playtimeMusic = theSong[2]\n        } else if (mp3bit == mp3type.player) {\n            serial.redirect(mp3playerPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n            playtimePlayer = theSong[2]\n        } else if (mp3bit == mp3type.sfxvoice) {\n            serial.redirect(mp3sfxPin, SerialPin.USB_RX, BaudRate.BaudRate9600)\n            playtimeSfxVoice = theSong[2]\n        }\n        dataArr[3] = 15\n        dataArr[5] = theSong[0]\n        dataArr[6] = theSong[1]\n        mp3_checkSum()\n        mp3_sendDataFast()\n    }\n\n\n    //% blockId=NL_MP3_PlaytimeMusic\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"duration of music\"\n    export function mp3durationMusic(): number{\n        return playtimeMusic\n    }\n\n    //% blockId=NL_MP3_PlaytimePlayer\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"duration of player sound\"\n    export function mp3durationPlayer(): number {\n        return playtimePlayer\n    }\n\n    //% blockId=NL_MP3_PlaytimeSFX\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"duration of sfx/voice\"\n    export function mp3durationSfxVoice(): number {\n        return playtimeSfxVoice\n    }\n\n\n\n    //% blockId=NL_MP3_MusicPlay\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Play %genre music\"\n    export function mp3musicPlay(genre: musicGenre): void {\n        if (genre == musicGenre.tutorial){\n            bankPlay(mp3type.music, sb_music_tutorial, takeRotate(playlist_tutorial))\n        } else if (genre == musicGenre.awaiting) {\n            bankPlay(mp3type.music, sb_music_awaiting, takeRotate(playlist_awaiting))\n        } else if (genre == musicGenre.intro){\n            bankPlay(mp3type.music, sb_music_intro, takeRotate(playlist_intro))\n        } else if (genre == musicGenre.level) {\n            bankPlay(mp3type.music, sb_music_level, takeRotate(playlist_level))\n        } else if (genre == musicGenre.won) {\n            bankPlay(mp3type.music, sb_music_won, takeRotate(playlist_won))\n        } else if (genre == musicGenre.lost) {\n            bankPlay(mp3type.music, sb_music_lost, takeRotate(playlist_lost))\n        }\n    }\n\n    //% blockId=NL_MP3_PlayerSay\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Say %saying as player\"\n    export function mp3sayPlay(saying: playerSaying): void {\n        if(saying == playerSaying.ready){\n            bankPlay(mp3type.player, sb_mario_ready, takeRotate(playlist_mario_ready))\n        }else if (saying == playerSaying.yay){\n            bankPlay(mp3type.player, sb_mario_yay, takeRotate(playlist_mario_yay))\n        } else if (saying == playerSaying.intro) {\n            bankPlay(mp3type.player, sb_mario_intro, takeRotate(playlist_mario_intro))\n        } else if (saying == playerSaying.nay) {\n            bankPlay(mp3type.player, sb_mario_nay, takeRotate(playlist_mario_nay))\n        } else if (saying == playerSaying.ouch) {\n            bankPlay(mp3type.player, sb_mario_ouch, takeRotate(playlist_mario_ouch))\n        } else if (saying == playerSaying.success) {\n            bankPlay(mp3type.player, sb_mario_success, takeRotate(playlist_mario_success))\n        } else if (saying == playerSaying.failure) {\n            bankPlay(mp3type.player, sb_mario_failure, takeRotate(playlist_mario_failure))\n        } else if (saying == playerSaying.won) {\n            bankPlay(mp3type.player, sb_mario_won, takeRotate(playlist_mario_won))\n        } else if (saying == playerSaying.lost) {\n            bankPlay(mp3type.player, sb_mario_lost, takeRotate(playlist_mario_lost))\n        } else if (saying == playerSaying.hurry) {\n            bankPlay(mp3type.player, sb_mario_hurry, takeRotate(playlist_mario_hurry))\n        }\n    }\n\n    //% blockId=NL_MP3_VoicePlay\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Say %voice as voice\"\n    export function mp3voicePlay(voice: voiceSaying): void {\n        if (voice == voiceSaying.name) {\n\n        } else if (voice == voiceSaying.begin) {\n\n        } else if (voice == voiceSaying.retry) {\n\n        } else if (voice == voiceSaying.next) {\n\n        } else if (voice == voiceSaying.complete) {\n\n        } else if (voice == voiceSaying.gameover) {\n\n        } else if (voice == voiceSaying.welcome) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 0)\n        } else if (voice == voiceSaying.intro) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 1)\n        } else if (voice == voiceSaying.howto1) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 2)\n        } else if (voice == voiceSaying.howto2) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 3)\n        } else if (voice == voiceSaying.howto3) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 4)\n        } else if (voice == voiceSaying.howto4) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 5)\n        } else if (voice == voiceSaying.howto5) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 6)\n        } else if (voice == voiceSaying.howto6) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 7)\n        } else if (voice == voiceSaying.howto7) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 8)\n        } else if (voice == voiceSaying.howto8) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_voice, 9)\n        } else if (voice == voiceSaying.howto9) {\n\n        }\n    }\n\n    //% blockId=NL_MP3_MagicianSay\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Magician says on the %side difficulty %difficulty\"\n    export function mp3magician(side: magicianSaysSide, difficulty: magicianDifficulty): void {\n        if (side == magicianSaysSide.left) {\n            if (difficulty == magicianDifficulty.easy) {\n\n            } else if (difficulty = magicianDifficulty.medium) {\n\n            } else if (difficulty = magicianDifficulty.hard) {\n\n            }\n        } else if (side = magicianSaysSide.right) {\n            if (difficulty == magicianDifficulty.easy) {\n\n            } else if (difficulty = magicianDifficulty.medium) {\n\n            } else if (difficulty = magicianDifficulty.hard) {\n\n            }\n        } \n    }\n\n    //% blockId=NL_MP3_SfxPlay\n    //% subcategory=\"MP3\" group=\"MP3\"\n    //% block=\"Play %sfx sound effect\"\n    export function mp3sfxPlay(sfx: sfxType): void {\n        if(sfx == sfxType.correct){\n            bankPlay(mp3type.sfxvoice, sb_sfx_correct, takeRotate(playlist_correct))\n        }else if (sfx == sfxType.incorrect){\n            bankPlay(mp3type.sfxvoice, sb_sfx_incorrect, takeRotate(playlist_incorrect))\n        }else if (sfx == sfxType.ghost){\n            bankPlay(mp3type.sfxvoice, sb_sfx_ghost, takeRotate(playlist_ghost))\n        }else if (sfx == sfxType.fire){\n            bankPlay(mp3type.sfxvoice, sb_sfx_fire, takeRotate(playlist_fire))\n        }else if (sfx == sfxType.explosion){\n            bankPlay(mp3type.sfxvoice, sb_sfx_boom, takeRotate(playlist_boom))\n        }else if (sfx == sfxType.splash){\n            bankPlay(mp3type.sfxvoice, sb_sfx_splash, takeRotate(playlist_splash))\n        } else if (sfx == sfxType.spark) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_zap, takeRotate(playlist_zap))\n        } else if (sfx == sfxType.slash) {\n            bankPlay(mp3type.sfxvoice, sb_sfx_slash, takeRotate(playlist_slash))\n        }\n    }\n/// END SOUND BANK ///\n\n/// BEGIN MOTOR & RELAY ///\n    const kong_address = 0x10\n    export enum MotorList { M1=1, M2=2 }\n    export enum motors{ redrack=16, shark=4, ghost=5, cannon=8, oarrack=7, shell=6, door=3, dragon=9, wheel=1, fan=2 }\n    export enum motorState { min, max, mid, off }\n    export enum fogLevels { none = 0, light = 1, medium = 2, heavy = 3 }\n    export enum sockState { dancing = 1, still = 0 }\n    let motor_wheel_max = 12; let motor_wheel_min = 0\n    let servo_redrack_max = 150; let servo_redrack_min = 100\n    let servo_cannon_min = 135; let servo_cannon_max = 65\n    let servo_shark_min = 20; let servo_shark_max = 85\n    let servo_oarrack_min = 60; let servo_oarrack_max = 110\n    let servo_ghost_min = 110; let servo_ghost_max = 40\n    let servo_shell_min = 170; let servo_shell_max = 100\n    let servo_door_min = 50; let servo_door_max = 140; let servo_door_mid = 100\n    let motor_fan_min = 0; let motor_fan_mid = 50; let motor_fan_max = 100\n    let servo_dragon_min = 90; let servo_dragon_max = 79\n\n    export function servoSet(servo: motors, angle: number): void {\n        let buf = pins.createBuffer(4);\n        buf[0] = servo;\n        buf[1] = angle;\n        buf[2] = 0;\n        buf[3] = 0;\n        pins.i2cWriteBuffer(kong_address, buf);\n    }\n\n    export function motorSpeed(motor: MotorList, speed: number): void {\n        let buf = pins.createBuffer(4);\n        buf[0] = motor\n        buf[1] = 1;\n        if (speed < 0) {\n            buf[1] = 2;\n            speed = speed * -1\n        }\n        buf[2] = speed;\n        buf[3] = 0;\n        pins.i2cWriteBuffer(kong_address, buf);\n    }\n\n    //% blockId=NL_MOTOR_Set \n    //% block=\"Set %motor to %state\"\n    //% subcategory=\"Motor\" group=\"Motor\"\n    export function motorSet(motor:motors, state:motorState):void{\n        if (motor == motors.redrack){\n            if (state == motorState.min){ servoSet(motor, servo_redrack_min) } \n            else if (state == motorState.max){ servoSet(motor, servo_redrack_max) }\n        } if (motor == motors.shark) {\n            if (state == motorState.min) { servoSet(motor, servo_shark_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_shark_max) }\n        } if (motor == motors.ghost) {\n            if (state == motorState.min) { servoSet(motor, servo_ghost_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_ghost_max) }\n        } if (motor == motors.cannon) {\n            if (state == motorState.min) { servoSet(motor, servo_cannon_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_cannon_max) }\n        } if (motor == motors.oarrack) {\n            if (state == motorState.min) { servoSet(motor, servo_oarrack_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_oarrack_max) }\n        } if (motor == motors.shell) {\n            if (state == motorState.min) { servoSet(motor, servo_shell_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_shell_max) }\n        } if (motor == motors.door) {\n            if (state == motorState.min) { servoSet(motor, servo_door_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_door_max) }\n            else if (state == motorState.mid) { servoSet(motor, servo_door_mid) }\n        } if (motor == motors.dragon) {\n            if (state == motorState.min) { servoSet(motor, servo_dragon_min) }\n            else if (state == motorState.max) { servoSet(motor, servo_dragon_max) }\n        } if (motor == motors.wheel) {\n            if (state == motorState.min) { motorSpeed(MotorList.M1, motor_wheel_min) }\n            else if (state == motorState.max) { motorSpeed(MotorList.M1, motor_wheel_max) }\n            else if (state == motorState.off) { motorSpeed(MotorList.M1, 0) }\n        } if (motor == motors.fan) {\n            if (state == motorState.min) { motorSpeed(MotorList.M2, motor_fan_min) }\n            else if (state == motorState.mid) { motorSpeed(MotorList.M2, motor_fan_mid) }\n            else if (state == motorState.max) { motorSpeed(MotorList.M2, motor_fan_max) }\n            else if (state == motorState.off) { motorSpeed(MotorList.M2, 0) }\n        }\n    }\n\n    //% blockId=NL_RELAY_FogSet \n    //% block=\"set fog level to %level\"\n    //% subcategory=\"Motor\" group=\"Motor\"\n    export function setFog(fog:fogLevels):void{\n        if (fog == fogLevels.none){\n            pins.digitalWritePin(DigitalPin.P2, 1)\n            pins.digitalWritePin(DigitalPin.P8, 1)\n            pins.digitalWritePin(DigitalPin.P13, 1)\n        } else if (fog == fogLevels.light){\n            pins.digitalWritePin(DigitalPin.P2, 1)\n            pins.digitalWritePin(DigitalPin.P8, 1)\n            pins.digitalWritePin(DigitalPin.P13, 0)\n        } else if (fog == fogLevels.medium) {\n            pins.digitalWritePin(DigitalPin.P2, 0)\n            pins.digitalWritePin(DigitalPin.P8, 1)\n            pins.digitalWritePin(DigitalPin.P13, 0)\n        } else if (fog == fogLevels.heavy) {\n            pins.digitalWritePin(DigitalPin.P2, 0)\n            pins.digitalWritePin(DigitalPin.P8, 0)\n            pins.digitalWritePin(DigitalPin.P13, 0)\n        }\n    }\n\n    //% blockId=NL_RELAY_SockSet\n    //% block=\"set dancing sock to %sockState\"\n    //% subcategory=\"Motor\" group=\"Motor\"\n    export function setSock(state: sockState): void {\n        if(state==sockState.dancing){ pins.digitalWritePin(DigitalPin.P12, 0) }\n        else{ pins.digitalWritePin(DigitalPin.P12, 1) }\n    }\n\n/// END MOTOR & RELAY ///\n\n/// BEGIN OLED\n\n    let d1 = [0, 0, 0, 20, 36, 35, 54, 0, 28, 65, 8, 8, 160, 8, 96, 32, 62, 0, 98, 34, 24, 39, 60, 1, 54, 6, 0, 0, 8, 20, 65, 2, 50, 126, 127, 62, 127, 127, 127, 62, 127, 65, 32, 127, 127, 127, 127, 62, 127, 62, 127, 38, 1, 63, 31, 63, 99, 3, 97, 127, 2, 65, 4, 128, 1, 32, 127, 56, 56, 56, 8, 24, 127, 0, 128, 127, 65, 124, 124, 56, 252, 24, 0, 72, 4, 60, 28, 60, 68, 28, 68, 8, 0, 65, 2]\n    let d2 = [0, 95, 7, 127, 42, 19, 73, 5, 34, 34, 42, 8, 96, 8, 96, 16, 81, 66, 81, 65, 20, 69, 74, 113, 73, 73, 54, 172, 20, 20, 34, 1, 73, 9, 73, 65, 65, 73, 9, 65, 8, 127, 64, 8, 64, 2, 4, 65, 9, 65, 9, 73, 1, 64, 32, 64, 20, 4, 81, 65, 4, 65, 2, 128, 2, 84, 72, 68, 68, 84, 126, 164, 8, 125, 132, 16, 127, 4, 8, 68, 36, 36, 124, 84, 127, 64, 32, 64, 40, 160, 100, 54, 127, 54, 1]\n    let d3 = [0, 0, 0, 20, 127, 8, 85, 3, 65, 28, 28, 62, 0, 8, 0, 8, 73, 127, 73, 73, 18, 69, 73, 9, 73, 73, 54, 108, 34, 20, 20, 81, 121, 9, 73, 65, 65, 73, 9, 65, 8, 65, 65, 20, 64, 12, 8, 65, 9, 81, 25, 73, 127, 64, 64, 56, 8, 120, 73, 65, 8, 127, 1, 128, 4, 84, 68, 68, 68, 84, 9, 164, 4, 0, 125, 40, 64, 24, 4, 68, 36, 36, 8, 84, 68, 64, 64, 48, 16, 160, 84, 65, 0, 8, 1]\n    let d4 = [0, 0, 7, 127, 42, 100, 34, 0, 0, 0, 42, 8, 0, 8, 0, 4, 69, 64, 73, 73, 127, 69, 73, 5, 73, 41, 0, 0, 65, 20, 8, 9, 65, 9, 73, 65, 34, 73, 9, 81, 8, 0, 63, 34, 64, 2, 16, 65, 9, 33, 41, 73, 1, 64, 32, 64, 20, 4, 69, 0, 16, 0, 2, 128, 0, 84, 68, 40, 72, 84, 2, 164, 4, 0, 0, 68, 0, 4, 124, 56, 24, 252, 4, 36, 0, 124, 32, 64, 40, 124, 76, 0, 0, 0, 2]\n    let d5 = [0, 0, 0, 20, 18, 98, 80, 0, 0, 0, 8, 8, 0, 8, 0, 2, 62, 0, 70, 54, 16, 57, 48, 3, 54, 30, 0, 0, 0, 20, 0, 6, 62, 126, 54, 34, 28, 65, 1, 114, 127, 0, 1, 65, 64, 127, 127, 62, 6, 94, 70, 50, 1, 63, 31, 63, 99, 3, 67, 0, 32, 0, 4, 128, 0, 120, 56, 0, 127, 24, 0, 124, 120, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 28, 60, 68, 0, 68, 0, 0, 0, 1]\n\n    let display = [\" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\")]\n    let desired = [\" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\"), \" . . . . . . . . . . . . . . . \".split(\".\")]\n\n    //% blockId=NL_OLED_Update3\n    //% block=\"oled update from buffer\"\n    //% subcategory=\"Display\" group=\"Display\"\n    export function changeThree(): void{\n        let updated: string[][] = []\n        let count = 0\n        for (let row=0; row<8; row++){\n            for(let col=0; col<16; col++){\n                let refChar = desired[row][col]\n                if (refChar != display[row][col]){\n                    writeChar(refChar,row,col)\n                    display[row][col] = refChar\n                    count++\n                    if (count >= 3){\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    //% blockId=NL_OLED_PrintLine\n    //% block=\"print %text to oled buffer line %line\"\n    //% subcategory=\"Display\" group=\"Display\"\n    export function printLine(text:any, line:number): void{\n        let thisText = text + \"\"\n        for (let i = 0; i < 16; i++){\n            if (i < thisText.length){\n                desired[line][i]=thisText.charAt(i)\n            } else{\n                desired[line][i]=\" \"\n            }\n        }\n    }\n\n    function oledcmd(c: number) {\n        pins.i2cWriteNumber(0x3c, c, NumberFormat.UInt16BE);\n    }\n\n    function setText(row: number, column: number) {\n        oledcmd(0xB0 + row);            //set page address\n        oledcmd(0x00 + (8 * column & 0x0F));  //set column lower address\n        oledcmd(0x10 + ((8 * column >> 4) & 0x0F));   //set column higher address\n    }\n\n    //% blockId=NL_OLED_Init \n    //% block=\"initiate the oled screen\"\n    //% subcategory=\"Display\" group=\"Display\"\n    export function oledinit(): void {\n        oledcmd(0xAE);  // Set display OFF\n        oledcmd(0xD5);  // Set Display Clock Divide Ratio / OSC Frequency 0xD4\n        oledcmd(0x80);  // Display Clock Divide Ratio / OSC Frequency \n        oledcmd(0xA8);  // Set Multiplex Ratio\n        oledcmd(0x3F);  // Multiplex Ratio for 128x64 (64-1)\n        oledcmd(0xD3);  // Set Display Offset\n        oledcmd(0x00);  // Display Offset\n        oledcmd(0x40);  // Set Display Start Line\n        oledcmd(0x8D);  // Set Charge Pump\n        oledcmd(0x14);  // Charge Pump (0x10 External, 0x14 Internal DC/DC)\n        oledcmd(0xA1);  // Set Segment Re-Map\n        oledcmd(0xC8);  // Set Com Output Scan Direction\n        oledcmd(0xDA);  // Set COM Hardware Configuration\n        oledcmd(0x12);  // COM Hardware Configuration\n        oledcmd(0x81);  // Set Contrast\n        oledcmd(0xCF);  // Contrast\n        oledcmd(0xD9);  // Set Pre-Charge Period\n        oledcmd(0xF1);  // Set Pre-Charge Period (0x22 External, 0xF1 Internal)\n        oledcmd(0xDB);  // Set VCOMH Deselect Level\n        oledcmd(0x40);  // VCOMH Deselect Level\n        oledcmd(0xA4);  // Set all pixels OFF\n        oledcmd(0xA6);  // Set display not inverted\n        oledcmd(0xAF);  // Set display On\n        for (let j = 0; j < 8; j++) {\n            setText(j, 0);\n            {\n                for (let i = 0; i < 16; i++)  //clear all columns\n                {\n                    writeChar(\" \",j,i)\n                }\n            }\n        }\n    }\n\n    function writeChar(char: string, row: number, column: number) {\n        setText(row, column)\n        let i = char.charCodeAt(0) - 32\n        pins.i2cWriteNumber(0x3c, 0x4000, NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000 + d1[i], NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000 + d2[i], NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000 + d3[i], NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000 + d4[i], NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000 + d5[i], NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000, NumberFormat.UInt16BE)\n        pins.i2cWriteNumber(0x3c, 0x4000, NumberFormat.UInt16BE)\n    }\n\n/// END OLED\n\n\n/// BEGIN DIGITS\n\n    let _SEGMENTS = [0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71];\n\n    //% blockId=nl_digits_create block=\"4-Digit cPin %cPin dPin %dPin\"\n    //% subcategory=\"Display\" group=\"Display\"\n    export function tm1637Create(cPin: DigitalPin, dPin: DigitalPin): TM1637LEDs {\n        let display = new TM1637LEDs();\n        display.clk = cPin\n        display.dio = dPin\n        display.brightness = 7;\n        display.init();\n        return display;\n    }\n    export class TM1637LEDs {\n        buf: Buffer;\n        clk: DigitalPin;\n        dio: DigitalPin;\n        _ON: number;\n        brightness: number;\n        init(): void {\n            pins.digitalWritePin(this.clk, 0);\n            pins.digitalWritePin(this.dio, 0);\n            this._ON = 8;\n            this.buf = pins.createBuffer(4);\n            this.clear();\n        }\n        _start() {\n            pins.digitalWritePin(this.dio, 0);\n            pins.digitalWritePin(this.clk, 0);\n        }\n        _stop() {\n            pins.digitalWritePin(this.dio, 0);\n            pins.digitalWritePin(this.clk, 1);\n            pins.digitalWritePin(this.dio, 1);\n        }\n        _write_data_cmd() {\n            this._start();\n            this._write_byte(0x40);\n            this._stop();\n        }\n        _write_dsp_ctrl() {\n            this._start();\n            this._write_byte(0x80 | this._ON | this.brightness);\n            this._stop();\n        }\n        _write_byte(b: number) {\n            for (let i = 0; i < 8; i++) {\n                pins.digitalWritePin(this.dio, (b >> i) & 1);\n                pins.digitalWritePin(this.clk, 1);\n                pins.digitalWritePin(this.clk, 0);\n            }\n            pins.digitalWritePin(this.clk, 1);\n            pins.digitalWritePin(this.clk, 0);\n        }\n        _intensity(val: number = 7) {\n            this._ON = 8;\n            this.brightness = val - 1;\n            this._write_data_cmd();\n            this._write_dsp_ctrl();\n        }\n        _dat(bit: number, dat: number) {\n            this._write_data_cmd();\n            this._start();\n            this._write_byte(0xC0 | (bit % 4))\n            this._write_byte(dat);\n            this._stop();\n            this._write_dsp_ctrl();\n        }\n        \n        //% blockId=nl_digits_digit block=\"%display|show single number|%num|at digit|%bit\"\n        //% subcategory=\"Display\" group=\"Display\"\n        //% bit.defl=1 bit.min=0 bit.max=9\n        showbit(num: number = 5, bit: number = 0) {\n            bit = Math.map(bit, 4, 1, 0, 3)\n            this.buf[bit % 4] = _SEGMENTS[num % 16]\n            this._dat(bit, _SEGMENTS[num % 16])\n        }\n\n        //% blockId=nl_digits_number block=\"%display|show number|%num\"\n        //% subcategory=\"Display\" group=\"Display\"\n        showNumber(num: number) {\n            if (num < 0) {\n                num = -num\n                this.showbit(Math.idiv(num, 1000) % 10)\n                this.showbit(num % 10, 1)\n                this.showbit(Math.idiv(num, 10) % 10, 2)\n                this.showbit(Math.idiv(num, 100) % 10, 3)\n                this._dat(0, 0x40) // '-'\n                // this._dat(0, 0) // blank\n            }\n            else {\n                this.showbit(Math.idiv(num, 1000) % 10)\n                this.showbit(num % 10, 1)\n                this.showbit(Math.idiv(num, 10) % 10, 2)\n                this.showbit(Math.idiv(num, 100) % 10, 3)\n            }\n        }\n\n        //% blockId=\"nl_digits_clear\" block=\"clear display %display\"\n        //% subcategory=\"Display\" group=\"Display\"\n        clear() {\n            for (let i = 0; i < 4; i++) {\n                this._dat(i, 0)\n                this.buf[i] = 0\n            }\n        }\n    }\n\n/// END DIGITS\n\n}\n\n\n","pxt.json":"{\n    \"name\": \"NotLegosMaster\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"displaySendBuffer.asm\",\n        \"planetxbasic.ts\",\n        \"notlegos.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"7.0.42\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":""}}],"shares":[],"lastSaveTime":1728751316969}